var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Suspend_1 = require("./script/Suspend");
var Assembly_1 = require("./script/Assembly");
var Role_1 = require("./script/Role");
var OperationControl_1 = require("./script/OperationControl");
var MainSceneControl_1 = require("./script/MainSceneControl");
var Candy_1 = require("./script/Candy");
var Candy_Explode_1 = require("./script/Candy_Explode");
var Enemy_1 = require("./script/Enemy");
var EnemyBullet_1 = require("./script/EnemyBullet");
var Explode_1 = require("./script/Explode");
var HintWord_1 = require("./script/HintWord");
var Ranking_1 = require("./script/Ranking");
var Resurgence_1 = require("./script/Resurgence");
var RewardWords_1 = require("./script/RewardWords");
var RoleBullet_1 = require("./script/RoleBullet");
var Settlement_1 = require("./script/Settlement");
var StartGame_1 = require("./script/StartGame");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/Suspend.ts", Suspend_1.default);
        reg("script/Assembly.ts", Assembly_1.default);
        reg("script/Role.ts", Role_1.default);
        reg("script/OperationControl.ts", OperationControl_1.default);
        reg("script/MainSceneControl.ts", MainSceneControl_1.default);
        reg("script/Candy.ts", Candy_1.default);
        reg("script/Candy_Explode.ts", Candy_Explode_1.default);
        reg("script/Enemy.ts", Enemy_1.default);
        reg("script/EnemyBullet.ts", EnemyBullet_1.default);
        reg("script/Explode.ts", Explode_1.default);
        reg("script/HintWord.ts", HintWord_1.default);
        reg("script/Ranking.ts", Ranking_1.default);
        reg("script/Resurgence.ts", Resurgence_1.default);
        reg("script/RewardWords.ts", RewardWords_1.default);
        reg("script/RoleBullet.ts", RoleBullet_1.default);
        reg("script/Settlement.ts", Settlement_1.default);
        reg("script/StartGame.ts", StartGame_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "top";
    GameConfig.alignH = "center";
    GameConfig.startScene = "scene/MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Assembly":3,"./script/Candy":4,"./script/Candy_Explode":5,"./script/Enemy":6,"./script/EnemyBullet":7,"./script/Explode":8,"./script/HintWord":9,"./script/MainSceneControl":10,"./script/OperationControl":11,"./script/Ranking":12,"./script/Resurgence":13,"./script/RewardWords":14,"./script/Role":15,"./script/RoleBullet":16,"./script/Settlement":17,"./script/StartGame":18,"./script/Suspend":19}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Assembly = /** @class */ (function (_super) {
    __extends(Assembly, _super);
    function Assembly() {
        return _super.call(this) || this;
    }
    Assembly.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化属性*/
    Assembly.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.smokeSwitch = true;
        this.smokeTime = Date.now();
        this.smokeInterval = 500;
        this.initialPX_Machine = this.machine.x;
        // 指示灯1的动画设置
        this.lamp_01 = this.energyLamp_01.getChildByName('lamp_01');
        this.lamp_02 = this.energyLamp_01.getChildByName('lamp_02');
        this.lamp_03 = this.energyLamp_01.getChildByName('lamp_03');
        this.lamp_01.alpha = 0.3;
        this.lamp_02.alpha = 0.3;
        this.lamp_03.alpha = 0.3;
        // 指示灯2的动画设置
        this.lamp_04 = this.energyLamp_02.getChildByName('lamp_04');
        this.lamp_05 = this.energyLamp_02.getChildByName('lamp_05');
        this.lamp_06 = this.energyLamp_02.getChildByName('lamp_06');
        this.lamp_04.alpha = 0.3;
        this.lamp_05.alpha = 0.3;
        this.lamp_06.alpha = 0.3;
        this.LampSwitch = true;
        this.lampTime = Date.now();
        this.lampInterval = 1600;
        // 位移抖动参数
        this.MDirection = Math.random() * 2 === 1 ? 'left' : 'right';
        this.MshakeInterval = 30;
        this.MshakeTime = Date.now();
        this.MshakesTre = 1;
        this.MshakeSwitch = true;
        // 角度抖动参数
        this.RshakeInterval = 30;
        this.RshakeTime = Date.now();
        this.RshakesTre = 2;
        this.RDirection = Math.random() * 2 === 1 ? 'left' : 'right';
        this.RshakeSwitch = true;
        this.timer = this.owner.getChildByName('timer');
        this.timeSchedule = this.timer.getChildByName('timeSchedule');
        this.timerShakeNum = 0;
        this.pipeSk_01 = this.machine.getChildByName('pipeline_01');
        this.pipeSk_02 = this.machine.getChildByName('pipeline_02');
        this.createPipeSk_01();
        this.createPipeSk_02();
        this.lampAni_01();
        this.lampAni_02();
    };
    /**开始机器运动*/
    Assembly.prototype.assemblyStart = function () {
        this.pipeSk_01.play('flow', true);
        this.pipeSk_02.play('flow', true);
    };
    /**创建骨骼动画皮肤*/
    Assembly.prototype.createPipeSk_01 = function () {
        //创建动画模板
        this.pipeSk_01Tem = new Laya.Templet();
        this.pipeSk_01Tem.on(Laya.Event.COMPLETE, this, this.parseComplete_01);
        this.pipeSk_01Tem.on(Laya.Event.ERROR, this, this.onError);
        this.pipeSk_01Tem.loadAni("candy/糖果机器/pipeline_01.sk");
    };
    Assembly.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    Assembly.prototype.parseComplete_01 = function () {
        // 水管动画
        this.pipeSk_01.play('static', true);
    };
    /**创建骨骼动画皮肤*/
    Assembly.prototype.createPipeSk_02 = function () {
        //创建动画模板
        this.pipeSk_02Tem = new Laya.Templet();
        this.pipeSk_02Tem.on(Laya.Event.COMPLETE, this, this.parseComplete_02);
        this.pipeSk_02Tem.on(Laya.Event.ERROR, this, this.onError);
        this.pipeSk_02Tem.loadAni("candy/糖果机器/pipeline_01.sk");
    };
    Assembly.prototype.parseComplete_02 = function () {
        // 水管动画
        this.pipeSk_02.play('static', true);
    };
    /**能量灯动画*/
    Assembly.prototype.lampAni_01 = function () {
        Laya.Tween.to(this.lamp_01, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.lamp_01, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
            Laya.Tween.to(this.lamp_02, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                Laya.Tween.to(this.lamp_02, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                }, []), 0);
                Laya.Tween.to(this.lamp_03, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    Laya.Tween.to(this.lamp_03, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    }, []), 0);
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    /**能量灯动画*/
    Assembly.prototype.lampAni_02 = function () {
        Laya.Tween.to(this.lamp_04, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.lamp_04, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
            Laya.Tween.to(this.lamp_05, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                Laya.Tween.to(this.lamp_05, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                }, []), 0);
                Laya.Tween.to(this.lamp_06, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    Laya.Tween.to(this.lamp_06, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    }, []), 0);
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    /**位移抖动
    * @param target 目标
    */
    Assembly.prototype.moveShake = function (target) {
        if (this.MshakeSwitch) {
            var nowTime = Date.now();
            if (nowTime - this.MshakeTime > this.MshakeInterval) {
                this.MshakeTime = nowTime;
                // 判断目标是什么,然后对比他原来的位置
                var initialPX = //target初始位置
                 void 0; //target初始位置
                if (target === this.machine) {
                    initialPX = this.initialPX_Machine;
                }
                var shakeX = this.MshakesTre; //强度
                if (this.MDirection === "left") {
                    target.x -= this.MshakesTre;
                    if (this.machine.x < initialPX) {
                        this.MDirection = "right";
                    }
                }
                else if (this.MDirection === "right") {
                    target.x += this.MshakesTre;
                    if (this.machine.x > initialPX) {
                        this.MDirection = "left";
                    }
                }
            }
        }
    };
    /**时间抖动抖动
     * 根据进度条的时间来给不同的抖动频率和抖动速度
    */
    Assembly.prototype.timerShake = function () {
        if (this.timeSchedule.value > 0 && this.timeSchedule.value <= 0.15) {
            this.RshakeInterval = 40;
            this.RshakesTre = 2;
        }
        else if (this.timeSchedule.value > 0.15 && this.timeSchedule.value <= 0.4) {
            this.RshakeInterval = 50;
            this.RshakesTre = 1.5;
        }
        else if (this.timeSchedule.value > 0.4 && this.timeSchedule.value <= 0.7) {
            this.RshakeInterval = 60;
            this.RshakesTre = 1;
        }
        else if (this.timeSchedule.value > 0.7 && this.timeSchedule.value <= 1) {
            this.RshakeInterval = 70;
            this.RshakesTre = 0.5;
        }
        else {
            this.RshakeInterval = 70;
            this.RshakesTre = 0.5;
        }
        if (this.RshakeSwitch) {
            var nowTime = Date.now();
            if (nowTime - this.RshakeTime > this.RshakeInterval) {
                this.RshakeTime = nowTime;
                // 目标判断
                if (this.RDirection === "left") {
                    this.timer.rotation = -this.RshakesTre;
                    if (this.timer.rotation < 0) {
                        this.RDirection = "right";
                    }
                }
                else if (this.RDirection === "right") {
                    this.timer.rotation = this.RshakesTre;
                    if (this.timer.rotation > 0) {
                        this.RDirection = "left";
                    }
                }
            }
        }
    };
    Assembly.prototype.onUpdate = function () {
        if (this.selfScene['MainSceneControl'].gameOver) {
            return;
        }
        // 烟囱烟雾特效
        if (this.smokeSwitch) {
            1;
            var nowTime = Date.now();
            if (nowTime - this.smokeTime > this.smokeInterval) {
                // 重置时间
                this.smokeTime = nowTime;
                // 随机时间间隔
                var random = Math.floor(Math.random() * 300) + 100;
                this.smokeInterval = 600 - random;
                // 随机位置
                this.selfScene['MainSceneControl'].explodeAni(this.machine, 650, 190, 'smokeEffects', 1, 10);
            }
        }
        // 指针动作
        this.LongPointer.rotation += 10;
        this.moveShake(this.machine);
        //进度条抖动
        this.timerShake();
        // 指示灯动画
        if (this.LampSwitch) {
            var time = Date.now();
            if (time - this.lampTime > this.lampInterval) {
                this.lampTime = time;
                this.lampAni_01();
                this.lampAni_02();
            }
        }
    };
    Assembly.prototype.onDisable = function () {
    };
    return Assembly;
}(Laya.Script));
exports.default = Assembly;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化*/
    Candy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.candyTagRole = null;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.roleParent = this.mainSceneControl.roleParent;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.selfSpeed = 10;
        this.timerControl = 0;
        this.spaceY = 5;
        this.hintWord = this.mainSceneControl.hintWord;
        this.selected = false;
        this.group = null;
        this.skeleton = this.self.getChildByName('skeleton');
        this.self['Candy'] = this;
        this.createBoneAni();
    };
    /**创建骨骼动画皮肤*/
    Candy.prototype.createBoneAni = function () {
        //创建动画模板
        this.templet = new Laya.Templet();
        this.templet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this.templet.on(Laya.Event.ERROR, this, this.onError);
        this.templet.loadAni("candy/糖果/candyCompilations.sk");
    };
    Candy.prototype.onError = function () {
        console.log('骨骼动画加载错误！');
    };
    Candy.prototype.parseComplete = function () {
        // 播放敌人动画
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                this.skeleton.play('yellow_static', true);
                break;
            case 'redCandy___':
                this.skeleton.play('red_static', true);
                break;
            case 'blueCandy__':
                this.skeleton.play('blue_static', true);
                break;
            case 'greenCandy_':
                this.skeleton.play('green_static', true);
                break;
            default:
                break;
        }
        this.skeleton.x = this.self.width / 2 + 3;
        this.skeleton.y = this.self.height / 2;
        this.skeleton.playbackRate(1);
    };
    /**当第一个糖果被吃掉后的移动函数
     * 移动速度要非常快
    */
    Candy.prototype.moveRules = function () {
        Laya.Tween.to(this.self, { y: this.self.y + this.self.height + this.spaceY }, 10, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**飞到主角身上增加主角属性
    * 并且播放属性增加动画
   */
    Candy.prototype.candyFlyToRole = function () {
        if (this.candyTagRole === null) {
            return;
        }
        // 播放上下翻转动画
        if (this.skeleton) {
            switch (this.self.name.substring(0, 11)) {
                case 'yellowCandy':
                    this.skeleton.play('yellow_turnDown', true);
                    break;
                case 'redCandy___':
                    this.skeleton.play('red_turnDown', true);
                    break;
                case 'blueCandy__':
                    this.skeleton.play('blue_turnDown', true);
                    break;
                case 'greenCandy_':
                    this.skeleton.play('green_turnDown', true);
                    break;
                default:
                    break;
            }
            this.skeleton.playbackRate(2);
        }
        // 基础时间参数，动画的时间会随着位置边近而缩小
        var timePar = 500 + this.group * 100;
        var targetX;
        var targetY = this.candyTagRole.y;
        // x轴的位置偏移
        targetX = this.candyTagRole.x - 50;
        var HalfX;
        var distancePer = 4;
        if (this.self.x > Laya.stage.width / 2) {
            HalfX = this.self.x + (this.candyTagRole.x - this.self.x) * 3 / 5;
        }
        else {
            HalfX = this.self.x - (this.self.x - this.candyTagRole.x) * 3 / 5;
        }
        var HalfY = this.self.y + (this.candyTagRole.y - this.self.y) / distancePer;
        // 糖果本身
        // 第一步放大
        Laya.Tween.to(this.self, { x: HalfX, y: HalfY, scaleX: 1.5, scaleY: 1.5 }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
            // 第二步降落
            Laya.Tween.to(this.self, { x: targetX, y: this.candyTagRole.y, scaleX: 0.6, scaleY: 0.6 }, timePar / 2, null, Laya.Handler.create(this, function () {
                this.self.removeSelf();
                this.hintWordMove();
                this.roleAddProperty();
                this.candyTagRole = null;
            }), 0);
        }), 0);
        // 糖果的影子处理
        var shadow = this.self.getChildByName('shadow');
        // 拉开距离并缩小
        Laya.Tween.to(shadow, { x: -20, y: 100, scaleX: 0.8, scaleY: 0.8, }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
            // 第二部回归
            Laya.Tween.to(shadow, { x: -10, y: 60, scaleX: 0.7, scaleY: 0.7 }, timePar, null, Laya.Handler.create(this, function () {
            }), 0);
        }), 0);
    };
    /**属性增加提示动画*/
    Candy.prototype.hintWordMove = function () {
        var MainSceneControl = this.selfScene['MainSceneControl'];
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                MainSceneControl.createHintWord(this.candyTagRole, '攻击里', 10);
                break;
            case 'redCandy___':
                MainSceneControl.createHintWord(this.candyTagRole, '生命', 5);
                break;
            case 'blueCandy__':
                MainSceneControl.createHintWord(this.candyTagRole, '公鸡速度', 10);
                break;
            case 'greenCandy_':
                MainSceneControl.createHintWord(this.candyTagRole, '防御力', 5);
                break;
            default:
        }
    };
    /**根据糖果的种类增加主角属性规则
     * 并且播放增加属性文字提示动画
    */
    Candy.prototype.roleAddProperty = function () {
        this.self.name = this.self.name.substring(0, 11);
        switch (this.self.name) {
            case 'yellowCandy':
                this.candyTagRole['Role'].role_property.attackValue += 10;
                break;
            case 'redCandy___':
                this.candyTagRole['Role'].role_property.blood += 5;
                break;
            case 'blueCandy__':
                this.candyTagRole['Role'].role_property.attackSpeed += 10;
                break;
            case 'greenCandy_':
                this.candyTagRole['Role'].role_property.defense += 5;
                break;
            default:
                break;
        }
    };
    Candy.prototype.onUpdate = function () {
    };
    Candy.prototype.onDisable = function () {
        if (this.skeleton) {
            this.skeleton.removeSelf();
        }
        // 清理动画
        Laya.Tween.clearAll(this);
        if (this.self.name === 'yellowCandy') {
            Laya.Pool.recover('yellowCandy', this.self);
        }
        else if (this.self.name === 'redCandy___') {
            Laya.Pool.recover('redCandy___', this.self);
        }
        else if (this.self.name === 'blueCandy__') {
            Laya.Pool.recover('blueCandy__', this.self);
        }
        else if (this.self.name === 'greenCandy_') {
            Laya.Pool.recover('greenCandy_', this.self);
        }
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{"./MainSceneControl":10}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化*/
    Candy.prototype.initProperty = function () {
        this.self = this.owner;
        this.pic = this.self.getChildByName('pic');
        this.selfScene = this.self.scene;
        this.explodeTarget = null;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.selfSpeed = 10;
        this.selfHealth = this.self.getChildByName('health');
        this.timerControl = 0;
        this.explode = this.selfScene['MainSceneControl'].explode;
        this.spaceY = 5;
        this.hintWord = this.selfScene['MainSceneControl'].hintWord;
        // 开启敌人预警
        this.selfScene['MainSceneControl'].role_01['Role'].role_Warning = true;
        this.selfScene['MainSceneControl'].role_02['Role'].role_Warning = true;
        this.self['Candy_Explode'] = this;
        this.skeleton = this.self.getChildByName('skeleton');
        this.createBoneAni();
    };
    /**创建骨骼动画皮肤*/
    Candy.prototype.createBoneAni = function () {
        //创建动画模板
        this.templet = new Laya.Templet();
        this.templet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this.templet.on(Laya.Event.ERROR, this, this.onError);
        this.templet.loadAni("candy/糖果/candyCompilations.sk");
    };
    Candy.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    Candy.prototype.parseComplete = function () {
        // 播放敌人动画
        var skeleton;
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                this.skeleton.play('yellow_explode', true);
                break;
            case 'redCandy___':
                this.skeleton.play('red_explode', true);
                break;
            case 'blueCandy__':
                this.skeleton.play('blue_explode', true);
                break;
            case 'greenCandy_':
                this.skeleton.play('green_explode', true);
                break;
            default:
                break;
        }
        this.skeleton.playbackRate(1);
    };
    /**飞到主角身上并且爆炸
     * 被消灭后会原地爆炸，但是不对主角造成伤害
     * 爆炸后通过对应的糖果减少主角的属性
    */
    Candy.prototype.flyToRole = function () {
        // 如果是暂停或者是游戏结束,则不会移动
        if (this.selfScene['MainSceneControl'].gameOver) {
            return;
        }
        if (this.explodeTarget !== null) {
            // x,y分别相减是两点连线向量
            // 向量计算并且归一化，向量长度为1。
            var point = new Laya.Point(this.explodeTarget.x - this.self.x, this.explodeTarget.y - this.self.y);
            point.normalize();
            //向量相加移动
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.explodeTarget.x);
            var differenceY = Math.abs(this.self.y - this.explodeTarget.y);
            if (differenceX < 50 && differenceY < 50) {
                this.self.removeSelf();
                this.selfScene['MainSceneControl'].explodeAni(this.selfScene, this.self.x, this.self.y, this.self.name.substring(0, 11), 15, 100);
                this.propertyHintWord();
                this.roleReduceProperty();
                // 关闭预警
                this.selfScene['MainSceneControl'].role_01['Role'].role_Warning = true;
                this.selfScene['MainSceneControl'].role_02['Role'].role_Warning = true;
                this.explodeTarget = null;
            }
        }
    };
    /**属性减少提示动画*/
    Candy.prototype.propertyHintWord = function () {
        var MainSceneControl = this.selfScene['MainSceneControl'];
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                MainSceneControl.createHintWord(this.explodeTarget, '减少攻击里', 10);
                break;
            case 'redCandy___':
                MainSceneControl.createHintWord(this.explodeTarget, '减少生命', 5);
                break;
            case 'blueCandy__':
                MainSceneControl.createHintWord(this.explodeTarget, '减少公鸡速度', 10);
                break;
            case 'greenCandy_':
                MainSceneControl.createHintWord(this.explodeTarget, '减少防御力', 5);
                break;
            default:
        }
    };
    /**根据糖果的种类增加主角属性规则
     * 并且播放增加属性文字提示动画
    */
    Candy.prototype.roleReduceProperty = function () {
        this.self.name = this.self.name.substring(0, 11);
        var role_01 = this.selfScene['MainSceneControl'].role_01;
        var role_02 = this.selfScene['MainSceneControl'].role_02;
        switch (this.self.name) {
            case 'yellowCandy':
                if (this.explodeTarget === role_01) {
                    role_01['Role'].role_property.attackValue -= 10;
                }
                else {
                    role_02['Role'].role_property.attackValue -= 10;
                }
                break;
            case 'redCandy___':
                if (this.explodeTarget === role_01) {
                    role_01['Role'].role_property.blood -= 5;
                }
                else {
                    role_02['Role'].role_property.blood -= 5;
                }
                break;
            case 'blueCandy__':
                if (this.explodeTarget === role_01) {
                    role_01['Role'].role_property.attackSpeed -= 10;
                }
                else {
                    role_02['Role'].role_property.attackSpeed -= 10;
                }
                break;
            case 'greenCandy_':
                if (this.explodeTarget === role_01) {
                    role_01['Role'].role_property.defense -= 5;
                }
                else {
                    role_02['Role'].role_property.defense -= 5;
                }
                break;
            default:
                break;
        }
    };
    Candy.prototype.onUpdate = function () {
        // 死亡
        if (this.selfHealth.value <= 0) {
            this.self.removeSelf();
            this.selfScene['MainSceneControl'].explodeAni(this.self.x, this.self.y, this.self.name.substring(0, 11));
        }
        // 飞到主角身上
        this.flyToRole();
    };
    Candy.prototype.onDisable = function () {
        // 清理动画
        Laya.Tween.clearAll(this);
        if (this.self.name === 'yellowCandy') {
            Laya.Pool.recover('yellowCandy', this.self);
        }
        else if (this.self.name === 'redCandy___') {
            Laya.Pool.recover('redCandy___', this.self);
        }
        else if (this.self.name === 'blueCandy__') {
            Laya.Pool.recover('blueCandy__', this.self);
        }
        else if (this.self.name === 'greenCandy_') {
            Laya.Pool.recover('greenCandy_', this.self);
        }
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        return _super.call(this) || this;
    }
    Enemy.prototype.onEnable = function () {
        this.initProperty();
        this.enemyPropertySet();
    };
    /**初始化*/
    Enemy.prototype.initProperty = function () {
        this.self = this.owner;
        this.self.alpha = 1;
        this.selfScene = this.owner.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = this.mainSceneControl.roleParent;
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.selfSpeed = 3.5;
        this.propertyShow = this.self.getChildByName('propertyShow');
        this.attackTnterval = 100;
        this.recordTime = Date.now();
        this.speakBox = this.mainSceneControl.speakBox;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.repelTimer = 0;
        this.hintWord = this.mainSceneControl.hintWord;
        this.enemyBullet = this.mainSceneControl.enemyBullet;
        this.self['Enemy'] = this;
        if (this.skeleton) {
            this.skeleton.removeSelf();
        }
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        this.role_02 = this.selfScene['MainSceneControl'].role_02;
    };
    /**创建骨骼动画皮肤*/
    Enemy.prototype.createBoneAni = function () {
        //创建动画模板
        this.templet = new Laya.Templet();
        this.templet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this.templet.on(Laya.Event.ERROR, this, this.onError);
        if (this.enemyType === 'infighting') {
            this.templet.loadAni("candy/敌人/fightingEnemy.sk");
        }
        else if (this.enemyType === 'range') {
            this.templet.loadAni("candy/敌人/rangeEnemy.sk");
        }
    };
    Enemy.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    Enemy.prototype.parseComplete = function () {
        // 播放敌人动画
        var skeleton;
        this.skeleton = this.templet.buildArmature(0); //模板0
        this.skeletonListen();
        this.self.addChild(this.skeleton);
        //格式
        if (this.enemyType === 'infighting') {
            this.self.width = 120;
            this.self.height = 180;
            this.self.pivotX = this.self.width / 2;
            this.self.pivotY = this.self.height / 2;
            this.skeleton.x = 63;
            this.skeleton.y = 108;
            this.skeleton.play('move', true);
            this.skeleton.playbackRate(1);
        }
        else if (this.enemyType === 'range') {
            this.self.width = 120;
            this.self.height = 180;
            this.self.pivotX = this.self.width / 2;
            this.self.pivotY = this.self.height / 2;
            this.skeleton.x = 64;
            this.skeleton.y = 86;
            // 左右动作不一样
            if (this.self.x < Laya.stage.width / 2) {
                this.skeleton.play('moveRight', true);
            }
            else {
                this.skeleton.play('moveLeft', true);
            }
            this.skeleton.playbackRate(1);
        }
    };
    /**监听*/
    Enemy.prototype.skeletonListen = function () {
        this.skeleton.on(Laya.Event.LABEL, this, function (e) {
            if (this.enemyType === 'infighting') {
                if (e.name === 'hitOut') {
                    this.enemyAttackRules();
                }
            }
            else if ('range') {
                if (e.name === 'hitOut') {
                    this.creatBullet();
                }
            }
        });
    };
    /**近战攻击的敌人攻击主角的时候，会随机在主角范围内停止然后攻击
     * 远程攻击的敌人在主角的上面，他的y轴坐标比较高
     * 并且这个坐标在开始的时候执行一次
     * 更换主角的时候执行一次
     * */
    Enemy.prototype.randomAttackPoint = function () {
        var difference;
        var number = Math.floor(Math.random() * 2);
        if (number === 1) {
            difference = -Math.floor(Math.random() * 50);
        }
        else {
            difference = Math.floor(Math.random() * 50);
        }
        this.attackX = this.slefTagRole.x + difference;
        if (this.enemyType === 'infighting') {
            this.attackY = this.slefTagRole.y - Math.floor(Math.random() * 50);
        }
        else if ('range') {
            this.attackY = this.slefTagRole.y - Math.floor(Math.random() * 50) - 450;
        }
    };
    /**怪物等级包括的一些属性*/
    Enemy.prototype.enemyPropertySet = function () {
        // 属性赋值
        this.enemyProperty = {
            level: '',
            blood: '',
            moveSpeed: '',
            defense: '',
        };
        this.enemyProperty.blood = this.mainSceneControl.enemyProperty.blood;
        this.enemyProperty.attackValue = this.mainSceneControl.enemyProperty.attackValue;
        this.enemyProperty.attackSpeed = this.mainSceneControl.enemyProperty.attackSpeed;
        this.enemyProperty.defense = this.mainSceneControl.enemyProperty.defense;
        this.enemyProperty.moveSpeed = this.mainSceneControl.enemyProperty.moveSpeed;
    };
    /**属性刷新显示规则,血量显示一定是整数10*/
    Enemy.prototype.enemyPropertyUpdate = function () {
        // 血条上的血量显示
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        var str = Math.round(this.enemyProperty.blood * this.selfHealth.value).toString();
        var subStr_01 = str.substring(0, str.length - 1);
        var subStr_02 = subStr_01 + 0;
        this.bloodLabel.text = subStr_02;
        // 属性显示框上面显示的属性
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.enemyProperty.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.enemyProperty.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.enemyProperty.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.enemyProperty.defense;
        //当敌人数量达到一定数量的时候，给敌人增加攻击力开关
        // 需要有提示
        var roleDefense = this.slefTagRole['Role'].role_property.defense;
        if (this.mainSceneControl.enemyParent._children.length > 20 && this.enemyProperty.attackValue < roleDefense) {
            this.enemyProperty.attackValue = roleDefense + 5;
        }
    };
    /** 近战攻击的敌人第二阶段移动到主角位置，并且进入主角射程范围的移动规则
     * 加入被子弹击退效果
    */
    Enemy.prototype.infightingEnemyMove = function () {
        // x,y分别相减是两点连线向量
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.attackX - this.self.x, this.attackY - this.self.y);
        point.normalize();
        // 判断是否激活被击退效果
        if (this.slefTagRole.x > Laya.stage.width / 2) { //右边
            // 右边发生预警
            this.mainSceneControl.role_01['Role'].role_Warning = true;
        }
        else if (this.slefTagRole.x < Laya.stage.width / 2) { //左边
            // 左边发生预警
            this.mainSceneControl.role_02['Role'].role_Warning = true;
        }
        // 被击退反向移动
        if (this.repelTimer > 0) {
            this.repelTimer--;
            //反向移动
            this.self.x -= point.x * 2;
            this.self.y -= point.y * 2;
        }
        else {
            //向量相加移动
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**远程攻击的敌人移动
     * 远程攻击敌人不会被击退
    */
    Enemy.prototype.rangeEnemyMove = function () {
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.attackX - this.self.x, this.attackY - this.self.y);
        point.normalize();
        //向量相加移动
        this.self.x += point.x * this.selfSpeed;
        this.self.y += point.y * this.selfSpeed;
    };
    /**怪物对主角造成伤害的公式
     * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
     * 掉血显示值，伤害小于零则显示0
     * 并且在主角头上出现掉血动画提示
    */
    Enemy.prototype.enemyAttackRules = function () {
        // 通过攻击力计算掉血状况
        var damage = this.enemyProperty.attackValue - this.slefTagRole['Role'].role_property.defense;
        if (damage > 0) {
            this.slefTagRole['Role'].role_property.blood -= damage;
        }
        else {
            damage = 0;
        }
        this.createHintWord(damage);
    };
    /**创建提示，掉血文字*/
    Enemy.prototype.createHintWord = function (damage) {
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(0, -150);
        this.slefTagRole.addChild(hintWord);
        var proPertyType = '敌人掉血';
        var numberValue;
        if (!this.slefTagRole.parent) {
            return;
        }
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    /**远程攻击创建子弹*/
    Enemy.prototype.creatBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('enemyBullet', this.enemyBullet.create, this.enemyBullet);
        var bulletParent = this.mainSceneControl.bulletParent;
        bulletParent.addChild(bullet);
        bullet.pos(this.self.x - 100, this.self.y);
        bullet['EnemyBullet'].belongEnemy = this.self;
        bullet['EnemyBullet'].bulletTarget = this.slefTagRole;
    };
    /**更换攻击目标
     * 如果当前攻击的主角死了，敌人会攻击另一个目标
    */
    Enemy.prototype.replaceTarget = function () {
        if (!this.slefTagRole['Role'].roleDeath) {
            // 更换目标
            if (this.slefTagRole.name === 'role_01') {
                this.slefTagRole = this.mainSceneControl.role_02;
                this.tagHealth = this.mainSceneControl.role_02.getChildByName('health');
            }
            else if (this.slefTagRole.name === 'role_02') {
                this.slefTagRole = this.mainSceneControl.role_01;
                this.tagHealth = this.mainSceneControl.role_01.getChildByName('health');
            }
        }
    };
    /**播放速度相对攻击速度进行调整
     * 当播放间隔低于500后进行调整
    */
    Enemy.prototype.playSpeedAdjust = function () {
        // 播放速度调整
        var playSpeed;
        if ((500 - this.enemyProperty.attackSpeed) / 500 > 0) {
            playSpeed = 1 + (500 - this.enemyProperty.attackSpeed) / 500;
        }
        else {
            playSpeed = 1;
        }
        this.skeleton.playbackRate(playSpeed);
    };
    /**敌人死亡时的行为
     * 关闭敌人预警
     * 并且爆炸
    */
    Enemy.prototype.enemyDeath = function () {
        this.mainSceneControl.role_01['Role'].role_Warning = false;
        this.mainSceneControl.role_02['Role'].role_Warning = false;
        this.self.removeSelf();
        if (this.enemyType === 'infighting') {
            this.selfScene['MainSceneControl'].explodeAni(this.selfScene, this.self.x, this.self.y, 'infighting', 15, 100);
        }
        else {
            this.selfScene['MainSceneControl'].explodeAni(this.selfScene, this.self.x, this.self.y, 'range', 15, 100);
        }
    };
    Enemy.prototype.onUpdate = function () {
        // 主角全部死亡则停止移动
        if (this.selfScene['MainSceneControl'].gameOver) {
            return;
        }
        // 如果没有目标则什么都不执行
        if (this.slefTagRole === null) {
            return;
        }
        // 血量低于0则死亡,并且关闭主角发射子弹预警,并且停止下面行为
        if (this.enemyProperty.blood < 0) {
            this.enemyDeath();
            return;
        }
        // 属性实时刷新
        this.enemyPropertyUpdate();
        //判断这个敌人是不是远程攻击，远程攻击的敌人暂时不会移动,会主动发射子弹进行攻击
        if (this.enemyType === 'range') {
            // 远程移动
            this.rangeEnemyMove();
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.attackX);
            var differenceY = Math.abs(this.self.y - this.attackY);
            if (differenceX < 10 && differenceY < 10) {
                this.role_01['Role'].role_Warning = true;
                this.role_02['Role'].role_Warning = true;
                this.selfSpeed = 0;
                var nowTime = Date.now();
                if (nowTime - this.recordTime > this.enemyProperty.attackSpeed) {
                    this.recordTime = nowTime;
                    // 血量判断，目标死亡后，会更换目标
                    if (this.slefTagRole['Role'].role_property.blood > 0) {
                        // 等上一个动画播放完毕
                        this.skeleton.play('attack', false);
                        this.playSpeedAdjust();
                    }
                    else {
                        this.replaceTarget();
                    }
                }
            }
        }
        else if (this.enemyType === 'infighting') {
            // 近战移动
            this.infightingEnemyMove();
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.attackX);
            var differenceY = Math.abs(this.self.y - this.attackY);
            if (differenceX < 100 && differenceY < 100) {
                this.selfSpeed = 0;
                var nowTime = Date.now();
                if (nowTime - this.recordTime > this.enemyProperty.attackSpeed) {
                    this.recordTime = nowTime;
                    // 血量判断，目标死亡后，会更换目标
                    if (this.slefTagRole['Role'].role_property.blood > 0) {
                        this.skeleton.play('attack', false);
                        this.playSpeedAdjust();
                    }
                    else {
                        this.replaceTarget();
                    }
                }
            }
            else {
                this.selfSpeed = 4;
            }
        }
    };
    Enemy.prototype.onDisable = function () {
        Laya.Pool.recover('enemy', this.self);
    };
    return Enemy;
}(Laya.Script));
exports.default = Enemy;
},{"./MainSceneControl":10}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var EnemyBullet = /** @class */ (function (_super) {
    __extends(EnemyBullet, _super);
    function EnemyBullet() {
        return _super.call(this) || this;
    }
    EnemyBullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    EnemyBullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.selfSpeed = 15;
        this.attackValue = this.mainSceneControl.enemyProperty.attackValue;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.self['EnemyBullet'] = this;
    };
    /**始终攻击一个主角，如果这个主角死了，
     * 若果这个目标被移除了，那么发出去的子弹会沿着和怪物的方向继续移动到500
     * */
    EnemyBullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己和发射自己的敌人方向移动
            var point = new Laya.Point(this.self.x - this.belongEnemy.x, this.self.y - this.belongEnemy.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**子弹对主角造成伤害的公式
       * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
       * 并且有动画提示文字
      */
    EnemyBullet.prototype.bulletAttackRules = function (role) {
        // 掉血显示值，伤害小于零则显示0
        var numberValue;
        // 伤害
        var damage = this.attackValue - role['Role'].role_property.defense;
        if (damage > 0) {
            role['Role'].role_property.blood -= damage;
            numberValue = damage;
        }
        else {
            numberValue = 0;
        }
    };
    EnemyBullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 碰到任何一个主角，子弹消失怪物掉血
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var differenceX = Math.abs(role.x - this.self.x);
            var differenceY = Math.abs(role.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                this.bulletAttackRules(role);
                this.self.removeSelf();
            }
        }
    };
    EnemyBullet.prototype.onDisable = function () {
    };
    return EnemyBullet;
}(Laya.Script));
exports.default = EnemyBullet;
},{"./MainSceneControl":10}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("./Tool");
var Explode = /** @class */ (function (_super) {
    __extends(Explode, _super);
    function Explode() {
        return _super.call(this) || this;
    }
    Explode.prototype.onEnable = function () {
        this.timer = 0;
        this.accelerated = 0.1;
        this.self = this.owner;
        this.img = this.self.getChildByName('img');
        this.self['Explode'] = this;
        this.self.pivotX = this.self.width / 2;
        this.self.pivotY = this.self.height / 2;
    };
    /**初始化参数*/
    Explode.prototype.initProperty = function (type) {
        this.effectsType = type;
        switch (type) {
            case 'starShining':
                this.starShiningProperty();
                break;
            case 'disappear':
                this.disappearProperty();
                break;
            case 'appear':
                this.appearProperty();
                break;
            case 'fireworks':
                this.fireworksProperty();
                break;
            case 'smokeEffects':
                this.smokeProperty();
                break;
            case 'infighting':
                this.infightingProperty();
                break;
            case 'range':
                this.rangeProperty();
                break;
            case 'redCandy___':
                this.redCandyProperty();
                break;
            case 'greenCandy_':
                this.greenCandyProperty();
                break;
            case 'blueCandy__':
                this.blueCandyProperty();
                break;
            case 'yellowCandy':
                this.yellowCandyProperty();
                break;
            default:
                break;
        }
        this.img.pivotX = this.img.width / 2;
        this.img.pivotY = this.img.height / 2;
    };
    /**敌人和糖果通用*/
    Explode.prototype.commonEnmeyAndCandy = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 5) + 10;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = Math.floor(Math.random() * 4) + 6;
        this.self.scaleX = this.scale / 10;
        this.self.scaleY = this.scale / 10;
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = (Math.floor(Math.random() * 10) + 5) / 10;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -20 : 20;
    };
    /**近战敌人爆炸属性*/
    Explode.prototype.infightingProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/白色单元.png';
    };
    /**远程敌人爆炸属性*/
    Explode.prototype.rangeProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/黑色单元.png';
    };
    /**红色糖果*/
    Explode.prototype.redCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/红色单元.png';
    };
    /**黄色糖果*/
    Explode.prototype.yellowCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/黄色单元.png';
    };
    /**蓝色糖果*/
    Explode.prototype.blueCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/蓝色单元.png';
    };
    /**蓝色糖果*/
    Explode.prototype.greenCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/绿色单元.png';
    };
    /**普通爆炸移动规则
    * 爆炸
    * 减速
    * 停留在地上
    * 消失
   */
    Explode.prototype.commonExplosion = function () {
        this.accelerated += 0.3;
        if (this.timer > 0 && this.timer <= 5) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer > 5 && this.timer < 15) {
            this.self.alpha -= 0.01;
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer >= 15 && this.timer < 17) {
        }
        else if (this.timer >= 17) {
            this.vinshTime -= 0.1;
            if (this.vinshTime < 0) {
                this.self.removeSelf();
            }
        }
    };
    /**烟花爆炸属性*/
    Explode.prototype.fireworksProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 15) + 2;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = Math.floor(Math.random() * 8) + 4;
        this.self.scaleX = this.scale / 10;
        this.self.scaleY = this.scale / 10;
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = 1;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -10 : 10;
        // 图片
        var number = Math.floor(Math.random() * 7) + 1;
        switch (number) {
            case 1:
                this.img.skin = 'candy/特效/星星1.png';
                break;
            case 2:
                this.img.skin = 'candy/特效/星星2.png';
                break;
            case 3:
                this.img.skin = 'candy/特效/星星3.png';
                break;
            case 4:
                this.img.skin = 'candy/特效/星星4.png';
                break;
            case 5:
                this.img.skin = 'candy/特效/星星5.png';
                break;
            case 6:
                this.img.skin = 'candy/特效/星星6.png';
                break;
            case 7:
                this.img.skin = 'candy/特效/星星7.png';
                break;
            default:
                break;
        }
    };
    /**烟花爆炸移动
    * 爆炸
    * 减速
    * 消失
   */
    Explode.prototype.fireworksExplosion = function () {
        this.img.rotation += this.rotationD;
        this.accelerated += 0.1;
        if (this.timer > 0 && this.timer <= 15) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed + 5);
        }
        else if (this.timer > 15 && this.timer < 18) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed - 5);
        }
        else if (this.timer >= 18) {
            this.self.removeSelf();
        }
    };
    /**烟囱烟雾属性*/
    Explode.prototype.smokeProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 10) + 5;
        this.initialAngle = 90;
        this.scale = Math.floor(Math.random() * 4) + 2;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = 1;
        this.self.alpha = this.startAlpha;
        this.img.skin = 'candy/特效/白色单元.png';
    };
    /**烟囱烟雾特效移动
    * 出现
    * 上移
    * 消失
   */
    Explode.prototype.smokeEffects = function () {
        if (this.timer > 0 && this.timer <= 10) {
            this.self.scaleX += 0.08;
            this.self.scaleY += 0.08;
            this.self.y -= 0.01;
        }
        else if (this.timer > 10 && this.timer < 40) {
            this.self.y -= 2;
        }
        else if (this.timer > 40) {
            this.self.y -= 2;
            this.startAlpha -= 0.025;
            if (this.startAlpha < 0) {
                this.self.removeSelf();
            }
        }
    };
    /**变身消失动画属性*/
    Explode.prototype.disappearProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.random() * 2 + 2;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = 7;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = (Math.floor(Math.random() * 6) + 4) / 10;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -5 : 5;
        // 图片
        this.img.skin = 'candy/特效/白色单元.png';
        this.img.rotation = this.initialAngle - 90;
        var number = Math.floor(Math.random() * 2);
        switch (number) {
            case 0:
                this.img.skin = 'candy/特效/白色单元.png';
                break;
            case 1:
                this.img.skin = 'candy/特效/白色单元_02.png';
                break;
            default:
                break;
        }
    };
    /**变身消失动画移动*/
    Explode.prototype.disappearEffects = function () {
        this.accelerated += 0.01;
        if (this.timer > 0 && this.timer <= 15) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer > 15 && this.timer < 25) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed - 2);
        }
        else if (this.timer >= 25) {
            this.self.alpha -= 0.02;
            if (this.self.alpha <= 0) {
                this.self.removeSelf();
            }
        }
    };
    /**出现动画属性*/
    Explode.prototype.appearProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.random() * 2 + 2;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = 7;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = (Math.floor(Math.random() * 6) + 4) / 10;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -5 : 5;
        // 图片
        this.img.skin = 'candy/特效/白色单元.png';
        this.img.rotation = this.initialAngle - 90;
        var number = Math.floor(Math.random() * 2);
        switch (number) {
            case 0:
                this.img.skin = 'candy/特效/白色单元.png';
                break;
            case 1:
                this.img.skin = 'candy/特效/白色单元_02.png';
                break;
            default:
                break;
        }
    };
    /**出现动画移动*/
    Explode.prototype.appearEffects = function () {
        this.accelerated += 0.01;
        if (this.timer > 0 && this.timer <= 20) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer > 20 && this.timer < 30) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed - 2);
        }
        else if (this.timer >= 30) {
            this.self.alpha -= 0.02;
            if (this.self.alpha <= 0) {
                this.self.removeSelf();
            }
        }
    };
    /**星星闪烁动画属性*/
    Explode.prototype.starShiningProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 15) + 2;
        this.scale = Math.floor(Math.random() * 8) + 4;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.startAlpha = 0;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -5 : 5;
        // 图片
        var number = Math.floor(Math.random() * 7) + 1;
        switch (number) {
            case 1:
                this.img.skin = 'candy/特效/星星1.png';
                break;
            case 2:
                this.img.skin = 'candy/特效/星星2.png';
                break;
            case 3:
                this.img.skin = 'candy/特效/星星3.png';
                break;
            case 4:
                this.img.skin = 'candy/特效/星星4.png';
                break;
            case 5:
                this.img.skin = 'candy/特效/星星5.png';
                break;
            case 6:
                this.img.skin = 'candy/特效/星星6.png';
                break;
            case 7:
                this.img.skin = 'candy/特效/星星7.png';
                break;
            default:
                break;
        }
    };
    /**星星闪烁动画*/
    Explode.prototype.starShiningEffects = function () {
        if (this.timer > 0 && this.timer <= 15) {
            this.self.alpha += 0.1;
            this.self.rotation += this.rotationD;
            this.self.scaleX += 0.01;
            this.self.scaleY += 0.01;
        }
        else if (this.timer > 15 && this.timer < 25) {
            this.self.rotation += this.rotationD;
        }
        else if (this.timer >= 25) {
            this.self.rotation -= this.rotationD;
            this.self.alpha -= 0.015;
            this.self.scaleX -= 0.01;
            this.self.scaleY -= 0.01;
            if (this.self.alpha <= 0) {
                this.self.removeSelf();
            }
        }
    };
    /**移动规则*/
    Explode.prototype.move = function () {
        if (this.effectsType === 'fireworks') {
            this.fireworksExplosion();
        }
        else if (this.effectsType === 'smokeEffects') {
            this.smokeEffects();
        }
        else if (this.effectsType === 'disappear') {
            this.disappearEffects();
        }
        else if (this.effectsType === 'appear') {
            this.appearEffects();
        }
        else if (this.effectsType === 'starShining') {
            this.starShiningEffects();
        }
        else {
            this.commonExplosion();
        }
    };
    /**
   * 通用子弹移动，按单一角度移动
   * @param angle 角度
   *  @param basedSpeed 基础速度
   */
    Explode.prototype.commonSpeedXYByAngle = function (angle, speed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, speed + this.accelerated).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, speed + this.accelerated).y;
    };
    Explode.prototype.onUpdate = function () {
        if (this.moveSwitch) {
            this.timer += 1;
            this.move();
        }
    };
    Explode.prototype.onDisable = function () {
        Laya.Pool.recover('explode', this.self);
    };
    return Explode;
}(Laya.Script));
exports.default = Explode;
},{"./Tool":20}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HintWord = /** @class */ (function (_super) {
    __extends(HintWord, _super);
    function HintWord() {
        return _super.call(this) || this;
    }
    HintWord.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['HintWord'] = this;
        this.selfScene = this.self.scene;
        this.self.alpha = 0; //出现的时候隐身，方便做动画
        this.self.pivotX = this.self.width / 2;
        this.propertyType = this.self.getChildByName('propertyType');
        this.addNumber = this.self.getChildByName('addNumber');
        this.subNumber = this.self.getChildByName('subNumber');
        this.addScore = this.self.getChildByName('addScore');
        // 开始全是空
        this.propertyType.value = null;
        this.addNumber.value = null;
        this.subNumber.value = null;
        this.addScore.value = null;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
    };
    /**通过传入的参数来，设置属性图片字的格式
     * @param propertyType 属性类型
     * @param numberValue 属性值
     * */
    HintWord.prototype.initProperty = function (propertyType, numberValue) {
        // 位置偏移，因为字符长度不一样
        switch (propertyType) {
            // 属性增加
            case '公鸡速度':
                this.propertyType.value = '公鸡速度';
                this.propertyType.x -= 40;
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            case '攻击里':
                this.propertyType.value = '攻击里';
                this.propertyType.x -= 20;
                this.addNumber.x -= 20;
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            case '生命':
                this.propertyType.value = '生命';
                this.addNumber.x -= 40;
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            case '防御力':
                this.propertyType.value = '防御力';
                this.propertyType.x -= 20;
                this.addNumber.x -= 20;
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            // 属性减少
            case '减少公鸡速度':
                this.propertyType.value = '公鸡速度';
                this.subNumber.x -= 40;
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '减少攻击里':
                this.propertyType.value = '攻击里';
                this.propertyType.x -= 20;
                this.subNumber.x -= 20;
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '减少生命':
                this.propertyType.value = '生命';
                this.subNumber.x -= 40;
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '减少防御力':
                this.propertyType.value = '防御力';
                this.propertyType.x -= 20;
                this.subNumber.x -= 20;
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            // 敌我减血
            case '主角掉血':
                this.subNumber.x -= 80;
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '敌人掉血':
                this.subNumber.x -= 80;
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            // 增加分数
            case '增加分数':
                this.addScore.value = "+" + numberValue;
                this.addScoreMove(numberValue);
                break;
            default:
                break;
        }
    };
    /**属性飘字动画时间线*/
    HintWord.prototype.propertyMove = function () {
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { y: this.self.y - 60, alpha: 1 }, 100, null, 0)
            .addLabel('pause', 0).to(this.self, { y: this.self.y - 120 }, 800, null, 0)
            .addLabel('vanish', 0).to(this.self, { y: this.self.y - 150, alpha: 0 }, 100, null, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
        });
    };
    /**增加分数时的动画*/
    HintWord.prototype.addScoreMove = function (numberValue) {
        // 把scoreLabel的坐标转换成全局坐标
        var scoreLabel_p = this.scoreLabel.parent;
        var scoreLabel_p_p = scoreLabel_p.parent;
        var stageX = this.scoreLabel.x + scoreLabel_p.x + scoreLabel_p_p.x;
        var stageY = this.scoreLabel.y + scoreLabel_p.y + scoreLabel_p_p.y;
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { y: this.self.y - 60, alpha: 1 }, 100, null, 0)
            .addLabel('pause', 0).to(this.self, { y: this.self.y - 120 }, 600, null, 0)
            .addLabel('moveUp', 0).to(this.self, { y: this.self.y - 150, alpha: 1 }, 100, null, 0)
            .addLabel('moveTo', 0).to(this.self, { scaleX: 0.5, scaleY: 0.5, rotation: -360, x: stageX, y: stageY, alpha: 1 }, 600, Laya.Ease.cubicIn, 0)
            .addLabel('vanish', 0).to(this.self, { y: stageY - 100, alpha: 0 }, 100, Laya.Ease.cubicIn, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
            this.scoreLabel.value = (Number(this.scoreLabel.value) + numberValue).toString();
        });
    };
    HintWord.prototype.onDisable = function () {
        Laya.Pool.recover('hintWord', this.self);
    };
    return HintWord;
}(Laya.Script));
exports.default = HintWord;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl = /** @class */ (function (_super) {
    __extends(MainSceneControl, _super);
    function MainSceneControl() {
        return _super.call(this) || this;
    }
    MainSceneControl.prototype.onEnable = function () {
        this.noStarted();
        this.createStartInterface('start');
    };
    /**场景初始化*/
    MainSceneControl.prototype.startGame = function () {
        this.enemyAppear = false;
        this.enemyTagRole = null;
        this.enemyCount = 0;
        // 初始化怪物属性，依次为血量，攻击力，攻速，移动速度，攻击速度
        this.enemyProperty = {
            blood: 200,
            attackValue: 5000,
            attackSpeed: 1000,
            defense: 10,
            moveSpeed: 10,
            creatInterval: 5000
        };
        this.enemyInterval_01 = 500;
        this.enemyTime_01 = Date.now();
        this.enemySwitch_01 = true;
        this.enemyInterval_02 = 500;
        this.enemyTime_02 = Date.now();
        this.enemySwitch_02 = true;
        this.candy_interval = 1000;
        this.creatTime = Date.now();
        this.creatOnOff = true;
        this.nameArr = [];
        this.candyCount = 0;
        this.scoreLabel.value = '0';
        this.timeSchedule = this.timer.getChildByName('timeSchedule');
        this.rescueNum = 0;
        // 关闭多点触控
        Laya.MouseManager.multiTouchEnabled = false;
        this.timerControl = 0;
        this.suspend = false;
        this.startRow = 4;
        this.gameOver = false;
        this.candyMoveToDisplay();
    };
    /**游戏没有开始的时候设置的属性*/
    MainSceneControl.prototype.noStarted = function () {
        this.self = this.owner;
        this.owner['MainSceneControl'] = this; //脚本赋值
        this.gameOver = true;
        this.createLaunchAni();
    };
    /**创建开始游戏界面*/
    MainSceneControl.prototype.createStartInterface = function (type) {
        var startInterface = Laya.Pool.getItemByCreateFun('startInterface', this.startInterface.create, this.startInterface);
        this.owner.addChild(startInterface);
        startInterface.pivotX = startInterface.width / 2;
        startInterface.pivotY = startInterface.height / 2;
        startInterface.x = Laya.stage.width / 2;
        startInterface.y = Laya.stage.height / 2;
        startInterface['startGame'].aniTypeInit(type);
    };
    /**两个发射口的骨骼动画*/
    MainSceneControl.prototype.createLaunchAni = function () {
        //创建动画模板1
        this.launchTemp_01 = new Laya.Templet();
        this.launchTemp_01.on(Laya.Event.COMPLETE, this, this.parseComplete_01);
        this.launchTemp_01.on(Laya.Event.ERROR, this, this.onError);
        this.launchTemp_01.loadAni("candy/糖果机器/candyLaunch.sk");
        //创建动画模板2
        this.launchTemp_02 = new Laya.Templet();
        this.launchTemp_02.on(Laya.Event.COMPLETE, this, this.parseComplete_02);
        this.launchTemp_02.on(Laya.Event.ERROR, this, this.onError);
        this.launchTemp_02.loadAni("candy/糖果机器/candyLaunch.sk");
    };
    MainSceneControl.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    MainSceneControl.prototype.parseComplete_01 = function () {
        // 静止
        this.candyLaunch_01 = this.assembly.getChildByName('candyLaunch_01'); //模板0
        this.candyLaunch_01.play('static', false);
        this.candyLaunch_01.on(Laya.Event.LABEL, this, this.candyLaunchListen_01);
    };
    MainSceneControl.prototype.parseComplete_02 = function () {
        // 静止
        this.candyLaunch_02 = this.assembly.getChildByName('candyLaunch_02'); //模板0
        this.candyLaunch_02.play('static', false);
        this.candyLaunch_02.on(Laya.Event.LABEL, this, this.candyLaunchListen_02);
    };
    /**发射口监听监听1
     * 分开监听，因为有写操作只会执行一次
    */
    MainSceneControl.prototype.candyLaunchListen_01 = function (e) {
        if (e.name === 'launch') {
            console.log('发射！');
        }
        else if (e.name === 'getReady') {
            this.candyMoveToDisplay();
            this.timeSchedule.value = 1;
        }
    };
    /**发射口监听监听1*/
    MainSceneControl.prototype.candyLaunchListen_02 = function (e) {
        if (e.name === 'launch') {
            console.log('发射！');
        }
        else if (e.name === 'getReady') {
        }
    };
    /**生产8个糖果移动到操作台的动画
     * 4次，每次2个移动
     * 倒过来遍历
    */
    MainSceneControl.prototype.candyMoveToDisplay = function () {
        var delayed = 10;
        var candyHeiht = 100;
        var spacing = -1;
        var startX_02 = Laya.stage.width / 2 - 42;
        var startX_01 = Laya.stage.width / 2 + 58;
        //最远的那个位置
        var startY = this.displays.y + 4 * (candyHeiht + spacing) - 35;
        var _loop_1 = function (i) {
            Laya.timer.frameOnce(delayed, this_1, function () {
                for (var j = 0; j < 2; j++) {
                    var candy = this.createCandy();
                    candy['Candy'].group = i;
                    candy.zOrder = this.startRow - i; //层级
                    if (j === 0) {
                        // 出生位置
                        candy.pos(this.displays.x + 160, this.displays.y - 50);
                        candy.scaleX = 0;
                        candy.scaleY = 0;
                        this.candyLaunch_01.play('launchLeft', false);
                        // 移动到陈列台位置
                        var targetY = startY - i * (candyHeiht + spacing);
                        this.candyFlipTheAni(candy, startX_01, targetY);
                    }
                    else {
                        // 出生位置
                        candy.pos(this.displays.x - 160, this.displays.y - 50);
                        candy.scaleX = 0.5;
                        candy.scaleY = 0.5;
                        this.candyLaunch_02.play('launchRight', false);
                        // 陈列台位置
                        // 移动到陈列台位置
                        var targetY = startY - i * (candyHeiht + spacing);
                        this.candyFlipTheAni(candy, startX_02, targetY);
                    }
                }
            });
            delayed += 15;
        };
        var this_1 = this;
        for (var i = 0; i < this.startRow; i++) {
            _loop_1(i);
        }
    };
    /**糖果发射动画时间线
     * @param candy 当前糖果
     * @param targetX 目标x位置
     * @param targetY 目标y位置
    */
    MainSceneControl.prototype.candyFlipTheAni = function (candy, targetX, targetY) {
        // 基础时间参数，动画的时间会随着位置边近而缩小
        var timePar = 500 - candy['Candy'].group * 100;
        // 糖果本身
        // 第一步放大
        Laya.Tween.to(candy, { scaleX: 0.8, scaleY: 0.8, y: candy.y - 30 }, timePar / 2, null, Laya.Handler.create(this, function () {
            // 第二步飞天,位置是目标位置的一半
            var HalfX;
            var distancePer = 3; //在这个距离等分处飞到最高处
            if (candy.x > Laya.stage.width / 2) {
                HalfX = candy.x - (candy.x - targetX) / distancePer;
            }
            else {
                HalfX = candy.x + (targetX - candy.x) / distancePer;
            }
            var HalfY = candy.y + (targetY - candy.y) / distancePer;
            Laya.Tween.to(candy, { x: HalfX, y: HalfY, scaleX: 1.3, scaleY: 1.3 }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
                // 第三步降落
                Laya.Tween.to(candy, { x: targetX, y: targetY, scaleX: 1, scaleY: 1 }, timePar, null, Laya.Handler.create(this, function () {
                    this.replaceCandyMap(candy);
                    if (candy['Candy'].group === 3) {
                        this.operating['OperationControl'].operateSwitch = true;
                        this.operating['OperationControl'].clickHint();
                        this.launchNum = 0;
                        this.launchSwitch = false;
                    }
                }), 0);
            }), 0);
        }), 10);
        // 糖果的影子处理
        var shadow = candy.getChildByName('shadow');
        // 第一步放大
        Laya.Tween.to(shadow, {}, timePar / 2, null, Laya.Handler.create(this, function () {
            // 第二步和糖果拉开距离
            Laya.Tween.to(shadow, { x: -20, y: 100, scaleX: 0.5, scaleY: 0.5, }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
                // 第三步降落
                Laya.Tween.to(shadow, { x: 0, y: 0, scaleX: 1, scaleY: 1 }, timePar, null, Laya.Handler.create(this, function () {
                }), 0);
            }), 0);
        }), 10);
    };
    /**替换不同糖果贴图*/
    MainSceneControl.prototype.replaceCandyMap = function (candy) {
        var skeleton = candy.getChildByName('skeleton');
        // 创建消失变换特效
        this.explodeAni(this.owner, candy.x, candy.y, 'disappear', 8, 1000);
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                skeleton.play('yellow_static', true);
                break;
            case 'redCandy___':
                skeleton.play('red_static', true);
                break;
            case 'blueCandy__':
                skeleton.play('blue_static', true);
                break;
            case 'greenCandy_':
                skeleton.play('green_static', true);
                break;
            default:
                break;
        }
    };
    /**产生糖果*/
    MainSceneControl.prototype.createCandy = function () {
        // 通过对象池创建
        var candy = Laya.Pool.getItemByCreateFun('candy', this.candy.create, this.candy);
        // 随机创建一种颜色糖果
        // 糖果的名称结构是11位字符串加上索引值，方便查找，并且这样使他们的名称唯一
        var randomNum = Math.floor(Math.random() * 4);
        var pic = candy.getChildByName('pic');
        switch (randomNum) {
            case 0:
                candy.name = 'yellowCandy' + this.candyCount;
                break;
            case 1:
                candy.name = 'redCandy___' + this.candyCount;
                break;
            case 2:
                candy.name = 'blueCandy__' + this.candyCount;
                break;
            case 3:
                candy.name = 'greenCandy_' + this.candyCount;
                break;
            default:
                break;
        }
        // 随机点击次数
        var clicksLabel = candy.getChildByName('clicksLabel');
        clicksLabel.text = '';
        candy.pos(Laya.stage.width / 2, -100);
        candy.pivotX = candy.width / 2;
        candy.pivotY = candy.height / 2;
        this.candyParent.addChild(candy);
        candy.rotation = 0;
        this.candyCount++;
        return candy;
    };
    /**产生爆炸糖果*/
    MainSceneControl.prototype.createExplodeCandy = function (candyName) {
        // 通过对象池创建
        var explodeCandy = Laya.Pool.getItemByCreateFun('candy_Explode', this.candy_Explode.create, this.candy_Explode);
        explodeCandy.pos(Laya.stage.width / 2, -100);
        this.candy_ExplodeParent.addChild(explodeCandy);
        explodeCandy.rotation = 0;
        this.candyCount++;
        explodeCandy.name = candyName.substring(0, 11);
        return explodeCandy;
    };
    /**对爆炸糖果进行排序*/
    MainSceneControl.prototype.explodeCandyzOrder = function () {
        var len = this.candy_ExplodeParent._children.length;
        for (var i = 0; i < len; i++) {
            this.candy_ExplodeParent._children[i].zOrder = Math.round(this.candy_ExplodeParent._children[i].y);
        }
    };
    /**两个主角对话框的初始化*/
    MainSceneControl.prototype.roleSpeakBoxs = function () {
        for (var i = 0; i < 2; i++) {
            var speakBox = Laya.Pool.getItemByCreateFun('speakBox', this.speakBox.create, this.speakBox);
            this.speakBoxParent.addChild(speakBox);
            if (i === 0) {
                speakBox.pos(this.role_01.x, this.role_01.y);
                this.role_01speak = speakBox;
                this.role_01speak.alpha = 0;
                // 反向和偏移
                var pic = this.role_01speak.getChildByName('pic');
                var label = this.role_01speak.getChildByName('label');
                pic.scaleX = -1;
                label.x += 30;
            }
            else {
                speakBox.pos(this.role_02.x, this.role_02.y);
                this.role_02speak = speakBox;
                this.role_02speak.alpha = 0;
            }
        }
    };
    /**角色死亡复活状况*/
    MainSceneControl.prototype.roleDeathState = function () {
        // 角色死亡情况
        var len = this.roleParent._children.length;
        if (len === 0) {
            // 死亡
            this.enemySwitch_01 = false;
            this.enemySwitch_02 = false;
            return;
        }
        else if (len === 1) {
            var speak_01 = this.role_01speak.getChildByName('label');
            var speak_02 = this.role_02speak.getChildByName('label');
            // 复活
            if (this.rescueNum >= 5) {
                this.rescueNum = 0;
                if (this.roleParent._children[0].name === "role_01") {
                    this.roleParent.addChild(this.role_02);
                    this.role_02speak.x -= 150;
                    speak_02.text = '谢谢你啊！';
                }
                else {
                    this.roleParent.addChild(this.role_01);
                    speak_01.text = '谢谢你啊！';
                    this.role_01speak.x += 150;
                }
            }
            else {
                // 待复活提示
                if (this.roleParent._children[0].name === "role_01") {
                    this.role_02speak.alpha = 1;
                    this.role_02speak.x = this.role_02.x;
                    speak_02.text = '连续吃5个糖果不犯错的话我就复活了';
                }
                else {
                    this.role_01speak.alpha = 1;
                    this.role_01speak.x = this.role_01.x;
                    speak_01.text = '连续吃5个糖果不犯错的话我就复活了';
                }
            }
        }
        else if (len === 2) {
            // 保持，复活状态为空
            this.rescueNum === 0;
        }
    };
    /**出现敌人
     * 创建方式决定了敌人出生的位置
     * @param mode 创建模式是左边还是右边
     * @param tagRole 目标是哪个主角
    */
    MainSceneControl.prototype.careatEnemy = function (mode, tagRole, type) {
        this.enemyCount++;
        if (tagRole !== null) {
            var enemy = Laya.Pool.getItemByCreateFun('enemy', this.enemy.create, this.enemy);
            this.enemyParent.addChild(enemy);
            enemy.name = 'enemy' + this.enemyCount; //名称唯一
            enemy.pivotX = enemy.width / 2;
            enemy.pivotY = enemy.height / 2;
            //出生位置判定,和攻击目标选择
            if (mode === 'left') {
                enemy.pos(-50, 300);
            }
            else if (mode === 'right') {
                enemy.pos(800, 300);
            }
            else if (mode === 'target') {
                if (tagRole.x < Laya.stage.width / 2 && tagRole.x > 0) {
                    enemy.pos(-50, 300);
                }
                else if (tagRole.x >= Laya.stage.width / 2 && tagRole.x < Laya.stage.width) {
                    enemy.pos(800, 300);
                }
            }
            enemy['Enemy'].slefTagRole = tagRole;
            enemy['Enemy'].enemyType = type;
            enemy['Enemy'].randomAttackPoint();
            enemy['Enemy'].createBoneAni();
            // 默认属性不可见
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!this.suspend) {
                propertyShow.alpha = 0;
            }
            else {
                propertyShow.alpha = 1;
            }
            return enemy;
        }
    };
    /** 敌人的层级进行排序
     * 规则是判断y轴，y坐标越低的越靠前
     */
    MainSceneControl.prototype.enemyOrder = function () {
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            this.enemyParent._children[i].zOrder = Math.round(this.enemyParent._children[i].y);
        }
    };
    /**属性刷新显示规则,血量显示一定是整数，并且是10的倍数
    * 根据时间线的增长，怪物的属性不断增强
    * 每隔600帧增长一次，大约是10秒钟
    */
    MainSceneControl.prototype.enemyPropertyUpdate = function () {
        if (this.timerControl % 600 === 0) {
            // 血量增长
            this.enemyProperty.blood += 50;
            // 攻击力增长
            this.enemyProperty.attackValue += 1;
            // 攻击速度增长，最短时间间隔为100
            this.enemyProperty.attackSpeed += 10;
            if (this.enemyProperty.attackSpeed < 100) {
                this.enemyProperty.attackSpeed = 100;
            }
            // 防御力增长
            this.enemyProperty.defense += 1;
            // 出怪时间增长,最短时间间隔为500
            this.enemyProperty.creatInterval += 50;
            if (this.enemyProperty.creatInterval < 500) {
                this.enemyProperty.creatInterval = 500;
            }
        }
    };
    /**爆炸动画
     * @param parent 父节点
     * @param x 位置
     * @param y
     * @param type 类型
     * @param shul 数量
     * @param zOrder 层级
    */
    MainSceneControl.prototype.explodeAni = function (parent, x, y, type, number, zOrder) {
        for (var i = 0; i < number; i++) {
            var explode = Laya.Pool.getItemByCreateFun('explode', this.explode.create, this.explode);
            parent.addChild(explode);
            explode.zOrder = zOrder;
            explode.pos(x, y);
            // 类型
            explode['Explode'].type = type;
            explode['Explode'].initProperty(type);
        }
    };
    /**复活*/
    MainSceneControl.prototype.createResurgence = function () {
        var resurgence = Laya.Pool.getItemByCreateFun('resurgence', this.resurgence.create, this.resurgence);
        this.self.addChild(resurgence);
        resurgence.zOrder = 1000;
        resurgence.pos(0, 0);
    };
    /**属性增减动画*/
    MainSceneControl.prototype.createHintWord = function (target, proPertyType, numberValue) {
        var hintWord = Laya.Pool.getItemByCreateFun('hintWord', this.hintWord.create, this.hintWord);
        target.addChild(hintWord);
        hintWord.pos(100, -10);
        hintWord['HintWord'].initProperty(proPertyType, numberValue);
    };
    /**重来，重置各种属性
     * 所有糖果和怪物都炸掉
     * 分数清零
     * 然后主角复活
    */
    MainSceneControl.prototype.restart = function () {
        // 消除敌人
        // 先隐藏在一并删除，否则可能会有length变化造成错误
        var enemyDelayed = 0;
        var len1 = this.enemyParent._children.length;
        var _loop_2 = function (i) {
            Laya.timer.frameOnce(enemyDelayed, this_2, function () {
                if (!this.enemyParent._children[i]) {
                    return;
                }
                this.enemyParent._children[i].alpha = 0;
                var x = this.enemyParent._children[i].x;
                var y = this.enemyParent._children[i].y;
                if (this.enemyParent._children[i]['Enemy'] === 'infighting') {
                    this.explodeAni(this.owner, x, y, 'infighting', 15, 100);
                }
                else {
                    this.explodeAni(this.owner, x, y, 'range', 15, 100);
                }
                if (i === len1 - 1) {
                    this.enemyParent.removeChildren(0, len1 - 1);
                }
            });
            enemyDelayed += 20;
        };
        var this_2 = this;
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            _loop_2(i);
        }
        // 消除爆炸糖果
        // 先隐藏在一并删除，否则可能会有length变化造成错误
        var candyExpoleDelayed = 0;
        var len2 = this.candy_ExplodeParent._children.length;
        var _loop_3 = function (j) {
            Laya.timer.frameOnce(candyExpoleDelayed, this_3, function () {
                if (!this.candy_ExplodeParent._children[j]) {
                    return;
                }
                this.candy_ExplodeParent._children[j].alpha = 0;
                var name = this.candy_ExplodeParent._children[j].name.substring(0, 11);
                var x = this.candy_ExplodeParent._children[j].x;
                var y = this.candy_ExplodeParent._children[j].y;
                this.explodeAni(this.owner, x, y, 'disappear', 8, 1000);
                if (j === len2 - 1) {
                    this.candy_ExplodeParent.removeChildren(0, len2 - 1);
                }
            });
            candyExpoleDelayed += 20;
        };
        var this_3 = this;
        for (var j = 0; j < len2; j++) {
            _loop_3(j);
        }
        // 消除糖果,如果此时没有糖果直接初始化
        // 先隐藏在一并删除，否则可能会有length变化造成错误
        var candyDelayed = 0;
        var len3 = this.candyParent._children.length;
        if (len3 === 0) {
            this.roleResurgenceAni();
            this.candyParent.removeChildren(0, len3 - 1);
            return;
        }
        var _loop_4 = function (k) {
            Laya.timer.frameOnce(candyDelayed, this_4, function () {
                if (!this.candyParent._children[k]) {
                    return;
                }
                this.candyParent._children[k].alpha = 0;
                var name = this.candyParent._children[k].name.substring(0, 11);
                var x = this.candyParent._children[k].x;
                var y = this.candyParent._children[k].y;
                this.explodeAni(this.owner, x, y, 'disappear', 8, 1000);
                if (k === len3 - 1) {
                    this.roleResurgenceAni();
                    this.candyParent.removeChildren(0, len3 - 1);
                }
            });
            candyDelayed += 20;
        };
        var this_4 = this;
        for (var k = 0; k < len3; k++) {
            _loop_4(k);
        }
    };
    /**主角复活重新开始*/
    MainSceneControl.prototype.roleResurgenceAni = function () {
        var skeleton1 = this.role_01.getChildByName('skeleton');
        skeleton1.play('speak', true);
        Laya.Tween.to(this.role_01, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
            this.restartProperties();
        }, []), 0);
        var skeleton2 = this.role_02.getChildByName('skeleton');
        skeleton2.play('speak', true);
        Laya.Tween.to(this.role_02, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**重新开始所需改变的属性*/
    MainSceneControl.prototype.restartProperties = function () {
        this.startGame();
        //主角复活
        this.role_01['Role'].role_Warning = false;
        this.role_01['Role'].roleDeath = false;
        this.role_01['Role'].initProperty();
        this.role_02['Role'].role_Warning = false;
        this.role_02['Role'].roleDeath = false;
        this.role_02['Role'].initProperty();
        this.operating['OperationControl'].initProperty();
    };
    /**返回主界面清理场景*/
    MainSceneControl.prototype.returnStartSet = function () {
        // 分数清零
        this.scoreLabel.value = '0';
        this.noStarted();
        // 清空三个元素
        var len1 = this.enemyParent._children.length;
        this.enemyParent.removeChildren(0, len1 - 1);
        var len2 = this.candy_ExplodeParent._children.length;
        this.candy_ExplodeParent.removeChildren(0, len2 - 1);
        var len3 = this.candyParent._children.length;
        this.candyParent.removeChildren(0, len3 - 1);
        //主角复活
        this.role_01.alpha = 1;
        this.role_01['Role'].role_Warning = false;
        this.role_01['Role'].roleDeath = false;
        this.role_01['Role'].initProperty();
        this.role_02.alpha = 1;
        this.role_02['Role'].role_Warning = false;
        this.role_02['Role'].roleDeath = false;
        this.role_02['Role'].initProperty();
        // 操作台重置
        this.operating['OperationControl'].initProperty();
    };
    /**属性刷新显示规则*/
    MainSceneControl.prototype.onUpdate = function () {
        // 游戏结束
        if (this.gameOver) {
            return;
        }
        // 主角全部死亡则停止移动,并且弹出复活
        if (this.role_01['Role'].roleDeath && this.role_02['Role'].roleDeath) {
            this.gameOver = true;
            this.createResurgence();
            return;
        }
        // 时刻对敌人的层级进行排序
        this.enemyOrder();
        // 记录时间
        this.timerControl += 1;
        // 根据时间线，刷新怪物属性
        this.enemyPropertyUpdate();
        // 角色死亡复活状况
        this.roleDeathState();
        // 通过时间间隔产生敌人，左右产生的敌人不一样
        // 左
        if (this.enemySwitch_01) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_01 > this.enemyProperty.creatInterval) {
                this.enemyTime_01 = nowTime;
                this.enemyTagRole = this.role_01;
                this.careatEnemy('left', this.role_01, 'infighting');
                this.careatEnemy('left', this.role_01, 'range');
                this.enemyTagRole = null;
            }
        }
        // 右
        if (this.enemySwitch_02) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_02 > this.enemyProperty.creatInterval) {
                this.enemyTime_02 = nowTime;
                this.enemyTagRole = this.role_02;
                this.careatEnemy('right', this.role_02, 'infighting');
                this.careatEnemy('right', this.role_02, 'range');
                this.enemyTagRole = null;
            }
        }
    };
    MainSceneControl.prototype.onDisable = function () {
    };
    return MainSceneControl;
}(Laya.Script));
exports.default = MainSceneControl;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OperationButton = /** @class */ (function (_super) {
    __extends(OperationButton, _super);
    function OperationButton() {
        return _super.call(this) || this;
    }
    OperationButton.prototype.onEnable = function () {
        this.initProperty();
        this.buttonClink();
    };
    /**初始化一些属性*/
    OperationButton.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.clicksCount = 0;
        this.clicksNameArr = [];
        this.rightName = [];
        this.errorName = [];
        this.alreadyGroup = [];
        this.candyParent = this.selfScene['MainSceneControl'].candyParent;
        this.candy_Explode = this.selfScene['MainSceneControl'].candy_Explode;
        this.candy_ExplodeParent = this.selfScene['MainSceneControl'].candy_ExplodeParent;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.candyNameArr = this.selfScene['MainSceneControl'].candyNameArr;
        this.timer = this.selfScene['MainSceneControl'].timer;
        this.rewardWords = this.selfScene['MainSceneControl'].rewardWords;
        this.timeSchedule = this.timer.getChildByName('timeSchedule');
        this.timeSchedule.value = 1;
        // this.operateSwitch = true;
        this.self['OperationControl'] = this;
    };
    /**操作按钮的点击事件*/
    OperationButton.prototype.buttonClink = function () {
        for (var i = 0; i < this.self._children.length; i++) {
            this.self._children[i].on(Laya.Event.MOUSE_DOWN, this, this.down);
            this.self._children[i].on(Laya.Event.MOUSE_MOVE, this, this.move);
            this.self._children[i].on(Laya.Event.MOUSE_UP, this, this.up);
            this.self._children[i].on(Laya.Event.MOUSE_OUT, this, this.out);
        }
    };
    /**判断按下的按钮和准备位置的糖果是否匹配;
     * 如果匹配，那么看下糖果上面写的几次点击次数，需要连续点击到这个次数才可以吃糖果
     * 如果次数没有达到，却点了另一种按钮，那么前面的次数会重置，并且出现一个怪物
     * 如果不匹配，说明点错了，糖果会跳到外面变成一个怪物,则出现一个怪物
     */
    OperationButton.prototype.down = function (event) {
        if (!this.operateSwitch) {
            return;
        }
        this.clicksCount++;
        // 通过点击的按钮匹配对应的糖果类型
        switch (event.currentTarget.name) {
            case 'redButton':
                this.clicksNameArr.push('redCandy___');
                break;
            case 'yellowButton':
                this.clicksNameArr.push('yellowCandy');
                break;
            case 'greenButton':
                this.clicksNameArr.push('greenCandy_');
                break;
            case 'blueButton':
                this.clicksNameArr.push('blueCandy__');
                break;
            default: break;
        }
        // 两两对比判断之后清空这个数组，当点击次数是2的倍数时进行对比
        if (this.clicksCount % 2 === 0 && this.clicksCount >= 2) {
            this.clickTwoCompareName(); //第二次点击对比
        }
        else {
            this.clickOneCompareName(); //第一次点击对比
        }
        // 点完结算
        if (this.clicksCount === this.selfScene['MainSceneControl'].startRow * 2) {
            this.settlement();
        }
        event.currentTarget.scale(0.9, 0.9);
    };
    /**点击两次之后对比名称
     * 点击次数和组数都是固定的，分别是10次和5组
     *所以点击了2次对应的就是第0组，4次就是第1组......
    */
    OperationButton.prototype.clickTwoCompareName = function () {
        var nameArr = [];
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var candy = this.candyParent._children[i];
            if (candy["Candy"].group === (this.clicksCount - 2) / 2) { //每点两次对应的糖果组
                nameArr.push(candy.name);
                var firstCandy = this.candyParent.getChildByName(nameArr[0]);
                // 文字显示
                if (nameArr.length >= 2) {
                    var compareArr = [nameArr[0].substring(0, 11), nameArr[1].substring(0, 11)];
                    // 对比两个数组看看是否相等，排序，转成字符串方可对比；
                    if (compareArr.sort().toString() === this.clicksNameArr.sort().toString()) {
                        this.rightAndWrongShow('right', firstCandy);
                        this.rightAndWrongShow('right', candy);
                        // 正确的糖果名称保存
                        this.rightName.push(nameArr[0], nameArr[1]);
                    }
                    else {
                        this.rightAndWrongShow('wrong', firstCandy);
                        this.rightAndWrongShow('wrong', candy);
                        // 错误的糖果名保存
                        this.errorName.push(nameArr[0], nameArr[1]);
                    }
                    // 已经点过的糖果的组数
                    this.alreadyGroup.push(candy["Candy"].group);
                }
            }
        }
        this.clickHint();
        this.clicksNameArr = []; //对比后清空
    };
    /**每点一次的时候判断点击是否正确，并且给予动画提示
     * 此时分为三种情况
     * 一个都不对，那么直接写上错误
     * 对一个，那么直接写上正确
     * 如果两个相同都和 this.clicksNameArr[0]匹配，那么我只需要判断一个就行
     * 因为第二次点击的时候会补上标记
    */
    OperationButton.prototype.clickOneCompareName = function () {
        var nameArr = [];
        var first_Name = null;
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var candy = this.candyParent._children[i];
            if (candy["Candy"].group === (this.clicksCount - 1) / 2) { //每点一次对应的糖果组
                if (candy.name.substring(0, 11) === this.clicksNameArr[0]) { //只判断一次，然后返回
                    this.rightAndWrongShow('right', candy);
                    break;
                }
                else {
                    // number用于记录第几次循环，最多两次循环
                    nameArr.push(candy.name);
                    if (nameArr.length === 2) {
                        // 当nameArr.length=2的时候说明一个都不对，那么直接结束本组
                        var firstCandy = this.candyParent.getChildByName(nameArr[0]);
                        this.rightAndWrongShow('wrong', firstCandy);
                        this.rightAndWrongShow('wrong', candy);
                        //重新初始化下一组
                        this.clicksNameArr = [];
                        this.clicksCount++;
                        this.errorName.push(nameArr[0], nameArr[1]);
                        this.alreadyGroup.push(candy["Candy"].group);
                        this.clickHint();
                    }
                }
            }
        }
    };
    /**
     *  点击正确和错误的显示
     * @param rightAndWrong 正确还是错误
     * @param candy 当前判断点击的糖果
    */
    OperationButton.prototype.rightAndWrongShow = function (rightAndWrong, candy) {
        // 如果有提示了，就先删除
        var originImg = candy.getChildByName('img');
        if (originImg) {
            originImg.removeSelf();
        }
        // 重新显示一个提示
        var nowImg = new Laya.Image();
        if (rightAndWrong == 'right') {
            nowImg.skin = 'candy/ui/正确提示.png';
        }
        else if (rightAndWrong == 'wrong') {
            nowImg.skin = 'candy/ui/错误提示.png';
        }
        else {
            return;
        }
        nowImg.pivotX = nowImg.width / 2;
        nowImg.pivotY = nowImg.height / 2;
        nowImg.name = 'img';
        nowImg.scaleX = 1;
        nowImg.scaleY = 1;
        candy.addChild(nowImg);
        if (candy.x < Laya.stage.width / 2) {
            nowImg.pos(-20, 50);
        }
        else {
            nowImg.pos(20 + candy.width, 50);
        }
        // // 出现动画
        // Laya.Tween.to(nowImg, { scaleX: 1, scaleY: 1 }, 100, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        // }), 0);
    };
    /**提示我应该点哪一组了
     * 这一组结束之后提示下一组
     * 然后这一组的提示消失
    */
    OperationButton.prototype.clickHint = function () {
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var presentGroup = this.alreadyGroup[this.alreadyGroup.length - 1];
            var candy = this.candyParent._children[i];
            var candyGroup = candy['Candy'].group;
            if (this.alreadyGroup.length === 0) {
                if (candyGroup === 0) {
                    candy.scale(1.1, 1.1);
                }
            }
            else {
                if (candyGroup === presentGroup) {
                    candy.scale(1, 1);
                }
                if (candyGroup === presentGroup + 1) {
                    candy.scale(1.1, 1.1);
                }
            }
        }
    };
    /**结算，当10个都点击完毕后，执行吃糖果或者是变成爆炸糖果过的动画*/
    OperationButton.prototype.settlement = function () {
        this.operateSwitch = false;
        // 正确移动到主角处加属性
        if (this.rightName.length > 0) {
            for (var i = 0; i < this.rightName.length; i++) {
                var candy = this.candyParent.getChildByName(this.rightName[i]);
                if (candy.x < Laya.stage.width / 2) {
                    candy['Candy'].candyTagRole = this.selfScene['MainSceneControl'].role_01;
                    candy['Candy'].candyFlyToRole();
                }
                else {
                    candy['Candy'].candyTagRole = this.selfScene['MainSceneControl'].role_02;
                    candy['Candy'].candyFlyToRole();
                }
            }
        }
        // 错误的变成敌人
        if (this.errorName.length > 0) {
            for (var j = 0; j < this.errorName.length; j++) {
                var candy = this.candyParent.getChildByName(this.errorName[j]);
                this.candybecomeEnemy(candy);
            }
        }
        this.additionAward();
        // 清空
        this.rightName = [];
        this.errorName = [];
        this.clicksCount = 0;
        this.clicksNameArr = [];
        this.alreadyGroup = [];
        //发射糖果预备动画，监听这个动画完成后发射糖果
        this.selfScene['MainSceneControl'].candyLaunch_01.play('prepare', false);
        this.selfScene['MainSceneControl'].candyLaunch_02.play('prepare', false);
    };
    /**计时器控制
     * 当时间小于零的时候所有还没有点击的糖果直接变成敌人
     * 并且结算，重置属性
    */
    OperationButton.prototype.timerControl = function () {
        if (this.timeSchedule.value > 0 && this.operateSwitch) {
            this.timeSchedule.value -= 0.0025;
        }
        else if (this.timeSchedule.value <= 0 && this.operateSwitch) {
            // 没有点击过的全部变成敌人,减去点错的糖果
            var groupArr = [0, 1, 2, 3, 4];
            for (var i = 0; i < this.alreadyGroup.length; i++) {
                for (var j = 0; j < groupArr.length; j++) {
                    if (this.alreadyGroup[i] === groupArr[j]) {
                        groupArr.shift();
                    }
                }
            }
            // 把没有点击的变成敌人
            for (var k = 0; k < this.candyParent._children.length; k++) {
                var candy = this.candyParent._children[k];
                for (var l = 0; l < groupArr.length; l++) {
                    if (candy["Candy"].group === groupArr[l]) {
                        this.candybecomeEnemy(candy);
                    }
                }
            }
            // 点击过的结算
            this.settlement();
        }
    };
    /**根据进度条剩余的时间给予奖励加成
     * 分段给予不同的奖励
     * 如果有一个点错了，都不会给予特殊奖励
    */
    OperationButton.prototype.additionAward = function () {
        if (this.errorName.length > 0) {
            return;
        }
        if (this.timeSchedule.value > 0.8) {
            this.creatRewardWords('干得漂亮');
        }
        else if (this.timeSchedule.value > 0.6) {
            this.creatRewardWords('太棒了');
        }
        else if (this.timeSchedule.value > 0.4) {
            this.creatRewardWords('牛皮');
        }
    };
    /**提示奖励文字的创建*/
    OperationButton.prototype.creatRewardWords = function (word) {
        var rewardWords = Laya.Pool.getItemByCreateFun('rewardWords', this.rewardWords.create, this.rewardWords);
        this.selfScene.addChild(rewardWords);
        rewardWords['RewardWords'].createWordsAni(word);
    };
    /**点错后，糖果跳到地上变成1爆炸糖果
     * @param candy 这个糖果的信息
    */
    OperationButton.prototype.candybecomeEnemy = function (candy) {
        // 左右两个方向
        var point; //固定地点
        var explodeTarget; //攻击对象
        // 最终位置
        var moveX;
        var moveY;
        if (candy.x < Laya.stage.width / 2) {
            explodeTarget = this.selfScene['MainSceneControl'].role_01;
            point = new Laya.Point(candy.x - 200, candy.y + 80);
        }
        else {
            explodeTarget = this.selfScene['MainSceneControl'].role_02;
            point = new Laya.Point(candy.x + 200, candy.y + 80);
        }
        // 播放翻转动画
        if (candy['Candy'].skeleton) {
            switch (candy.name.substring(0, 11)) {
                case 'yellowCandy':
                    candy['Candy'].skeleton.play('yellow_turnLeft', true);
                    break;
                case 'redCandy___':
                    candy['Candy'].skeleton.play('red_turnLeft', true);
                    break;
                case 'blueCandy__':
                    candy['Candy'].skeleton.play('blue_turnLeft', true);
                    break;
                case 'greenCandy_':
                    candy['Candy'].skeleton.play('green_turnLeft', true);
                    break;
                default:
                    break;
            }
            candy['Candy'].skeleton.playbackRate(4);
        }
        this.flewToGround(candy, point, explodeTarget);
    };
    /**糖果飞到地上的动画
     * @param candy 糖果
     * @param targetP 目标点
     * @param explodeTarget 被爆炸的目标
    */
    OperationButton.prototype.flewToGround = function (candy, targetP, explodeTarget) {
        // 糖果本身
        var HalfX;
        var HalfY;
        var distancePer = 2;
        if (candy.x > Laya.stage.width / 2) {
            HalfX = candy.x - (candy.x - targetP.x) / distancePer;
        }
        else {
            HalfX = candy.x + (targetP.x - candy.x) / distancePer;
        }
        HalfY = candy.y - 100;
        // 第一步飞天放大
        Laya.Tween.to(candy, { x: HalfX, y: HalfY, scaleX: 1.3, scaleY: 1.3 }, 500, null, Laya.Handler.create(this, function () {
            // 第二步降落缩小
            Laya.Tween.to(candy, { x: targetP.x, y: targetP.y, scaleX: 0.9, scaleY: 0.9 }, 400, null, Laya.Handler.create(this, function () {
                // 生成1个爆炸糖果
                var explodeCandy = this.selfScene['MainSceneControl'].createExplodeCandy(candy.name);
                explodeCandy.pos(candy.x, candy.y);
                explodeCandy.scale(0.9, 0.9);
                this.selfScene['MainSceneControl'].explodeAni(this.selfScene, explodeCandy.x, explodeCandy.y, 'disappear', 8, 1000);
                candy.removeSelf();
                // 层级排序
                this.selfScene['MainSceneControl'].explodeCandyzOrder();
                // 第三步停留，延迟给予爆炸目标
                Laya.Tween.to(candy, {}, 500, null, Laya.Handler.create(this, function () {
                    explodeCandy['Candy_Explode'].explodeTarget = explodeTarget;
                }, []), 0);
            }, []), 0);
        }, []), 0);
        // 糖果的影子处理
        var shadow = candy.getChildByName('shadow');
        // 拉开距离并缩小
        Laya.Tween.to(shadow, { x: -20, y: 80, scaleX: 0.8, scaleY: 0.8, }, 300, null, Laya.Handler.create(this, function () {
            // 第二部回归
            Laya.Tween.to(shadow, { x: 0, y: 0, scaleX: 1, scaleY: 1 }, 500, null, Laya.Handler.create(this, function () {
            }), 0);
        }), 0);
    };
    /**移动*/
    OperationButton.prototype.move = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**抬起*/
    OperationButton.prototype.up = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**出屏幕*/
    OperationButton.prototype.out = function (event) {
        event.currentTarget.scale(1, 1);
    };
    OperationButton.prototype.onUpdate = function () {
        // 主角全部死亡游戏结束
        if (this.selfScene['MainSceneControl'].gameOver) {
            this.operateSwitch = false;
            return;
        }
        //计时器
        this.timerControl();
    };
    OperationButton.prototype.onDisable = function () {
    };
    return OperationButton;
}(Laya.Script));
exports.default = OperationButton;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Ranking = /** @class */ (function (_super) {
    __extends(Ranking, _super);
    function Ranking() {
        return _super.call(this) || this;
    }
    Ranking.prototype.onEnable = function () {
        this.init();
    };
    /**初始化*/
    /**初始化一些非动画属性*/
    Ranking.prototype.init = function () {
        this.self = this.owner;
        this.background.alpha = 0;
        this.background.width = Laya.stage.width;
        this.background.height = Laya.stage.height;
        this.content.x = Laya.stage.width / 2;
        this.content.y = Laya.stage.height / 2;
        this.content.scale(0, 0);
        this.content.alpha = 0;
        this.appear();
    };
    Ranking.prototype.onAwake = function () {
        if (Laya.Browser.onMiniGame) {
            //加载一个json和图集
            Laya.loader.load(["res/atlas/test.atlas"], Laya.Handler.create(null, function () {
                //加载完成
                //使用接口将图集透传到子域
                Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/test.atlas");
                var wx = Laya.Browser.window.wx;
                var openDataContext = wx.getOpenDataContext();
                openDataContext.postMessage({ action: 'ranking' });
            }));
        }
    };
    /**出场动画*/
    Ranking.prototype.appear = function () {
        Laya.Tween.to(this.content, { rotation: 720, alpha: 1, scaleX: 1, scaleY: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.rotation = 0;
            this.btnClikClink();
        }, []), 0);
        Laya.Tween.to(this.background, { alpha: 0.6 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**消失动画*/
    Ranking.prototype.vanish = function () {
        this.self.pivotX = Laya.stage.width / 2;
        this.self.pivotY = Laya.stage.height / 2;
        this.self.x = Laya.stage.width / 2;
        this.self.y = Laya.stage.height / 2;
        Laya.Tween.to(this.self, { rotation: -720, alpha: 0, scaleX: 0, scaleY: 0, x: 1500 }, 700, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.self.removeSelf();
        }, []), 0);
    };
    /**开启按钮点击事件*/
    Ranking.prototype.btnClikClink = function () {
        this.but_Close.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.but_Close.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.but_Close.on(Laya.Event.MOUSE_UP, this, this.up);
        this.but_Close.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**关闭按钮点击事件*/
    Ranking.prototype.btnCloseClink = function () {
        this.but_Close.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.but_Close.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.but_Close.off(Laya.Event.MOUSE_UP, this, this.up);
        this.but_Close.off(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下*/
    Ranking.prototype.down = function (event) {
        this.but_Close.scale(0.9, 0.9);
    };
    /**移动*/
    Ranking.prototype.move = function (event) {
        this.but_Close.scale(0.9, 0.9);
    };
    /**抬起增加属性
     * 由于这里的按钮不是及时消失，所以要关闭点击事件
    */
    Ranking.prototype.up = function (event) {
        this.but_Close.scale(1, 1);
        this.vanish();
    };
    /**出屏幕*/
    Ranking.prototype.out = function (event) {
        this.but_Close.scale(1, 1);
    };
    Ranking.prototype.onDisable = function () {
    };
    return Ranking;
}(Laya.Script));
exports.default = Ranking;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Resurgence = /** @class */ (function (_super) {
    __extends(Resurgence, _super);
    function Resurgence() {
        return _super.call(this) || this;
    }
    Resurgence.prototype.onEnable = function () {
        this.init();
    };
    /**初始化*/
    Resurgence.prototype.init = function () {
        this.self = this.owner;
        this.self.pivotX = 0;
        this.self.pivotY = 0;
        this.self.x = this.self.pivotX;
        this.self.y = this.self.pivotY;
        this.selfScene = this.self.scene;
        this.background = this.self.getChildByName('background');
        this.background.alpha = 0;
        this.content = this.self.getChildByName('content');
        this.content.alpha = 0;
        this.resurgence_Btn = this.content.getChildByName('resurgence_Btn');
        this.resurgence_Btn.x = -1200;
        this.digitalPlate = this.content.getChildByName('digitalPlate');
        this.digitalPlate.x = 1200;
        this.digital = this.content.getChildByName('digital');
        this.digital.scaleX = 0;
        this.digital.scaleY = 0;
        this.digital.alpha = 0;
        this.digital.value = '5';
        this.timeLine = 0;
        this.countdown = false;
        this.hintWord = this.selfScene['MainSceneControl'].hintWord;
        this.settlement = this.selfScene['MainSceneControl'].settlement;
        Laya.timer.frameOnce(100, this, function () {
            this.appearAni();
        });
        this.adaptive();
    };
    /**自适应*/
    Resurgence.prototype.adaptive = function () {
        this.background.width = Laya.stage.width;
        this.background.height = Laya.stage.height;
        this.content.x = Laya.stage.width / 2;
        this.content.y = Laya.stage.height / 2;
        this.self.width = Laya.stage.width;
        this.self.height = Laya.stage.height;
        this.self.alpha = 1;
        this.self.scale(1, 1);
        this.self.rotation = 0;
        this.self.x = 0;
        this.self.y = 0;
    };
    /**动画初始化*/
    Resurgence.prototype.appearAni = function () {
        // 总体显现
        Laya.Tween.to(this.content, { alpha: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
        // 复活按钮
        Laya.Tween.to(this.resurgence_Btn, { x: 375, rotation: 720 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.resurgence_Btn.rotation = 0;
        }, []), 0);
        // 数字地板
        Laya.Tween.to(this.digitalPlate, { x: 375, rotation: 720 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.digitalPlate.rotation = 0;
            this.resurgence_BtnClink();
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0.7 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
        // 倒计时数字的倒计时动画
        Laya.Tween.to(this.digital, { scaleX: 1.2, scaleY: 1.2, alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
            this.countdown = true;
        }, []), 0);
    };
    /**切换界面的消失动画
     * @param type 切换到什么界面
    */
    Resurgence.prototype.cutTnterface = function (type) {
        this.self.pivotX = Laya.stage.width / 2;
        this.self.pivotY = Laya.stage.height / 2;
        this.self.x = this.self.pivotX;
        this.self.y = this.self.pivotY;
        // 移动
        Laya.Tween.to(this.self, { x: 1500, rotation: 720, scaleX: 0, scaleY: 0, alpha: 0 }, 700, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            if (type === 'main') {
                this.roleResurgenceAni();
                this.self.removeSelf();
            }
            else {
                this.self.removeSelf();
            }
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0 }, 450, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**主角复活重新开始*/
    Resurgence.prototype.roleResurgenceAni = function () {
        var role_01 = this.selfScene['MainSceneControl'].role_01;
        var role_02 = this.selfScene['MainSceneControl'].role_02;
        Laya.Tween.to(role_01, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
            this.hintWordMove();
        }, []), 0);
        Laya.Tween.to(role_02, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**属性增加提示动画*/
    Resurgence.prototype.hintWordMove = function () {
        var delayed = 0;
        var MainSceneControl = this.selfScene['MainSceneControl'];
        var role_01 = MainSceneControl.role_01;
        var role_02 = MainSceneControl.role_02;
        var _loop_1 = function (i) {
            Laya.timer.frameOnce(delayed, this_1, function () {
                switch (i) {
                    case 0:
                        MainSceneControl.createHintWord(role_01, '攻击里', 20);
                        MainSceneControl.createHintWord(role_02, '攻击里', 20);
                        role_01['Role'].role_property.attackValue += 20;
                        role_02['Role'].role_property.attackValue += 20;
                        break;
                    case 1:
                        MainSceneControl.createHintWord(role_01, '生命', 1000);
                        MainSceneControl.createHintWord(role_02, '生命', 1000);
                        role_01['Role'].role_property.blood = 1000;
                        role_02['Role'].role_property.blood = 1000;
                        break;
                    case 2:
                        MainSceneControl.createHintWord(role_01, '公鸡速度', 20);
                        MainSceneControl.createHintWord(role_02, '公鸡速度', 20);
                        role_01['Role'].role_property.attackSpeed += 20;
                        role_02['Role'].role_property.attackSpeed += 20;
                        break;
                    case 3:
                        MainSceneControl.createHintWord(role_01, '防御力', 10);
                        MainSceneControl.createHintWord(role_02, '防御力', 10);
                        role_01['Role'].role_property.defense += 10;
                        role_02['Role'].role_property.defense += 10;
                        break;
                    default:
                        break;
                }
                // 播放完毕之后开始游戏
                if (i === 3) {
                    this.resurgenceProperties();
                }
            });
            delayed += 25;
        };
        var this_1 = this;
        for (var i = 0; i < 4; i++) {
            _loop_1(i);
        }
    };
    /**开始或者重新开始所需改变的属性*/
    Resurgence.prototype.resurgenceProperties = function () {
        var MainSceneControl = this.selfScene['MainSceneControl'];
        MainSceneControl.gameOver = false;
        MainSceneControl.role_01['Role'].roleDeath = false;
        MainSceneControl.role_02['Role'].roleDeath = false;
        MainSceneControl.operating['OperationControl'].operateSwitch = true;
    };
    /**复活按钮点击事件*/
    Resurgence.prototype.resurgence_BtnClink = function () {
        this.resurgence_Btn.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.resurgence_Btn.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.resurgence_Btn.on(Laya.Event.MOUSE_UP, this, this.up);
        this.resurgence_Btn.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    Resurgence.prototype.down = function (event) {
        event.currentTarget.scale(0.95, 0.95);
    };
    /**移动*/
    Resurgence.prototype.move = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**抬起增加属性*/
    Resurgence.prototype.up = function (event) {
        event.currentTarget.scale(1, 1);
        this.countdown = false; //停止读秒
        this.cutTnterface('main');
    };
    /**出屏幕*/
    Resurgence.prototype.out = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**创建结算界面*/
    Resurgence.prototype.createSettlement = function () {
        // 稍加延时
        Laya.timer.frameOnce(20, this, function () {
            var settlement = Laya.Pool.getItemByCreateFun('settlement', this.settlement.create, this.settlement);
            this.selfScene.addChild(settlement);
            settlement.pos(0, 0);
        });
    };
    Resurgence.prototype.onUpdate = function () {
        // 倒计时
        if (this.countdown) {
            this.timeLine++;
            // 等于零的时候创建结算界面
            if (this.timeLine % 60 == 0) {
                this.digital.value = (Number(this.digital.value) - 1).toString();
                this.digital.scale(1, 1);
                if (this.digital.value === '-1') {
                    this.countdown = false;
                    this.createSettlement();
                    this.cutTnterface('settlement');
                }
            }
            else {
                // 动画
                this.digital.scaleX -= 0.003;
                this.digital.scaleY -= 0.003;
            }
        }
    };
    Resurgence.prototype.onDisable = function () {
        Laya.Tween.clearAll(this);
        Laya.timer.clearAll(this);
        Laya.Pool.recover('resurgence', this.self);
    };
    return Resurgence;
}(Laya.Script));
exports.default = Resurgence;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RewardWords = /** @class */ (function (_super) {
    __extends(RewardWords, _super);
    function RewardWords() {
        return _super.call(this) || this;
    }
    RewardWords.prototype.onEnable = function () {
        this.initProperty();
    };
    RewardWords.prototype.initProperty = function () {
        this.self = this.owner;
        this.self['RewardWords'] = this;
        this.selfScene = this.self.scene;
        this.self.alpha = 0; //出现的时候隐身，方便做动画
        this.locationY = Laya.stage.height * 2 / 5;
        this.self.y = this.locationY;
        this.self.pivotX = this.self.width / 2;
        this.self.pivotY = this.self.height / 2;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.self.x = 1200;
        this.hintWord = this.selfScene['MainSceneControl'].hintWord;
    };
    /**通过传入的参数来，设置属性图片字的格式
     * @param word 具体字样
     * */
    RewardWords.prototype.createWordsAni = function (word) {
        var url_01 = 'candy/提示文字/牛皮.png';
        var url_02 = 'candy/提示文字/太棒了.png';
        var url_03 = 'candy/提示文字/干得漂亮.png';
        // 避免从对象池拿出来后重复添加
        var sprite;
        if (!this.self.getChildByName('word')) {
            sprite = new Laya.Image;
            this.self.addChild(sprite);
        }
        else {
            sprite = this.self.getChildByName('word');
        }
        sprite.name = 'word';
        sprite.anchorX = 0.5;
        sprite.anchorY = 0.5;
        switch (word) {
            case '牛皮':
                sprite.loadImage(url_01);
                sprite.pos(150, 20);
                this.addScoreNumber = 500;
                break;
            case '太棒了':
                sprite.loadImage(url_02);
                sprite.pos(105, 20);
                this.addScoreNumber = 1000;
                break;
            case '干得漂亮':
                sprite.loadImage(url_03);
                sprite.pos(55, 20);
                this.addScoreNumber = 2000;
                break;
            default:
                break;
        }
        this.wordsType = word;
        this.RewardWordsMove();
    };
    ;
    /**飘字动画时间线*/
    RewardWords.prototype.RewardWordsMove = function () {
        var standingTime;
        switch (this.wordsType) {
            case '牛皮':
                standingTime = 1600;
                break;
            case '太棒了':
                standingTime = 2000;
                break;
            case '干得漂亮':
                standingTime = 2400;
                break;
            default:
                standingTime = 1600;
                break;
        }
        // 创建底板
        var baseboard = new Laya.Image;
        baseboard.skin = 'candy/ui/文字提示底.png';
        this.selfScene.addChild(baseboard);
        baseboard.pos(-800, this.locationY);
        baseboard.anchorX = 0.5;
        baseboard.anchorY = 0.5;
        baseboard.alpha = 0;
        baseboard.scale(0, 0);
        //注意层级
        baseboard.zOrder = 100;
        this.self.zOrder = 110;
        // 底板动画
        var timeLine_baseboard_01 = new Laya.TimeLine;
        timeLine_baseboard_01
            .addLabel('overturn_01', 0).to(baseboard, { scaleX: 1, scaleY: 1, x: Laya.stage.width / 2, rotation: 360, alpha: 1 }, 400, null, 0);
        timeLine_baseboard_01.play('overturn_01', false);
        timeLine_baseboard_01.on(Laya.Event.COMPLETE, this, function () {
            this.letOffFireworks();
            // 第二段
            var timeLine_baseboard_02 = new Laya.TimeLine;
            timeLine_baseboard_02
                .addLabel('pause', 0).to(baseboard, {}, standingTime, null, 0)
                .addLabel('vanish_01', 0).to(baseboard, { scaleX: 0.2, scaleY: 0.2, x: 800, rotation: -360, alpha: 0 }, 650, Laya.Ease.circInOut, 0);
            timeLine_baseboard_02.play('pause', false);
            timeLine_baseboard_02.on(Laya.Event.COMPLETE, this, function () {
                baseboard.removeSelf();
            });
        });
        // 增加分数延迟用于配合上面的动画
        Laya.timer.frameOnce(150, this, function () {
            this.addScoreAni();
        });
        // 字体动画
        var timeLine_self = new Laya.TimeLine;
        timeLine_self.addLabel('appear', -300).to(this.self, { rotation: 360, x: Laya.stage.width / 2, alpha: 1 }, 400, null, 0)
            .addLabel('pause', 0).to(this.self, { x: Laya.stage.width / 2 }, standingTime - 400, null, 0)
            .addLabel('vanish_02', 0).to(this.self, { rotation: -360, x: -1200 }, 650, Laya.Ease.circInOut, 0);
        timeLine_self.play('appear', false);
        timeLine_self.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
        });
    };
    /**烟花规则
     *得分越高爆炸越多
    */
    RewardWords.prototype.letOffFireworks = function () {
        var count;
        var delayed = 0;
        switch (this.wordsType) {
            case '牛皮':
                count = 5;
                break;
            case '太棒了':
                count = 7;
                break;
            case '干得漂亮':
                count = 10;
                break;
            default:
                count = 6;
                break;
        }
        var _loop_1 = function (i) {
            Laya.timer.frameOnce(delayed, this_1, function () {
                var randomX = Math.floor(Math.random() * 100);
                var locationX_01;
                if (i % 2 !== 0) {
                    locationX_01 = Laya.stage.width / 2 + 50 + randomX;
                }
                else {
                    locationX_01 = Laya.stage.width / 2 - 50 - randomX;
                }
                this.selfScene['MainSceneControl'].explodeAni(this.selfScene, locationX_01, this.locationY, 'fireworks', 20, 105);
            });
            delayed += 15;
        };
        var this_1 = this;
        for (var i = 0; i < count; i++) {
            _loop_1(i);
        }
    };
    /**分数增加动画*/
    RewardWords.prototype.addScoreAni = function () {
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        this.selfScene.addChild(hintWord);
        hintWord.zOrder = 110;
        hintWord.pos(Laya.stage.width / 2, this.locationY);
        var proPertyType = '增加分数';
        hintWord['HintWord'].initProperty(proPertyType, this.addScoreNumber);
    };
    RewardWords.prototype.onDisable = function () {
        Laya.Pool.recover('rewardWords', this.self);
    };
    return RewardWords;
}(Laya.Script));
exports.default = RewardWords;
},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role() {
        return _super.call(this) || this;
    }
    Role.prototype.onEnable = function () {
        this.initProperty();
        this.bucketClink();
        this.createBoneAni();
    };
    /**初始化*/
    Role.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.propertyShow = this.self.getChildByName('propertyShow');
        // 默认属性不可见
        this.propertyShow.alpha = 0;
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        this.self['Role'] = this;
        this.selfScene = this.self.scene;
        this.candyParent = this.selfScene['MainSceneControl'].candyParent;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.nowTime = Date.now();
        this.roleDeath = false;
        this.rolePropertySet();
    };
    /**创建骨骼动画皮肤*/
    Role.prototype.createBoneAni = function () {
        //创建动画模板
        this.templet = new Laya.Templet();
        this.templet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this.templet.on(Laya.Event.ERROR, this, this.onError);
        if (this.self.name === 'role_01') {
            this.templet.loadAni("candy/主角/role_01.sk");
        }
        else if (this.self.name === 'role_02') {
            this.templet.loadAni("candy/主角/role_02.sk");
        }
    };
    Role.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    Role.prototype.parseComplete = function () {
        // 播放敌人动画
        this.skeleton = this.templet.buildArmature(0); //模板0
        this.skeletonListen();
        this.self.addChild(this.skeleton);
        this.skeleton.play('speak', true);
        this.skeleton.name = 'skeleton';
        if (this.self.name === 'role_01') {
            this.skeleton.x = 60;
            this.skeleton.y = 72;
        }
        else if (this.self.name === 'role_02') {
            this.skeleton.x = 60;
            this.skeleton.y = 72;
        }
    };
    /**监听*/
    Role.prototype.skeletonListen = function () {
        this.skeleton.on(Laya.Event.LABEL, this, function (e) {
            if (e.name === 'hitOut') {
                this.createBullet();
            }
        });
        this.skeleton.on(Laya.Event.COMPLETE, this, function (e) {
            console.log(e);
        });
    };
    /**创建子弹*/
    Role.prototype.createBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('roleBullet', this.roleBullet.create, this.roleBullet);
        this.bulletParent.addChild(bullet);
        bullet.pos(this.self.x, this.self.y);
        var pic = bullet.getChildByName('pic');
        if (this.self.name === 'role_01') {
            pic.skin = 'candy/主角/主角1子弹.png';
        }
        else if (this.self.name === 'role_02') {
            pic.skin = 'candy/主角/主角2子弹.png';
        }
        this.lockedBulletTarget(bullet);
        bullet['Bullet'].belongRole = this.self;
    };
    /**播放速度相对攻击速度进行调整
      * 当播放间隔低于500后进行调整
     */
    Role.prototype.playSpeedAdjust = function () {
        // 播放速度调整
        var playSpeed;
        if ((500 - this.role_property.attackSpeed) / 500 > 0) {
            playSpeed = 1 + (500 - this.role_property.attackSpeed) / 500;
        }
        else {
            playSpeed = 1;
        }
        this.skeleton.playbackRate(playSpeed);
    };
    /**发动攻击
     * 目前之发射子弹
    */
    Role.prototype.onsetAttack = function () {
        // 攻击播放一次
        this.skeleton.play('attack', false);
        this.playSpeedAdjust();
    };
    /**主角的属性
     *两个主角属性分别计算
     *四个属性依次是，生命值，子弹攻击力，子弹发射频率和弹道速度，防御能力
    */
    Role.prototype.rolePropertySet = function () {
        if (this.self.name === 'role_01') {
            this.role_property = {
                blood: 2000,
                attackValue: 100,
                attackSpeed: 200,
                defense: 15,
            };
        }
        else if (this.self.name === 'role_02') {
            this.role_property = {
                blood: 2000,
                attackValue: 100,
                attackSpeed: 200,
                defense: 15,
            };
        }
    };
    /**属性实时刷新刷新*/
    Role.prototype.updateProperty = function () {
        // 血条上的血量显示、
        this.bloodLabel.text = this.role_property.blood;
        // 属性显示框内的属性显示
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.role_property.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.role_property.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.role_property.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.role_property.defense;
    };
    /**主角的点击事件
     * 和长按出现属性展示页面
     * 滑动可以拖动主角到规定的位置
    */
    Role.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Role.prototype.down = function (event) {
    };
    /**移动*/
    Role.prototype.move = function (event) {
    };
    /**抬起*/
    Role.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Role.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /**锁定最近的那个敌人
    * 如果没有敌人，且屏幕上敌人存在，那么会锁定一个敌人
    * 左右判断原则是，如果是左边角色发射子弹，那么先观察左边有没有敌人，如果有那么优先攻击左边
   */
    Role.prototype.lockedBulletTarget = function (bullet) {
        // 两点之间的距离数组
        var distanceArr = [];
        var enemyParent = this.selfScene['MainSceneControl'].enemyParent;
        for (var i = 0; i < enemyParent._children.length; i++) {
            var enemy = enemyParent._children[i];
            //两点之间的距离
            var dx = enemy.x - this.self.x;
            var dy = enemy.y - this.self.y;
            var distance = Math.sqrt(dx * dx + dy * dy);
            var object = {
                distance: distance,
                name: enemy.name
            };
            distanceArr.push(object);
        }
        // 距离排序
        var compare = function (obj1, obj2) {
            var val1 = obj1.distance;
            var val2 = obj2.distance;
            if (val1 < val2) {
                return -1;
            }
            else if (val1 > val2) {
                return 1;
            }
            else {
                return 0;
            }
        };
        // 找出距离最近的
        distanceArr.sort(compare);
        if (distanceArr.length > 0) {
            var target = enemyParent.getChildByName(distanceArr[0].name);
            bullet['Bullet'].bulletTarget = target;
            bullet['Bullet'].bulletTargetName = target.name;
        }
    };
    Role.prototype.onUpdate = function () {
        if (this.roleDeath) {
            return;
        }
        // 血量低于0则死亡,并且弹出复活界面
        if (this.role_property.blood <= 0) {
            this.role_property.blood = 0; //保证主角的血量显示不小于0;
            if (this.self.name === 'role_01') {
                this.roleDeath = true;
                this.self.alpha = 0;
            }
            else if (this.self.name === 'role_02') {
                this.roleDeath = true;
                this.self.alpha = 0;
            }
        }
        // 刷新属性
        this.updateProperty();
        //创建子弹
        var nowTime = Date.now();
        if (this.skeleton && this.role_Warning) {
            if (nowTime - this.nowTime > this.role_property.attackSpeed) {
                if (this.role_Warning) {
                    this.onsetAttack();
                    this.nowTime = nowTime;
                }
            }
        }
    };
    Role.prototype.onDisable = function () {
    };
    return Role;
}(Laya.Script));
exports.default = Role;
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        return _super.call(this) || this;
    }
    Bullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    Bullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.hintWord = this.mainSceneControl.hintWord;
        this.selfSpeed = 15;
        // 属性赋值
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        this.attackValue = this.role_01['Role'].role_property.attackValue;
        this.self['Bullet'] = this;
    };
    /**子弹移动
     * 子弹只有当目标对象和目标对象在父节点内的时候才会移动
     * 目标对象永远存在，只不过他被移除了，所以bulletTarget永不为空，只能判断父节点是否存在
     * 因为下次这个被移除的敌人被重新创建的时候，名称都不一样，所以要判断名称
     * 若果这个目标被移除了，那么发出去的子弹会沿着和主角的方向继续移动到500；
    */
    Bullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent && this.bulletTargetName === this.bulletTarget.name) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己当前和发射自己的主角方向移动
            var point = new Laya.Point(this.self.x - this.belongRole.x, this.self.y - this.belongRole.y);
            // 归一化，向量长度为1。
            point.normalize();
            // 如果静止不动则消失
            if (point.x === 0) {
                this.self.removeSelf();
            }
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    Bullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 射程为500，超过射程消失
        if (this.self.y <= Laya.stage.width * 1 / 3) {
            this.self.removeSelf();
            return;
        }
        // 碰到任何一个怪物，子弹消失怪物掉血
        // 子弹击中近战怪物怪物会后退
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var differenceX = Math.abs(enemy.x - this.self.x);
            var differenceY = Math.abs(enemy.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                if (enemy.name.substring(0, 5) === 'enemy') {
                    this.attackEnemy(enemy);
                }
                else {
                    this.attackCandy_Explode(enemy);
                }
                this.self.removeSelf();
            }
        }
    };
    /**子弹对敌人造成伤害的公式
     * 子弹击中敌人，敌人会被击退
      * 攻击力-敌人防御如果大于零则造成伤害，否则不造成伤害
      * 掉血显示值，伤害小于零则显示0
      * 并且有动画提示文字
     */
    Bullet.prototype.attackEnemy = function (enemy) {
        // 通过攻击力计算掉血状况
        var damage = this.attackValue - enemy['Enemy'].enemyProperty.defense;
        if (damage > 0) {
            enemy['Enemy'].enemyProperty.blood -= damage;
        }
        else {
            damage = 0;
        }
        // 飘字
        // this.hintWordMove(enemy, damage);
        // 触发击退
        enemy['Enemy'].repelTimer = 2;
    };
    /**子弹对爆炸糖果伤害公式
     * 爆炸糖果暂时没有防御力
     * 攻击数次就死亡
     * 没有提示飘字动画*/
    Bullet.prototype.attackCandy_Explode = function (enemy) {
        var health = enemy.getChildByName('health');
        health.value -= 3.4;
    };
    /**提示文字*/
    Bullet.prototype.hintWordMove = function (enemy, damage) {
        // 敌人被消灭了，则不执行这个
        if (enemy.parent === null) {
            return;
        }
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(100, -150);
        enemy.addChild(hintWord);
        var proPertyType = '主角掉血';
        var numberValue;
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    Bullet.prototype.onDisable = function () {
        Laya.Pool.recover('bullet', this.self);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;
},{"./MainSceneControl":10}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Settlement = /** @class */ (function (_super) {
    __extends(Settlement, _super);
    function Settlement() {
        return _super.call(this) || this;
    }
    Settlement.prototype.onEnable = function () {
        this.init();
    };
    /**初始化*/
    Settlement.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.background = this.self.getChildByName('background');
        this.content = this.self.getChildByName('content');
        this.background.alpha = 0;
        this.operation = this.content.getChildByName('operation');
        this.operation.x = -1200;
        this.operation.alpha = 0;
        this.btn_Return = this.operation.getChildByName('btn_Return');
        this.btn_Again = this.operation.getChildByName('btn_Again');
        this.GOLogo = this.content.getChildByName('GOLogo');
        this.GOLogo.x = 1200;
        this.GOLogo.alpha = 0;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.score = this.selfScene['MainSceneControl'].score;
        this.timeLine = 0;
        this.btnAniSwich = true;
        this.btnAniTime = Date.now();
        this.btnAniInterval = 3000;
        this.adaptive();
        this.appearAni();
    };
    /**自适应*/
    Settlement.prototype.adaptive = function () {
        this.background.width = Laya.stage.width;
        this.background.height = Laya.stage.height;
        this.content.x = Laya.stage.width / 2;
        this.content.y = Laya.stage.height / 2 - 50;
        this.self.width = Laya.stage.width;
        this.self.height = Laya.stage.height;
        this.self.x = 0;
        this.self.y = 0;
    };
    //*动画初始化*/ 
    Settlement.prototype.appearAni = function () {
        // 操作按钮
        Laya.Tween.to(this.operation, { x: 375, rotation: 720, alpha: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.operation.rotation = 0;
        }, []), 0);
        // 游戏结束logo
        Laya.Tween.to(this.GOLogo, { x: 375, rotation: 720, alpha: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.GOLogo.rotation = 0;
            this.GOLogoAni();
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0.8 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
        // 得分节点的动画
        this.scoreAni();
    };
    /**得分节点的动画*/
    Settlement.prototype.scoreAni = function () {
        var score = Laya.Pool.getItemByCreateFun('score', this.score.create, this.score);
        // 复制分数
        var Label = score.getChildByName('scoreLabel');
        Label.value = this.scoreLabel.value;
        this.self.addChild(score);
        score.pos(Laya.stage.width / 2, 0);
        score.pivotX = score.width / 2;
        score.pivotY = score.height / 2;
        // 动画
        Laya.Tween.to(score, { x: 375, y: this.content.y - 200, rotation: 720 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.btnClink();
        }, []), 0);
    };
    /**点击重来按钮的消失动画*/
    Settlement.prototype.cutTnterface = function (type) {
        this.self.pivotX = Laya.stage.width / 2;
        this.self.pivotY = Laya.stage.height / 2;
        this.self.x = this.self.pivotX;
        this.self.y = this.self.pivotY;
        // 整体移动
        Laya.Tween.to(this.self, { x: 1500, rotation: 720, scaleX: 0, scaleY: 0, alpha: 0 }, 700, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.self.removeSelf();
            if (type === 'restart') {
                this.selfScene['MainSceneControl'].restart();
            }
            else if (type === 'returnStart') {
                this.selfScene['MainSceneControl'].returnStartSet();
                this.selfScene['MainSceneControl'].createStartInterface('returnStart');
            }
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0 }, 450, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**游戏结束logo的动画*/
    Settlement.prototype.GOLogoAni = function () {
        Laya.Tween.to(this.GOLogo, { alpha: 0.5 }, 800, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.GOLogo, { alpha: 1 }, 800, null, Laya.Handler.create(this, function () {
                this.GOLogoAni();
            }, []), 0);
        }, []), 0);
    };
    Settlement.prototype.btnAni = function () {
        Laya.Tween.to(this.btn_Return, { scaleX: 0.95, scaleY: 0.95 }, 100, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Return, { scaleX: 1.05, scaleY: 1.05 }, 100, null, Laya.Handler.create(this, function () {
                Laya.Tween.to(this.btn_Return, { scaleX: 1, scaleY: 1 }, 100, null, Laya.Handler.create(this, function () {
                }, []), 0);
                Laya.Tween.to(this.btn_Again, { scaleX: 0.95, scaleY: 0.95 }, 100, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(this.btn_Again, { scaleX: 1.05, scaleY: 1.05 }, 100, null, Laya.Handler.create(this, function () {
                        Laya.Tween.to(this.btn_Again, { scaleX: 1, scaleY: 1 }, 100, null, Laya.Handler.create(this, function () {
                        }, []), 0);
                    }, []), 0);
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    /**按钮点击事件*/
    Settlement.prototype.btnClink = function () {
        // 重来
        this.btn_Again.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Again.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Again.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Again.on(Laya.Event.MOUSE_OUT, this, this.out);
        // 返回
        this.btn_Return.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Return.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Return.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Return.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    Settlement.prototype.down = function (event) {
        Laya.timer.pause();
        event.currentTarget.scale(0.95, 0.95);
    };
    /**移动*/
    Settlement.prototype.move = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**抬起增加属性*/
    Settlement.prototype.up = function (event) {
        event.currentTarget.scale(1, 1);
        if (event.currentTarget.name === 'btn_Again') {
            this.cutTnterface('restart');
        }
        else if (event.currentTarget.name === 'btn_Return') {
            this.cutTnterface('returnStart');
        }
        Laya.timer.resume();
        Laya.Tween.clearTween(this.GOLogo); //删除logo的动画
    };
    /**出屏幕*/
    Settlement.prototype.out = function (event) {
        Laya.timer.resume();
        event.currentTarget.scale(1, 1);
    };
    Settlement.prototype.onUpdate = function () {
        var time = Date.now();
        if (this.btnAniSwich) {
            if (time - this.btnAniTime > this.btnAniInterval) {
                this.btnAniTime = time;
                this.btnAni();
            }
        }
    };
    Settlement.prototype.onDisable = function () {
        Laya.Tween.clearAll(this);
    };
    return Settlement;
}(Laya.Script));
exports.default = Settlement;
},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var startGame = /** @class */ (function (_super) {
    __extends(startGame, _super);
    function startGame() {
        return _super.call(this) || this;
    }
    startGame.prototype.onEnable = function () {
        this.init();
    };
    /**动画模式
    * @param type 类型，不同类型动画不一样
   */
    startGame.prototype.aniTypeInit = function (type) {
        if (type === 'start') {
            this.startAniInit();
        }
        else if (type === 'returnStart') {
            this.returnStartInit();
        }
    };
    /**初始化一些非动画属性*/
    startGame.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.self['startGame'] = this;
        this.LoGo.zOrder = 1000; //logo下面要有星星动画
        this.starSwich = true;
        this.starTime = Date.now();
        this.starInterval = 25;
        this.startBSwitch = null;
        this.startBInterval = null;
        this.startBTime = Date.now();
        this.startBNum = 0;
        var heightL = Laya.stage.height;
        this.antiAddiction.y = heightL * 7 / 8 + (this.self.height - heightL) / 2;
        this.ranking = this.selfScene['MainSceneControl'].ranking;
    };
    /**进入界面的动画节点属性*/
    startGame.prototype.startAniInit = function () {
        this.bg_01.x = 187;
        this.bg_01.y = 410;
        this.bg_02.x = 562;
        this.bg_02.y = 410;
        this.bg_03.x = 187;
        this.bg_03.y = 1230;
        this.bg_04.x = 562;
        this.bg_04.y = 1230;
        this.bg_Pure.alpha = 1;
        this.btn_Start.x = -1500;
        this.btn_Start.alpha = 0;
        this.btn_Start.scale(0, 0);
        this.LoGo.x = 1500;
        this.LoGo.alpha = 0;
        this.LoGo.scale(0, 0);
        this.antiAddiction.alpha = 0;
        this.btn_Participate.alpha = 0;
        this.btn_Participate.scale(0, 0);
        this.btn_Ranking.alpha = 0;
        this.btn_Ranking.scale(0, 0);
        this.startAni();
    };
    /**动画初始化*/
    startGame.prototype.startAni = function () {
        // LoGo
        Laya.Tween.to(this.LoGo, { x: 375, rotation: 1080, alpha: 1, scaleX: 1, scaleY: 1 }, 700, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.LoGo.rotation = 0;
            this.starInterval = 300; //logo后面的星星出发间隔，开始很小，现在平稳
        }, []), 0);
        // 开始按钮
        // 动画结束之后出现
        Laya.Tween.to(this.btn_Start, { x: 375, rotation: -1080, alpha: 1, scaleX: 1, scaleY: 1 }, 700, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.btn_Start.rotation = 0;
            this.buttonAppear();
            // 第一次立即执行btn_Start抖动动画
            this.startBSwitch = true;
            this.startBInterval = 0;
            //防沉迷文字动画
            Laya.Tween.to(this.antiAddiction, { alpha: 1 }, 200, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
    };
    /**两个操作按钮出现动画*/
    startGame.prototype.buttonAppear = function () {
        Laya.Tween.to(this.btn_Ranking, { alpha: 1, scaleX: 1, scaleY: 1, rotation: 720 }, 350, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Participate, { alpha: 1, scaleX: 1, scaleY: 1, rotation: -720 }, 350, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                this.btnClink();
            }, []), 0);
        }, []), 0);
    };
    /**开始游戏界面消失动画*/
    startGame.prototype.vanishAni = function () {
        //隐藏其他元素
        this.bg_Pure.alpha = 0;
        this.LoGo.alpha = 0;
        this.btn_Start.alpha = 0;
        this.btn_Ranking.alpha = 0;
        this.btn_Participate.alpha = 0;
        // 防沉迷文字小时
        Laya.Tween.to(this.antiAddiction, { alpha: 0 }, 200, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
        // 4个背景拉开
        Laya.Tween.to(this.bg_01, { x: -1500, alpha: 0, scaleX: 0, scaleY: 0, rotation: -720 }, 800, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.bg_01.rotation = 0;
            this.self.removeSelf();
            this.selfScene['MainSceneControl'].startGame();
        }, []), 0);
        Laya.Tween.to(this.bg_02, { x: 1500, alpha: 0, scaleX: 0, scaleY: 0, rotation: -720 }, 800, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.bg_02.rotation = 0;
        }, []), 0);
        Laya.Tween.to(this.bg_03, { x: -1500, alpha: 0, scaleX: 0, scaleY: 0, rotation: -720 }, 800, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.bg_03.rotation = 0;
        }, []), 0);
        Laya.Tween.to(this.bg_04, { x: 1500, alpha: 0, scaleX: 0, scaleY: 0, rotation: -720 }, 800, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.bg_04.rotation = 0;
        }, []), 0);
    };
    /**返回主界面初始化一些节点的位置*/
    startGame.prototype.returnStartInit = function () {
        this.bg_01.x = -1500;
        this.bg_01.alpha = 0;
        this.bg_02.x = 1500;
        this.bg_02.alpha = 0;
        this.bg_03.x = -1500;
        this.bg_03.alpha = 0;
        this.bg_04.x = 1500;
        this.bg_04.alpha = 0;
        this.bg_Pure.alpha = 0;
        this.btn_Start.x = 375;
        this.btn_Start.alpha = 0;
        this.btn_Start.scale(1, 1);
        this.LoGo.x = 375;
        this.LoGo.alpha = 0;
        this.LoGo.scale(1, 1);
        this.antiAddiction.alpha = 0;
        this.btn_Participate.alpha = 0;
        this.btn_Participate.scale(1, 1);
        this.btn_Ranking.alpha = 0;
        this.btn_Ranking.scale(1, 1);
        this.returnStartAni();
    };
    /**返回主界面动画*/
    /**开始游戏界面消失动画*/
    startGame.prototype.returnStartAni = function () {
        this.bg_01.x = 187;
        this.bg_01.y = 410;
        this.bg_02.x = 562;
        this.bg_02.y = 410;
        this.bg_03.x = 187;
        this.bg_03.y = 1230;
        this.bg_04.x = 562;
        this.bg_04.y = 1230;
        // 4个背景合并
        Laya.Tween.to(this.bg_01, { x: 187, alpha: 1, scaleX: 1, scaleY: 1, rotation: -720 }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            // 显示其他元素
            this.bg_Pure.alpha = 1;
            this.LoGo.alpha = 1;
            this.btn_Ranking.alpha = 1;
            this.btn_Participate.alpha = 1;
            this.bg_01.rotation = 0;
            this.btn_Start.scale(0.1, 0.1);
            this.starInterval = 300; //logo后面的星星出发间隔，开始很小，现在平稳
            Laya.Tween.to(this.btn_Start, { alpha: 1, scaleX: 1, scaleY: 1, rotation: 0 }, 200, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                // 第一次立即执行btn_Start抖动动画
                this.startBSwitch = true;
                this.startBInterval = 0;
                this.btnClink();
                //防沉迷文字动画
                Laya.Tween.to(this.antiAddiction, { alpha: 1 }, 200, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                }, []), 0);
            }, []), 0);
        }, []), 0);
        Laya.Tween.to(this.bg_02, { x: 562, alpha: 1, scaleX: 1, scaleY: 1, rotation: 720 }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.bg_02.rotation = 0;
        }, []), 0);
        Laya.Tween.to(this.bg_03, { x: 187, alpha: 1, scaleX: 1, scaleY: 1, rotation: 720 }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.bg_03.rotation = 0;
        }, []), 0);
        Laya.Tween.to(this.bg_04, { x: 562, alpha: 1, scaleX: 1, scaleY: 1, rotation: -720 }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.bg_04.rotation = 0;
        }, []), 0);
    };
    /**星星特效*/
    startGame.prototype.starShiningEffect = function () {
        var spacingX = 50; //logo以外扩大的像素范围
        var spacingY = 20;
        var insideW = this.LoGo.width - 20; //内部排除的像素范围
        var insideH = this.LoGo.height - 20;
        //右上角原点1
        var originX1 = this.LoGo.x - insideW / 2 - spacingX;
        var originY1 = this.LoGo.y - insideH / 2 - spacingY;
        //以logo为中心左右范围
        var x1;
        var y1;
        do {
            x1 = originX1 + Math.random() * (insideW + spacingX * 2);
        } while (Math.abs(x1 - this.LoGo.x) < insideW / 2);
        y1 = originY1 + Math.random() * insideH + spacingY;
        //以logo为中心上下范围
        //右上角原点2
        var originX2 = this.LoGo.x - insideW / 2;
        var originY2 = this.LoGo.y - insideH / 2 - spacingY;
        var x2;
        var y2;
        x2 = originX2 + Math.random() * insideW;
        do {
            y2 = originY2 + Math.random() * (insideH + spacingY * 2);
        } while (Math.abs(y2 - this.LoGo.y) < insideH / 2);
        // 在两个范围内随机产生一个位置
        var x;
        var y;
        var random = Math.floor(Math.random() * 3);
        if (random === 0) {
            x = x1;
            y = y1;
        }
        else {
            x = x2;
            y = y2;
        }
        var zoder = this.LoGo.zOrder - 1;
        this.selfScene['MainSceneControl'].explodeAni(this.starParent, x, y, 'starShining', 1, 100);
    };
    /**星星消失动画*/
    startGame.prototype.starVanish = function () {
        this.starSwich = false;
        Laya.Tween.to(this.starParent, { alpha: 0, }, 100, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.starParent.removeChildren(0, this.starParent._children.length - 1);
        }, []), 0);
    };
    /**开始按钮左右抖动*/
    startGame.prototype.startBtnAni = function () {
        this.startBInterval = 1050; //重置间隔，第一次的时候是0，立即执行
        Laya.Tween.to(this.btn_Start, { rotation: -5 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Start, { rotation: 5 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                // 动画结束之后清除动画，防止重叠
                Laya.Tween.clearTween(this.btn_Start);
                this.startBNum++;
                if (this.startBNum % 5 === 0) {
                    this.wholeAni();
                    this.startBSwitch = false;
                }
            }, []), 0);
        }, []), 0);
    };
    /**整体动画*/
    startGame.prototype.wholeAni = function () {
        /**开始按钮旋转*/
        Laya.Tween.to(this.btn_Start, { rotation: 360 }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.btn_Start.rotation = 0;
            this.startBSwitch = true;
        }, []), 0);
        // logo上下位移
        Laya.Tween.to(this.LoGo, { y: this.LoGo.y - 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.LoGo, { y: this.LoGo.y + 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
        //下面两个按钮上下位移
        Laya.Tween.to(this.btn_Participate, { y: this.btn_Participate.y + 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Participate, { y: this.btn_Participate.y - 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
        Laya.Tween.to(this.btn_Ranking, { y: this.btn_Ranking.y + 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Ranking, { y: this.btn_Ranking.y - 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
    };
    /**创建排行榜界面*/
    startGame.prototype.createRing = function () {
        this.btnClink();
        var ranking = Laya.Pool.getItemByCreateFun('ranking', this.ranking.create, this.ranking);
        this.selfScene.addChild(ranking);
        ranking.pos(0, 0);
    };
    /**按钮点击事件*/
    startGame.prototype.btnClink = function () {
        // 开始游戏
        this.btn_Start.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Start.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Start.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Start.on(Laya.Event.MOUSE_OUT, this, this.out);
        // 排行
        this.btn_Ranking.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Ranking.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Ranking.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Ranking.on(Laya.Event.MOUSE_OUT, this, this.out);
        // 分享
        this.btn_Participate.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Participate.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Participate.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Participate.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**关闭点击事件*/
    /**按钮点击事件*/
    startGame.prototype.closeBtnClink = function () {
        // 开始游戏
        this.btn_Start.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Start.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Start.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Start.off(Laya.Event.MOUSE_OUT, this, this.out);
        // 排行
        this.btn_Ranking.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Ranking.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Ranking.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Ranking.off(Laya.Event.MOUSE_OUT, this, this.out);
        // 分享
        this.btn_Participate.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Participate.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Participate.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Participate.off(Laya.Event.MOUSE_OUT, this, this.out);
    };
    startGame.prototype.down = function (event) {
        event.currentTarget.scale(0.95, 0.95);
        Laya.timer.pause();
    };
    /**移动*/
    startGame.prototype.move = function (event) {
        Laya.timer.resume();
        event.currentTarget.scale(1, 1);
    };
    /**抬起增加属性
     * 由于这里的按钮不是及时消失，所以要关闭点击事件
    */
    startGame.prototype.up = function (event) {
        event.currentTarget.scale(1, 1);
        if (event.currentTarget.name === 'btn_Start') {
            this.closeBtnClink();
            this.starVanish();
            this.vanishAni();
        }
        else if (event.currentTarget.name === 'btn_Participate') {
        }
        else if (event.currentTarget.name === 'btn_Ranking') {
            this.createRing();
        }
        Laya.timer.resume();
    };
    /**出屏幕*/
    startGame.prototype.out = function (event) {
        Laya.timer.resume();
        event.currentTarget.scale(1, 1);
    };
    startGame.prototype.onUpdate = function () {
        var time = Date.now();
        // 星星动画
        if (this.starSwich) {
            if (time - this.starInterval > this.starTime) {
                this.starTime = time;
                this.starShiningEffect();
            }
        }
        // 开始按钮动画
        if (this.startBSwitch) {
            if (time - this.startBInterval > this.startBTime) {
                this.startBTime = time;
                this.startBtnAni();
            }
        }
    };
    startGame.prototype.onDisable = function () {
        Laya.Tween.clearAll(this);
        Laya.timer.clearAll(this);
    };
    return startGame;
}(Laya.Script));
exports.default = startGame;
},{}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Suspend = /** @class */ (function (_super) {
    __extends(Suspend, _super);
    function Suspend() {
        return _super.call(this) || this;
    }
    Suspend.prototype.onEnable = function () {
        this.init();
        this.bucketClink();
    };
    /**初始化必要属性*/
    Suspend.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.enemyParent = this.selfScene['MainSceneControl'].enemyParent;
    };
    /**主角的点击事件
    * 和长按出现属性展示页面
    * 滑动可以拖动主角到规定的位置
   */
    Suspend.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Suspend.prototype.down = function (event) {
        var suspend = this.selfScene['MainSceneControl'].suspend;
        if (!suspend) {
            this.selfScene['MainSceneControl'].suspend = true;
            // Laya.timer.pause();
        }
        else {
            this.selfScene['MainSceneControl'].suspend = false;
            // Laya.timer.resume();
        }
        // 打开和关闭敌人的属性
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!suspend) {
                propertyShow.alpha = 1;
            }
            else {
                propertyShow.alpha = 0;
            }
        }
        // 主角的属性
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var propertyShow = role.getChildByName('propertyShow');
            if (!suspend) {
                this.selfScene['MainSceneControl'].suspend = true;
                propertyShow.alpha = 1;
            }
            else {
                this.selfScene['MainSceneControl'].suspend = false;
                propertyShow.alpha = 0;
            }
        }
    };
    /**移动*/
    Suspend.prototype.move = function (event) {
    };
    /**抬起*/
    Suspend.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Suspend.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /**暂停状态显示所有属性框，非暂停状态不显示属性框*/
    Suspend.prototype.suspendedState = function () {
    };
    Suspend.prototype.onDisable = function () {
    };
    return Suspend;
}(Laya.Script));
exports.default = Suspend;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tools;
(function (tools) {
    /**
     *
     * @param n
     * @param m 第二个随机数不存在的话默认为10
     */
    function random(n, m) {
        m = m || 10;
        var c = m - n + 1;
        return Math.floor(Math.random() * c + n);
    }
    tools.random = random;
    /**
     *
     * @param arr
     * @param count
     * 从数组中随机取出count个数
     */
    function getRandomArrayElements(arr, count) {
        var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;
        while (i-- > min) {
            index = Math.floor((i + 1) * Math.random());
            temp = shuffled[index];
            shuffled[index] = shuffled[i];
            shuffled[i] = temp;
        }
        return shuffled.slice(min);
    }
    tools.getRandomArrayElements = getRandomArrayElements;
    function getArrayDifElements(arr, count) {
        var result = [];
        var i = 0;
        for (i; i < count; i++) {
            var temp = getDiffEle(arr.slice(), result, i);
            result.push(temp);
        }
        return result;
    }
    tools.getArrayDifElements = getArrayDifElements;
    function getDiffEle(arr, result, place) {
        var indexArr = [];
        var i = 0;
        for (i; i < arr.length - place; i++) {
            indexArr.push(i);
        }
        var ranIndex = Math.floor(Math.random() * indexArr.length);
        if (result.indexOf(arr[ranIndex]) === -1) {
            var backNum = arr[ranIndex];
            arr[ranIndex] = arr[indexArr.length - 1];
            return backNum;
        }
        else {
            arr.splice(ranIndex, 1);
            return getDiffEle(arr, result, place);
        }
    }
    tools.getDiffEle = getDiffEle;
    tools.roleDragCan = false;
    function copydata(obj) {
        var ret = {};
        Object.getOwnPropertyNames(obj).forEach(function (name) {
            ret[name] = obj[name];
        });
        return ret;
    }
    tools.copydata = copydata;
    /**
     * 数组复制
     */
    function fillArray(value, len) {
        var arr = [];
        for (var i = 0; i < len; i++) {
            arr.push(value);
        }
        return arr;
    }
    tools.fillArray = fillArray;
    /**
     *
     * @param angle 角度
     * @param XY 必须包含y上的速度
     */
    function speedByAngle(angle, XY) {
        if (angle % 90 === 0 || !angle) {
            console.error("计算的角度异常,需要查看：", angle);
            // debugger
            return;
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.y = XY.y;
        speedXY.x = speedXY.y / Math.tan(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedByAngle = speedByAngle;
    function speedXYByAngle(angle, speed) {
        if (angle % 90 === 0 || !angle) {
            //debugger
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.x = speed * Math.cos(angle * Math.PI / 180);
        speedXY.y = speed * Math.sin(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedXYByAngle = speedXYByAngle;
    function speedLabelByAngle(angle, speed, speedBate) {
        // if (angle % 90 === 0 || !angle) {
        //     debugger
        // }
        var speedXY = { x: 0, y: 0 };
        var selfAngle = angle;
        var defaultSpeed = speed;
        var bate = speedBate || 1;
        if (selfAngle % 90 === 0) {
            if (selfAngle === 0 || selfAngle === 360) {
                speedXY.x = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 90) {
                speedXY.y = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 180) {
                speedXY.x = -Math.abs(defaultSpeed) * bate;
            }
            else {
                speedXY.y = -Math.abs(defaultSpeed) * bate;
            }
        }
        else {
            var tempXY = tools.speedXYByAngle(selfAngle, defaultSpeed);
            speedXY.x = tempXY.x;
            speedXY.y = tempXY.y;
            if (selfAngle > 0 && selfAngle < 180) {
                speedXY.y = Math.abs(speedXY.y) * bate;
            }
            else {
                speedXY.y = -Math.abs(speedXY.y) * bate;
            }
            if (selfAngle > 90 && selfAngle < 270) {
                speedXY.x = -Math.abs(speedXY.x) * bate;
            }
            else {
                speedXY.x = Math.abs(speedXY.x) * bate;
            }
        }
        return speedXY;
    }
    tools.speedLabelByAngle = speedLabelByAngle;
    /**
     *
     * @param degree 角度
     * 根据角度计算弧度
     */
    function getRad(degree) {
        return degree / 180 * Math.PI;
    }
    tools.getRad = getRad;
    /**
     * 求圆上的点的坐标~
     */
    function getRoundPos(angle, radius, centPos) {
        var center = centPos; //圆心坐标
        var radius = radius; //半径
        var hudu = (2 * Math.PI / 360) * angle; //90度角的弧度
        var X = center.x + Math.sin(hudu) * radius; //求出90度角的x坐标
        var Y = center.y - Math.cos(hudu) * radius; //求出90度角的y坐标
        return { x: X, y: Y };
    }
    tools.getRoundPos = getRoundPos;
    /**
     * 转化大的数字
     */
    function converteNum(num) {
        if (typeof (num) !== "number") {
            console.warn("要转化的数字并不为number");
            return num;
        }
        var backNum;
        if (num < 1000) {
            backNum = "" + num;
        }
        else if (num < 1000000) {
            backNum = "" + (num / 1000).toFixed(1) + "k";
        }
        else if (num < 10e8) {
            backNum = "" + (num / 1000000).toFixed(1) + "m";
        }
        else {
            backNum = "" + num;
        }
        return backNum;
    }
    tools.converteNum = converteNum;
})(tools = exports.tools || (exports.tools = {}));
exports.default = tools;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6L+i9r+S7tuWuieijhS9MQVlBL3Jlc291cmNlcy9hcHAvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsInNyYy9HYW1lQ29uZmlnLnRzIiwic3JjL01haW4udHMiLCJzcmMvc2NyaXB0L0Fzc2VtYmx5LnRzIiwic3JjL3NjcmlwdC9DYW5keS50cyIsInNyYy9zY3JpcHQvQ2FuZHlfRXhwbG9kZS50cyIsInNyYy9zY3JpcHQvRW5lbXkudHMiLCJzcmMvc2NyaXB0L0VuZW15QnVsbGV0LnRzIiwic3JjL3NjcmlwdC9FeHBsb2RlLnRzIiwic3JjL3NjcmlwdC9IaW50V29yZC50cyIsInNyYy9zY3JpcHQvTWFpblNjZW5lQ29udHJvbC50cyIsInNyYy9zY3JpcHQvT3BlcmF0aW9uQ29udHJvbC50cyIsInNyYy9zY3JpcHQvUmFua2luZy50cyIsInNyYy9zY3JpcHQvUmVzdXJnZW5jZS50cyIsInNyYy9zY3JpcHQvUmV3YXJkV29yZHMudHMiLCJzcmMvc2NyaXB0L1JvbGUudHMiLCJzcmMvc2NyaXB0L1JvbGVCdWxsZXQudHMiLCJzcmMvc2NyaXB0L1NldHRsZW1lbnQudHMiLCJzcmMvc2NyaXB0L1N0YXJ0R2FtZS50cyIsInNyYy9zY3JpcHQvU3VzcGVuZC50cyIsInNyYy9zY3JpcHQvVG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNWQSxnR0FBZ0c7QUFDaEcsNENBQXNDO0FBQ3RDLDhDQUF3QztBQUN4QyxzQ0FBZ0M7QUFDaEMsOERBQXdEO0FBQ3hELDhEQUF3RDtBQUN4RCx3Q0FBa0M7QUFDbEMsd0RBQWtEO0FBQ2xELHdDQUFrQztBQUNsQyxvREFBOEM7QUFDOUMsNENBQXNDO0FBQ3RDLDhDQUF3QztBQUN4Qyw0Q0FBc0M7QUFDdEMsa0RBQTRDO0FBQzVDLG9EQUE4QztBQUM5QyxrREFBNEM7QUFDNUMsa0RBQTRD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S0FBSyxHQUFHLENBQUMsRUFBRTtZQUNwQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDckU7YUFBTTtZQUNILEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNyRTtRQUNELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUM7UUFDNUUsT0FBTztRQUNQLFFBQVE7UUFDUixJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDeEgsUUFBUTtZQUNSLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRSxPQUFPLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMs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QUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxFQUFFLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMzRCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlELEtBQUs7UUFDTCxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxtQkFBbUIsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUMzQyxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMzQyxRQUFRLE1BQU0sRUFBRTtZQUNaLEtBQUssQ0FBQztnQkFDRixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxtQkFBbUIsQ0FBQztnQkFDcEMsTUFBTTtZQUNWLEtBQUssQ0FBQztnQkFDRixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxzQkFBc0IsQ0FBQztnQkFDdkMsTUFBTTtZQUNWO2dCQUNJLE1BQU07U0FDYjtJQUNMLENBQUM7SUFFRCxhQUFhO0lBQ2Isa0NBQWdCLEdBQWhCO1FBQ0ksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUM7UUFDekIsSUFBSSxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLEVBQUUsRUFBRTtZQUNwQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDbEU7YUFBTSxJQUFJLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxJQUFJLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxFQUFFO1lBQzNDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDdEU7YUFBTSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQztZQUN4QixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsRUFBRTtnQkFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUMxQjtTQUNKO0lBQ0wsQ0FBQztJQUVELFdBQVc7SUFDWCxnQ0FBYyxHQUFkO1FBQ0ksSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQzNELElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDbEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUQsS0FBSztRQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLG1CQUFtQixDQUFDO1FBQ3BDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQzNDLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzNDLFFBQVEsTUFBTSxFQUFFO1lBQ1osS0FBSyxDQUFDO2dCQUNGLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLG1C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QUUsQ0FBQztRQUN4QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFWCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDbEcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2YsQ0FBQztJQUVELFNBQVM7SUFDVCx3QkFBTSxHQUFOO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDbkMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDbkksSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUMz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LEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFZixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDZixDQUFDO0lBRUQsV0FBVztJQUNYLDZCQUFRLEdBQVI7UUFDSSxLQUFLO1FBQ0wsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxRCxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4RCxLQUFLO1FBQ0wsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsSUFBSSxF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QUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtRQUNqRyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFWCxTQUFTO1FBQ1QsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ3JJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztZQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNuRCxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFWCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ3BJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUM1QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFWCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDckksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQzVCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVYLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDcEksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQzVCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNmLENBQUM7SUFHRCxvQkFBb0I7SUFDcEIsbUNBQWUsR0FBZjtRQUNJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FB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LENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDcEksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQzVCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVYLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ3BJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUM1QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFWCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ3JJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUM1QixDQUFDLEVBQUUsRUFB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SUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7aUJBQzdCO1lBQ0wsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2YsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2YsQ0FBQztJQUVELFNBQVM7SUFDVCw0QkFBUSxHQUFSO1FBQ0ksV0FBVztRQUNYLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtZQUNoRyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDN0IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ1gsV0FBVztRQUNYLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtZQUNsRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDdEcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENB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QUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDekQsS0FBSztRQUNMLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0QsS0FBSztRQUNMLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLGVB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QUFNLElBQUksR0FBRyxHQUFHLElBQUksRUFBRTtZQUNuQixPQUFPLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7U0FDbkQ7YUFBTTtZQUNILE9BQU8sR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFDO1NBQ3RCO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQWpCZSxpQkFBVyxjQWlCMUIsQ0FBQTtBQUVMLENBQUMsRUEvS2EsS0FBSyxHQUFMLGFBQUssS0FBTCxhQUFLLFFBK0tsQjtBQUNELGtCQUFlLEtBQUssQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuICAgIH07XHJcbn0pKCk7XHJcbihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvKipUaGlzIGNsYXNzIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IExheWFBaXJJREUsIHBsZWFzZSBkbyBub3QgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucy4gKi9cclxuaW1wb3J0IFN1c3BlbmQgZnJvbSBcIi4vc2NyaXB0L1N1c3BlbmRcIlxuaW1wb3J0IEFzc2VtYmx5IGZyb20gXCIuL3NjcmlwdC9Bc3NlbWJseVwiXG5pbXBvcnQgUm9sZSBmcm9tIFwiLi9zY3JpcHQvUm9sZVwiXG5pbXBvcnQgT3BlcmF0aW9uQ29udHJvbCBmcm9tIFwiLi9zY3JpcHQvT3BlcmF0aW9uQ29udHJvbFwiXG5pbXBvcnQgTWFpblNjZW5lQ29udHJvbCBmcm9tIFwiLi9zY3JpcHQvTWFpblNjZW5lQ29udHJvbFwiXG5pbXBvcnQgQ2FuZHkgZnJvbSBcIi4vc2NyaXB0L0NhbmR5XCJcbmltcG9ydCBDYW5keV9FeHBsb2RlIGZyb20gXCIuL3NjcmlwdC9DYW5keV9FeHBsb2RlXCJcbmltcG9ydCBFbmVteSBmcm9tIFwiLi9zY3JpcHQvRW5lbXlcIlxuaW1wb3J0IEVuZW15QnVsbGV0IGZyb20gXCIuL3NjcmlwdC9FbmVteUJ1bGxldFwiXG5pbXBvcnQgRXhwbG9kZSBmcm9tIFwiLi9zY3JpcHQvRXhwbG9kZVwiXG5pbXBvcnQgSGludFdvcmQgZnJvbSBcIi4vc2NyaXB0L0hpbnRXb3JkXCJcbmltcG9ydCBSYW5raW5nIGZyb20gXCIuL3NjcmlwdC9SYW5raW5nXCJcbmltcG9ydCBSZXN1cmdlbmNlIGZyb20gXCIuL3NjcmlwdC9SZXN1cmdlbmNlXCJcbmltcG9ydCBSZXdhcmRXb3JkcyBmcm9tIFwiLi9zY3JpcHQvUmV3YXJkV29yZHNcIlxuaW1wb3J0IFJvbGVCdWxsZXQgZnJvbSBcIi4vc2NyaXB0L1JvbGVCdWxsZXRcIlxuaW1wb3J0IFNldHRsZW1lbnQgZnJvbSBcIi4vc2NyaXB0L1NldHRsZW1lbnRcIlxuaW1wb3J0IFN0YXJ0R2FtZSBmcm9tIFwiLi9zY3JpcHQvU3RhcnRHYW1lXCJcclxuLypcclxuKiDmuLjmiI/liJ3lp4vljJbphY3nva47XHJcbiovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVDb25maWd7XHJcbiAgICBzdGF0aWMgd2lkdGg6bnVtYmVyPTc1MDtcclxuICAgIHN0YXRpYyBoZWlnaHQ6bnVtYmVyPTEzMzQ7XHJcbiAgICBzdGF0aWMgc2NhbGVNb2RlOnN0cmluZz1cImZpeGVkd2lkdGhcIjtcclxuICAgIHN0YXRpYyBzY3JlZW5Nb2RlOnN0cmluZz1cInZlcnRpY2FsXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25WOnN0cmluZz1cInRvcFwiO1xyXG4gICAgc3RhdGljIGFsaWduSDpzdHJpbmc9XCJjZW50ZXJcIjtcclxuICAgIHN0YXRpYyBzdGFydFNjZW5lOmFueT1cInNjZW5lL01haW5TY2VuZS5zY2VuZVwiO1xyXG4gICAgc3RhdGljIHNjZW5lUm9vdDpzdHJpbmc9XCJcIjtcclxuICAgIHN0YXRpYyBkZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHN0YXQ6Ym9vbGVhbj10cnVlO1xyXG4gICAgc3RhdGljIHBoeXNpY3NEZWJ1Zzpib29sZWFuPXRydWU7XHJcbiAgICBzdGF0aWMgZXhwb3J0U2NlbmVUb0pzb246Ym9vbGVhbj10cnVlO1xyXG4gICAgY29uc3RydWN0b3IoKXt9XHJcbiAgICBzdGF0aWMgaW5pdCgpe1xyXG4gICAgICAgIHZhciByZWc6IEZ1bmN0aW9uID0gTGF5YS5DbGFzc1V0aWxzLnJlZ0NsYXNzO1xyXG4gICAgICAgIHJlZyhcInNjcmlwdC9TdXNwZW5kLnRzXCIsU3VzcGVuZCk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9Bc3NlbWJseS50c1wiLEFzc2VtYmx5KTtcbiAgICAgICAgcmVnKFwic2NyaXB0L1JvbGUudHNcIixSb2xlKTtcbiAgICAgICAgcmVnKFwic2NyaXB0L09wZXJhdGlvbkNvbnRyb2wudHNcIixPcGVyYXRpb25Db250cm9sKTtcbiAgICAgICAgcmVnKFwic2NyaXB0L01haW5TY2VuZUNvbnRyb2wudHNcIixNYWluU2NlbmVDb250cm9sKTtcbiAgICAgICAgcmVnKFwic2NyaXB0L0NhbmR5LnRzXCIsQ2FuZHkpO1xuICAgICAgICByZWcoXCJzY3JpcHQvQ2FuZHlfRXhwbG9kZS50c1wiLENhbmR5X0V4cGxvZGUpO1xuICAgICAgICByZWcoXCJzY3JpcHQvRW5lbXkudHNcIixFbmVteSk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9FbmVteUJ1bGxldC50c1wiLEVuZW15QnVsbGV0KTtcbiAgICAgICAgcmVnKFwic2NyaXB0L0V4cGxvZGUudHNcIixFeHBsb2RlKTtcbiAgICAgICAgcmVnKFwic2NyaXB0L0hpbnRXb3JkLnRzXCIsSGludFdvcmQpO1xuICAgICAgICByZWcoXCJzY3JpcHQvUmFua2luZy50c1wiLFJhbmtpbmcpO1xuICAgICAgICByZWcoXCJzY3JpcHQvUmVzdXJnZW5jZS50c1wiLFJlc3VyZ2VuY2UpO1xuICAgICAgICByZWcoXCJzY3JpcHQvUmV3YXJkV29yZHMudHNcIixSZXdhcmRXb3Jkcyk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9Sb2xlQnVsbGV0LnRzXCIsUm9sZUJ1bGxldCk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9TZXR0bGVtZW50LnRzXCIsU2V0dGxlbWVudCk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9TdGFydEdhbWUudHNcIixTdGFydEdhbWUpO1xyXG4gICAgfVxyXG59XHJcbkdhbWVDb25maWcuaW5pdCgpOyIsImltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuL0dhbWVDb25maWdcIjtcclxuY2xhc3MgTWFpbiB7XHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHQvL+agueaNrklEReiuvue9ruWIneWni+WMluW8leaTjlx0XHRcclxuXHRcdGlmICh3aW5kb3dbXCJMYXlhM0RcIl0pIExheWEzRC5pbml0KEdhbWVDb25maWcud2lkdGgsIEdhbWVDb25maWcuaGVpZ2h0KTtcclxuXHRcdGVsc2UgTGF5YS5pbml0KEdhbWVDb25maWcud2lkdGgsIEdhbWVDb25maWcuaGVpZ2h0LCBMYXlhW1wiV2ViR0xcIl0pO1xyXG5cdFx0TGF5YVtcIlBoeXNpY3NcIl0gJiYgTGF5YVtcIlBoeXNpY3NcIl0uZW5hYmxlKCk7XHJcblx0XHRMYXlhW1wiRGVidWdQYW5lbFwiXSAmJiBMYXlhW1wiRGVidWdQYW5lbFwiXS5lbmFibGUoKTtcclxuXHRcdExheWEuc3RhZ2Uuc2NhbGVNb2RlID0gR2FtZUNvbmZpZy5zY2FsZU1vZGU7XHJcblx0XHRMYXlhLnN0YWdlLnNjcmVlbk1vZGUgPSBHYW1lQ29uZmlnLnNjcmVlbk1vZGU7XHJcblx0XHQvL+WFvOWuueW+ruS/oeS4jeaUr+aMgeWKoOi9vXNjZW5l5ZCO57yA5Zy65pmvXHJcblx0XHRMYXlhLlVSTC5leHBvcnRTY2VuZVRvSnNvbiA9IEdhbWVDb25maWcuZXhwb3J0U2NlbmVUb0pzb247XHJcblxyXG5cdFx0Ly/miZPlvIDosIPor5XpnaLmnb/vvIjpgJrov4dJREXorr7nva7osIPor5XmqKHlvI/vvIzmiJbogIV1cmzlnLDlnYDlop7liqBkZWJ1Zz10cnVl5Y+C5pWw77yM5Z2H5Y+v5omT5byA6LCD6K+V6Z2i5p2/77yJXHJcblx0XHRpZiAoR2FtZUNvbmZpZy5kZWJ1ZyB8fCBMYXlhLlV0aWxzLmdldFF1ZXJ5U3RyaW5nKFwiZGVidWdcIikgPT0gXCJ0cnVlXCIpIExheWEuZW5hYmxlRGVidWdQYW5lbCgpO1xyXG5cdFx0aWYgKEdhbWVDb25maWcucGh5c2ljc0RlYnVnICYmIExheWFbXCJQaHlzaWNzRGVidWdEcmF3XCJdKSBMYXlhW1wiUGh5c2ljc0RlYnVnRHJhd1wiXS5lbmFibGUoKTtcclxuXHRcdGlmIChHYW1lQ29uZmlnLnN0YXQpIExheWEuU3RhdC5zaG93KCk7XHJcblx0XHRMYXlhLmFsZXJ0R2xvYmFsRXJyb3IgPSB0cnVlO1xyXG5cclxuXHRcdC8v5r+A5rS76LWE5rqQ54mI5pys5o6n5Yi277yMdmVyc2lvbi5qc29u55SxSURF5Y+R5biD5Yqf6IO96Ieq5Yqo55Sf5oiQ77yM5aaC5p6c5rKh5pyJ5Lmf5LiN5b2x5ZON5ZCO57ut5rWB56iLXHJcblx0XHRMYXlhLlJlc291cmNlVmVyc2lvbi5lbmFibGUoXCJ2ZXJzaW9uLmpzb25cIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uVmVyc2lvbkxvYWRlZCksIExheWEuUmVzb3VyY2VWZXJzaW9uLkZJTEVOQU1FX1ZFUlNJT04pO1xyXG5cdH1cclxuXHJcblx0b25WZXJzaW9uTG9hZGVkKCk6IHZvaWQge1xyXG5cdFx0Ly/mv4DmtLvlpKflsI/lm77mmKDlsITvvIzliqDovb3lsI/lm77nmoTml7blgJnvvIzlpoLmnpzlj5HnjrDlsI/lm77lnKjlpKflm77lkIjpm4bph4zpnaLvvIzliJnkvJjlhYjliqDovb3lpKflm77lkIjpm4bvvIzogIzkuI3mmK/lsI/lm75cclxuXHRcdExheWEuQXRsYXNJbmZvTWFuYWdlci5lbmFibGUoXCJmaWxlY29uZmlnLmpzb25cIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uQ29uZmlnTG9hZGVkKSk7XHJcblx0fVxyXG5cclxuXHRvbkNvbmZpZ0xvYWRlZCgpOiB2b2lkIHtcclxuXHRcdC8v5Yqg6L29SURF5oyH5a6a55qE5Zy65pmvXHJcblx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSk7XHJcblx0fVxyXG59XHJcbi8v5r+A5rS75ZCv5Yqo57G7XHJcbm5ldyBNYWluKCk7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFzc2VtYmx5IGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOm1hY2hpbmUsIHRpcHM657OW5p6c5Yi26YCg5py65ZmoLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBtYWNoaW5lOiBMYXlhLlNwcml0ZTtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6TG9uZ1BvaW50ZXIsIHRpcHM66ZW/5oyH6ZKILCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBMb25nUG9pbnRlcjogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmVuZXJneUxhbXBfMDEsIHRpcHM66IO96YeP54GvMSwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgZW5lcmd5TGFtcF8wMTogTGF5YS5TcHJpdGU7XHJcbiAgICBwcml2YXRlIGxhbXBfMDE6IExheWEuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBsYW1wXzAyOiBMYXlhLlNwcml0ZTtcclxuICAgIHByaXZhdGUgbGFtcF8wMzogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmVuZXJneUxhbXBfMDIsIHRpcHM66IO96YeP54GvMiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgZW5lcmd5TGFtcF8wMjogTGF5YS5TcHJpdGU7XHJcbiAgICBwcml2YXRlIGxhbXBfMDQ6IExheWEuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBsYW1wXzA1OiBMYXlhLlNwcml0ZTtcclxuICAgIHByaXZhdGUgbGFtcF8wNjogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoq5oyH56S654Gv5Yqo55S75byA5YWzKi9cclxuICAgIHByaXZhdGUgTGFtcFN3aXRjaDogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgbGFtcFRpbWU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgbGFtcEludGVydmFsOiBudW1iZXI7XHJcblxyXG4gICAgLyoq6Ieq5bexKi9cclxuICAgIHByaXZhdGUgc2VsZjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirng5/lm7Hng5/pm77nibnmlYjlvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBzbW9rZVN3aXRjaDogYm9vbGVhbjtcclxuICAgIC8qKueDn+WbseeDn+mbvueJueaViOS6p+eUn+eahOaXtumXtOmXtOmalCovXHJcbiAgICBwcml2YXRlIHNtb2tlSW50ZXJ2YWw6IG51bWJlcjtcclxuICAgIC8qKueDn+WbseeDn+mbvueJueaViOW9k+WJjeS6p+eUn+aXtumXtOiusOW9lSovXHJcbiAgICBwcml2YXRlIHNtb2tlVGltZTogbnVtYmVyO1xyXG5cclxuICAgIC8qKuS9jeenu+aKluWKqOmikeeOh++8jOacuuWZqOS8muaMieS4gOWumueahOaXtumXtOaKluWKqO+8jOi/meS4quaXtumXtOmXtOmalOWPr+iDveaYr+maj+acuueahCovXHJcbiAgICBwcml2YXRlIE1zaGFrZUludGVydmFsOiBudW1iZXI7XHJcbiAgICAvKirkvY3np7vmipbliqjkuovku7borrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBNc2hha2VUaW1lOiBudW1iZXI7XHJcbiAgICAvKirkvY3np7vmipbliqjlvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBNc2hha2VTd2l0Y2g6IGJvb2xlYW47XHJcbiAgICAvKirkvY3np7vmipbliqjlvLrluqbmjqfliLYqL1xyXG4gICAgcHJpdmF0ZSBNc2hha2VzVHJlOiBudW1iZXI7XHJcbiAgICAvKirkvY3np7vmipbliqjmlrnlkJHorrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBNRGlyZWN0aW9uOiBzdHJpbmc7XHJcblxyXG4gICAgLyoq6KeS5bqm5oqW5Yqo6aKR546H77yM5py65Zmo5Lya5oyJ5LiA5a6a55qE5pe26Ze05oqW5Yqo77yM6L+Z5Liq5pe26Ze06Ze06ZqU5Y+v6IO95piv6ZqP5py655qEKi9cclxuICAgIHByaXZhdGUgUnNoYWtlSW50ZXJ2YWw6IG51bWJlcjtcclxuICAgIC8qKuinkuW6puaKluWKqOS6i+S7tuiusOW9lSovXHJcbiAgICBwcml2YXRlIFJzaGFrZVRpbWU6IG51bWJlcjtcclxuICAgIC8qKuinkuW6puaKluWKqOW8gOWFsyovXHJcbiAgICBwcml2YXRlIFJzaGFrZVN3aXRjaDogYm9vbGVhbjtcclxuICAgIC8qKuinkuW6puaKluWKqOW8uuW6puaOp+WItiovXHJcbiAgICBwcml2YXRlIFJzaGFrZXNUcmU6IG51bWJlcjtcclxuICAgIC8qKuinkuW6puaKluWKqOaWueWQkeiusOW9lSovXHJcbiAgICBwcml2YXRlIFJEaXJlY3Rpb246IHN0cmluZztcclxuXHJcbiAgICAvKipNYWNoaW5l5Yid5aeL5L2N572uKi9cclxuICAgIHByaXZhdGUgaW5pdGlhbFBYX01hY2hpbmU6IG51bWJlcjtcclxuXHJcbiAgICBwcml2YXRlIHRpbWVyOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKui/m+W6puadoSovXHJcbiAgICBwcml2YXRlIHRpbWVTY2hlZHVsZTogTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgIC8qKuaXtumXtOaKluWKqOasoeaVsCovXHJcbiAgICBwcml2YXRlIHRpbWVyU2hha2VOdW06IG51bWJlcjtcclxuICAgIC8qKueuoemBkzHnmoTpqqjpqrzliqjnlLsqL1xyXG4gICAgcHJpdmF0ZSBwaXBlU2tfMDE6IExheWEuU2tlbGV0b247XHJcbiAgICBwcml2YXRlIHBpcGVTa18wMVRlbTogTGF5YS5UZW1wbGV0O1xyXG4gICAgLyoq566h6YGTMueahOmqqOmqvOWKqOeUuyovXHJcbiAgICBwcml2YXRlIHBpcGVTa18wMjogTGF5YS5Ta2VsZXRvbjtcclxuICAgIHByaXZhdGUgcGlwZVNrXzAyVGVtOiBMYXlhLlRlbXBsZXQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmluaXRQcm9wZXJ0eSgpO1xyXG4gICAgfVxyXG4gICAgLyoq5Yid5aeL5YyW5bGe5oCnKi9cclxuICAgIGluaXRQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lID0gdGhpcy5zZWxmLnNjZW5lO1xyXG4gICAgICAgIHRoaXMuc21va2VTd2l0Y2ggPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc21va2VUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICB0aGlzLnNtb2tlSW50ZXJ2YWwgPSA1MDA7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsUFhfTWFjaGluZSA9IHRoaXMubWFjaGluZS54O1xyXG5cclxuICAgICAgICAvLyDmjIfnpLrnga8x55qE5Yqo55S76K6+572uXHJcbiAgICAgICAgdGhpcy5sYW1wXzAxID0gdGhpcy5lbmVyZ3lMYW1wXzAxLmdldENoaWxkQnlOYW1lKCdsYW1wXzAxJykgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5sYW1wXzAyID0gdGhpcy5lbmVyZ3lMYW1wXzAxLmdldENoaWxkQnlOYW1lKCdsYW1wXzAyJykgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5sYW1wXzAzID0gdGhpcy5lbmVyZ3lMYW1wXzAxLmdldENoaWxkQnlOYW1lKCdsYW1wXzAzJykgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5sYW1wXzAxLmFscGhhID0gMC4zO1xyXG4gICAgICAgIHRoaXMubGFtcF8wMi5hbHBoYSA9IDAuMztcclxuICAgICAgICB0aGlzLmxhbXBfMDMuYWxwaGEgPSAwLjM7XHJcbiAgICAgICAgLy8g5oyH56S654GvMueahOWKqOeUu+iuvue9rlxyXG4gICAgICAgIHRoaXMubGFtcF8wNCA9IHRoaXMuZW5lcmd5TGFtcF8wMi5nZXRDaGlsZEJ5TmFtZSgnbGFtcF8wNCcpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMubGFtcF8wNSA9IHRoaXMuZW5lcmd5TGFtcF8wMi5nZXRDaGlsZEJ5TmFtZSgnbGFtcF8wNScpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMubGFtcF8wNiA9IHRoaXMuZW5lcmd5TGFtcF8wMi5nZXRDaGlsZEJ5TmFtZSgnbGFtcF8wNicpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMubGFtcF8wNC5hbHBoYSA9IDAuMztcclxuICAgICAgICB0aGlzLmxhbXBfMDUuYWxwaGEgPSAwLjM7XHJcbiAgICAgICAgdGhpcy5sYW1wXzA2LmFscGhhID0gMC4zO1xyXG5cclxuICAgICAgICB0aGlzLkxhbXBTd2l0Y2ggPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubGFtcFRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIHRoaXMubGFtcEludGVydmFsID0gMTYwMDtcclxuXHJcbiAgICAgICAgLy8g5L2N56e75oqW5Yqo5Y+C5pWwXHJcbiAgICAgICAgdGhpcy5NRGlyZWN0aW9uID0gTWF0aC5yYW5kb20oKSAqIDIgPT09IDEgPyAnbGVmdCcgOiAncmlnaHQnO1xyXG4gICAgICAgIHRoaXMuTXNoYWtlSW50ZXJ2YWwgPSAzMDtcclxuICAgICAgICB0aGlzLk1zaGFrZVRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIHRoaXMuTXNoYWtlc1RyZSA9IDE7XHJcbiAgICAgICAgdGhpcy5Nc2hha2VTd2l0Y2ggPSB0cnVlO1xyXG5cclxuICAgICAgICAvLyDop5Lluqbmipbliqjlj4LmlbBcclxuICAgICAgICB0aGlzLlJzaGFrZUludGVydmFsID0gMzA7XHJcbiAgICAgICAgdGhpcy5Sc2hha2VUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICB0aGlzLlJzaGFrZXNUcmUgPSAyO1xyXG4gICAgICAgIHRoaXMuUkRpcmVjdGlvbiA9IE1hdGgucmFuZG9tKCkgKiAyID09PSAxID8gJ2xlZnQnIDogJ3JpZ2h0JztcclxuICAgICAgICB0aGlzLlJzaGFrZVN3aXRjaCA9IHRydWU7XHJcblxyXG4gICAgICAgIHRoaXMudGltZXIgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKCd0aW1lcicpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMudGltZVNjaGVkdWxlID0gdGhpcy50aW1lci5nZXRDaGlsZEJ5TmFtZSgndGltZVNjaGVkdWxlJykgYXMgTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgICAgICB0aGlzLnRpbWVyU2hha2VOdW0gPSAwO1xyXG5cclxuICAgICAgICB0aGlzLnBpcGVTa18wMSA9IHRoaXMubWFjaGluZS5nZXRDaGlsZEJ5TmFtZSgncGlwZWxpbmVfMDEnKSBhcyBMYXlhLlNrZWxldG9uO1xyXG4gICAgICAgIHRoaXMucGlwZVNrXzAyID0gdGhpcy5tYWNoaW5lLmdldENoaWxkQnlOYW1lKCdwaXBlbGluZV8wMicpIGFzIExheWEuU2tlbGV0b247XHJcbiAgICAgICAgdGhpcy5jcmVhdGVQaXBlU2tfMDEoKTtcclxuICAgICAgICB0aGlzLmNyZWF0ZVBpcGVTa18wMigpO1xyXG4gICAgICAgIHRoaXMubGFtcEFuaV8wMSgpO1xyXG4gICAgICAgIHRoaXMubGFtcEFuaV8wMigpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuW8gOWni+acuuWZqOi/kOWKqCovXHJcbiAgICBhc3NlbWJseVN0YXJ0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucGlwZVNrXzAxLnBsYXkoJ2Zsb3cnLCB0cnVlKTtcclxuICAgICAgICB0aGlzLnBpcGVTa18wMi5wbGF5KCdmbG93JywgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yib5bu66aqo6aq85Yqo55S755qu6IKkKi9cclxuICAgIGNyZWF0ZVBpcGVTa18wMSgpOiB2b2lkIHtcclxuICAgICAgICAvL+WIm+W7uuWKqOeUu+aooeadv1xyXG4gICAgICAgIHRoaXMucGlwZVNrXzAxVGVtID0gbmV3IExheWEuVGVtcGxldCgpO1xyXG4gICAgICAgIHRoaXMucGlwZVNrXzAxVGVtLm9uKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIHRoaXMucGFyc2VDb21wbGV0ZV8wMSk7XHJcbiAgICAgICAgdGhpcy5waXBlU2tfMDFUZW0ub24oTGF5YS5FdmVudC5FUlJPUiwgdGhpcywgdGhpcy5vbkVycm9yKTtcclxuICAgICAgICB0aGlzLnBpcGVTa18wMVRlbS5sb2FkQW5pKFwiY2FuZHkv57OW5p6c5py65ZmoL3BpcGVsaW5lXzAxLnNrXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRXJyb3IoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+mqqOmqvOWKqOeUu+WKoOi9vemUmeivrycpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhcnNlQ29tcGxldGVfMDEoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5rC0566h5Yqo55S7XHJcbiAgICAgICAgdGhpcy5waXBlU2tfMDEucGxheSgnc3RhdGljJywgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yib5bu66aqo6aq85Yqo55S755qu6IKkKi9cclxuICAgIGNyZWF0ZVBpcGVTa18wMigpOiB2b2lkIHtcclxuICAgICAgICAvL+WIm+W7uuWKqOeUu+aooeadv1xyXG4gICAgICAgIHRoaXMucGlwZVNrXzAyVGVtID0gbmV3IExheWEuVGVtcGxldCgpO1xyXG4gICAgICAgIHRoaXMucGlwZVNrXzAyVGVtLm9uKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIHRoaXMucGFyc2VDb21wbGV0ZV8wMik7XHJcbiAgICAgICAgdGhpcy5waXBlU2tfMDJUZW0ub24oTGF5YS5FdmVudC5FUlJPUiwgdGhpcywgdGhpcy5vbkVycm9yKTtcclxuICAgICAgICB0aGlzLnBpcGVTa18wMlRlbS5sb2FkQW5pKFwiY2FuZHkv57OW5p6c5py65ZmoL3BpcGVsaW5lXzAxLnNrXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhcnNlQ29tcGxldGVfMDIoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5rC0566h5Yqo55S7XHJcbiAgICAgICAgdGhpcy5waXBlU2tfMDIucGxheSgnc3RhdGljJywgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6IO96YeP54Gv5Yqo55S7Ki9cclxuICAgIGxhbXBBbmlfMDEoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmxhbXBfMDEsIHsgYWxwaGE6IDEgfSwgNTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubGFtcF8wMSwgeyBhbHBoYTogMC4zIH0sIDUwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5sYW1wXzAyLCB7IGFscGhhOiAxIH0sIDUwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5sYW1wXzAyLCB7IGFscGhhOiAwLjMgfSwgNTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubGFtcF8wMywgeyBhbHBoYTogMSB9LCA1MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmxhbXBfMDMsIHsgYWxwaGE6IDAuMyB9LCA1MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcblxyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6IO96YeP54Gv5Yqo55S7Ki9cclxuICAgIGxhbXBBbmlfMDIoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmxhbXBfMDQsIHsgYWxwaGE6IDEgfSwgNTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubGFtcF8wNCwgeyBhbHBoYTogMC4zIH0sIDUwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5sYW1wXzA1LCB7IGFscGhhOiAxIH0sIDUwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5sYW1wXzA1LCB7IGFscGhhOiAwLjMgfSwgNTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubGFtcF8wNiwgeyBhbHBoYTogMSB9LCA1MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmxhbXBfMDYsIHsgYWxwaGE6IDAuMyB9LCA1MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcblxyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5L2N56e75oqW5YqoXHJcbiAgICAqIEBwYXJhbSB0YXJnZXQg55uu5qCHXHJcbiAgICAqL1xyXG4gICAgbW92ZVNoYWtlKHRhcmdldCkge1xyXG4gICAgICAgIGlmICh0aGlzLk1zaGFrZVN3aXRjaCkge1xyXG4gICAgICAgICAgICBsZXQgbm93VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGlmIChub3dUaW1lIC0gdGhpcy5Nc2hha2VUaW1lID4gdGhpcy5Nc2hha2VJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Nc2hha2VUaW1lID0gbm93VGltZTtcclxuICAgICAgICAgICAgICAgIC8vIOWIpOaWreebruagh+aYr+S7gOS5iCznhLblkI7lr7nmr5Tku5bljp/mnaXnmoTkvY3nva5cclxuICAgICAgICAgICAgICAgIGxldCBpbml0aWFsUFg7Ly90YXJnZXTliJ3lp4vkvY3nva5cclxuICAgICAgICAgICAgICAgIGlmICh0YXJnZXQgPT09IHRoaXMubWFjaGluZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxQWCA9IHRoaXMuaW5pdGlhbFBYX01hY2hpbmU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBsZXQgc2hha2VYID0gdGhpcy5Nc2hha2VzVHJlOy8v5by65bqmXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5NRGlyZWN0aW9uID09PSBcImxlZnRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC54IC09IHRoaXMuTXNoYWtlc1RyZTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5tYWNoaW5lLnggPCBpbml0aWFsUFgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5NRGlyZWN0aW9uID0gXCJyaWdodFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5NRGlyZWN0aW9uID09PSBcInJpZ2h0XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQueCArPSB0aGlzLk1zaGFrZXNUcmU7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubWFjaGluZS54ID4gaW5pdGlhbFBYKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuTURpcmVjdGlvbiA9IFwibGVmdFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirml7bpl7TmipbliqjmipbliqhcclxuICAgICAqIOagueaNrui/m+W6puadoeeahOaXtumXtOadpee7meS4jeWQjOeahOaKluWKqOmikeeOh+WSjOaKluWKqOmAn+W6plxyXG4gICAgKi9cclxuICAgIHRpbWVyU2hha2UoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZVNjaGVkdWxlLnZhbHVlID4gMCAmJiB0aGlzLnRpbWVTY2hlZHVsZS52YWx1ZSA8PSAwLjE1KSB7XHJcbiAgICAgICAgICAgIHRoaXMuUnNoYWtlSW50ZXJ2YWwgPSA0MDtcclxuICAgICAgICAgICAgdGhpcy5Sc2hha2VzVHJlID0gMjtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGltZVNjaGVkdWxlLnZhbHVlID4gMC4xNSAmJiB0aGlzLnRpbWVTY2hlZHVsZS52YWx1ZSA8PSAwLjQpIHtcclxuICAgICAgICAgICAgdGhpcy5Sc2hha2VJbnRlcnZhbCA9IDUwO1xyXG4gICAgICAgICAgICB0aGlzLlJzaGFrZXNUcmUgPSAxLjU7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVTY2hlZHVsZS52YWx1ZSA+IDAuNCAmJiB0aGlzLnRpbWVTY2hlZHVsZS52YWx1ZSA8PSAwLjcpIHtcclxuICAgICAgICAgICAgdGhpcy5Sc2hha2VJbnRlcnZhbCA9IDYwO1xyXG4gICAgICAgICAgICB0aGlzLlJzaGFrZXNUcmUgPSAxO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPiAwLjcgJiYgdGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPD0gMSkge1xyXG4gICAgICAgICAgICB0aGlzLlJzaGFrZUludGVydmFsID0gNzA7XHJcbiAgICAgICAgICAgIHRoaXMuUnNoYWtlc1RyZSA9IDAuNTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLlJzaGFrZUludGVydmFsID0gNzA7XHJcbiAgICAgICAgICAgIHRoaXMuUnNoYWtlc1RyZSA9IDAuNTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLlJzaGFrZVN3aXRjaCkge1xyXG4gICAgICAgICAgICBsZXQgbm93VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGlmIChub3dUaW1lIC0gdGhpcy5Sc2hha2VUaW1lID4gdGhpcy5Sc2hha2VJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Sc2hha2VUaW1lID0gbm93VGltZTtcclxuICAgICAgICAgICAgICAgIC8vIOebruagh+WIpOaWrVxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuUkRpcmVjdGlvbiA9PT0gXCJsZWZ0XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWVyLnJvdGF0aW9uID0gLXRoaXMuUnNoYWtlc1RyZTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy50aW1lci5yb3RhdGlvbiA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5SRGlyZWN0aW9uID0gXCJyaWdodFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5SRGlyZWN0aW9uID09PSBcInJpZ2h0XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWVyLnJvdGF0aW9uID0gdGhpcy5Sc2hha2VzVHJlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnRpbWVyLnJvdGF0aW9uID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlJEaXJlY3Rpb24gPSBcImxlZnRcIjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZ2FtZU92ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8g54Of5Zux54Of6Zu+54m55pWIXHJcbiAgICAgICAgaWYgKHRoaXMuc21va2VTd2l0Y2gpIHtcclxuICAgICAgICAgICAgMVxyXG4gICAgICAgICAgICBsZXQgbm93VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGlmIChub3dUaW1lIC0gdGhpcy5zbW9rZVRpbWUgPiB0aGlzLnNtb2tlSW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgICAgIC8vIOmHjee9ruaXtumXtFxyXG4gICAgICAgICAgICAgICAgdGhpcy5zbW9rZVRpbWUgPSBub3dUaW1lO1xyXG4gICAgICAgICAgICAgICAgLy8g6ZqP5py65pe26Ze06Ze06ZqUXHJcbiAgICAgICAgICAgICAgICBsZXQgcmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzAwKSArIDEwMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc21va2VJbnRlcnZhbCA9IDYwMCAtIHJhbmRvbTtcclxuICAgICAgICAgICAgICAgIC8vIOmaj+acuuS9jee9rlxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5leHBsb2RlQW5pKHRoaXMubWFjaGluZSwgNjUwLCAxOTAsICdzbW9rZUVmZmVjdHMnLCAxLCAxMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOaMh+mSiOWKqOS9nFxyXG4gICAgICAgIHRoaXMuTG9uZ1BvaW50ZXIucm90YXRpb24gKz0gMTA7XHJcbiAgICAgICAgdGhpcy5tb3ZlU2hha2UodGhpcy5tYWNoaW5lKTtcclxuXHJcbiAgICAgICAgLy/ov5vluqbmnaHmipbliqhcclxuICAgICAgICB0aGlzLnRpbWVyU2hha2UoKTtcclxuXHJcbiAgICAgICAgLy8g5oyH56S654Gv5Yqo55S7XHJcbiAgICAgICAgaWYgKHRoaXMuTGFtcFN3aXRjaCkge1xyXG4gICAgICAgICAgICBsZXQgdGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGlmICh0aW1lIC0gdGhpcy5sYW1wVGltZSA+IHRoaXMubGFtcEludGVydmFsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxhbXBUaW1lID0gdGltZTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGFtcEFuaV8wMSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sYW1wQW5pXzAyKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vTWFpblNjZW5lQ29udHJvbFwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW5keSBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq5Zy65pmv6ISa5pys57uE5Lu2Ki9cclxuICAgIHByaXZhdGUgbWFpblNjZW5lQ29udHJvbDtcclxuICAgIC8qKuezluaenOi/kOihjOeahOmAn+W6piovXHJcbiAgICBwcml2YXRlIHNlbGZTcGVlZDogbnVtYmVyO1xyXG4gICAgLyoq57OW5p6c56e75Yqo5a+56LGhKi9cclxuICAgIHByaXZhdGUgY2FuZHlUYWdSb2xlOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuS4u+inkueahOeItuiKgueCuSovXHJcbiAgICBwcml2YXRlIHJvbGVQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5b6X5YiG5pi+56S6Ki9cclxuICAgIHByaXZhdGUgc2NvcmVMYWJlbDogTGF5YS5Gb250Q2xpcDtcclxuICAgIC8qKuaXtumXtOe6vyovXHJcbiAgICBwcml2YXRlIHRpbWVyQ29udHJvbDogbnVtYmVyO1xyXG4gICAgLyoq5q+P5Liq57OW5p6c5LmL6Ze055qE6Ze06LedKi9cclxuICAgIHByaXZhdGUgc3BhY2VZOiBudW1iZXI7XHJcblxyXG4gICAgLyoq5Yid5aeL5YyW55qEMTDkuKrns5bmnpznmoTkvY3nva7orrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBwb3NZQXJyOiBBcnJheTxudW1iZXI+O1xyXG4gICAgLyoq5bGe5oCn6aOY5a2X5o+Q56S6Ki9cclxuICAgIHByaXZhdGUgaGludFdvcmQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKue7hOaVsO+8jOS7luaYr+WxnuS6juWTquS4gOe7hOeahCovXHJcbiAgICBwcml2YXRlIGdyb3VwOiBudW1iZXI7XHJcbiAgICAvKirmmK/lkKblt7Lnu4/ooqvngrnlh7vkuoYqL1xyXG4gICAgcHJpdmF0ZSBzZWxlY3RlZDogYm9vbGVhbjtcclxuXHJcbiAgICAvKirpqqjpqrzliqjnlLvmqKHmnb8qL1xyXG4gICAgcHJpdmF0ZSB0ZW1wbGV0OiBMYXlhLlRlbXBsZXQ7XHJcbiAgICAvKirpqqjpqrzliqjnlLsqL1xyXG4gICAgcHJpdmF0ZSBza2VsZXRvbjogTGF5YS5Ta2VsZXRvbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0UHJvcGVydHkoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliJ3lp4vljJYqL1xyXG4gICAgaW5pdFByb3BlcnR5KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmUgYXMgTGF5YS5TY2VuZTtcclxuICAgICAgICB0aGlzLmNhbmR5VGFnUm9sZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sID0gdGhpcy5zZWxmU2NlbmUuZ2V0Q29tcG9uZW50KE1haW5TY2VuZUNvbnRyb2wpO1xyXG4gICAgICAgIHRoaXMucm9sZVBhcmVudCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlUGFyZW50O1xyXG4gICAgICAgIHRoaXMuc2NvcmVMYWJlbCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5zY29yZUxhYmVsO1xyXG4gICAgICAgIHRoaXMuc2VsZlNwZWVkID0gMTA7XHJcbiAgICAgICAgdGhpcy50aW1lckNvbnRyb2wgPSAwO1xyXG4gICAgICAgIHRoaXMuc3BhY2VZID0gNTtcclxuXHJcbiAgICAgICAgdGhpcy5oaW50V29yZCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5oaW50V29yZDtcclxuXHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZ3JvdXAgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLnNrZWxldG9uID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdza2VsZXRvbicpIGFzIExheWEuU2tlbGV0b247XHJcblxyXG4gICAgICAgIHRoaXMuc2VsZlsnQ2FuZHknXSA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVCb25lQW5pKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yib5bu66aqo6aq85Yqo55S755qu6IKkKi9cclxuICAgIGNyZWF0ZUJvbmVBbmkoKTogdm9pZCB7XHJcbiAgICAgICAgLy/liJvlu7rliqjnlLvmqKHmnb9cclxuICAgICAgICB0aGlzLnRlbXBsZXQgPSBuZXcgTGF5YS5UZW1wbGV0KCk7XHJcbiAgICAgICAgdGhpcy50ZW1wbGV0Lm9uKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIHRoaXMucGFyc2VDb21wbGV0ZSk7XHJcbiAgICAgICAgdGhpcy50ZW1wbGV0Lm9uKExheWEuRXZlbnQuRVJST1IsIHRoaXMsIHRoaXMub25FcnJvcik7XHJcbiAgICAgICAgdGhpcy50ZW1wbGV0LmxvYWRBbmkoXCJjYW5keS/ns5bmnpwvY2FuZHlDb21waWxhdGlvbnMuc2tcIik7XHJcbiAgICB9XHJcblxyXG4gICAgb25FcnJvcigpOiB2b2lkIHtcclxuICAgICAgICBjb25zb2xlLmxvZygn6aqo6aq85Yqo55S75Yqg6L296ZSZ6K+v77yBJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcGFyc2VDb21wbGV0ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDmkq3mlL7mlYzkurrliqjnlLtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMuc2VsZi5uYW1lLnN1YnN0cmluZygwLCAxMSkpIHtcclxuICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5KCd5ZWxsb3dfc3RhdGljJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAncmVkQ2FuZHlfX18nOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5KCdyZWRfc3RhdGljJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnYmx1ZUNhbmR5X18nOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5KCdibHVlX3N0YXRpYycsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2dyZWVuQ2FuZHlfJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ucGxheSgnZ3JlZW5fc3RhdGljJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNrZWxldG9uLnggPSB0aGlzLnNlbGYud2lkdGggLyAyICsgMztcclxuICAgICAgICB0aGlzLnNrZWxldG9uLnkgPSB0aGlzLnNlbGYuaGVpZ2h0IC8gMjtcclxuICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXliYWNrUmF0ZSgxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirlvZPnrKzkuIDkuKrns5bmnpzooqvlkIPmjonlkI7nmoTnp7vliqjlh73mlbBcclxuICAgICAqIOenu+WKqOmAn+W6puimgemdnuW4uOW/q1xyXG4gICAgKi9cclxuICAgIG1vdmVSdWxlcygpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuc2VsZiwgeyB5OiB0aGlzLnNlbGYueSArIHRoaXMuc2VsZi5oZWlnaHQgKyB0aGlzLnNwYWNlWSB9LCAxMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirpo57liLDkuLvop5LouqvkuIrlop7liqDkuLvop5LlsZ7mgKdcclxuICAgICog5bm25LiU5pKt5pS+5bGe5oCn5aKe5Yqg5Yqo55S7XHJcbiAgICovXHJcbiAgICBjYW5keUZseVRvUm9sZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5jYW5keVRhZ1JvbGUgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOaSreaUvuS4iuS4i+e/u+i9rOWKqOeUu1xyXG4gICAgICAgIGlmICh0aGlzLnNrZWxldG9uKSB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAodGhpcy5zZWxmLm5hbWUuc3Vic3RyaW5nKDAsIDExKSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ucGxheSgneWVsbG93X3R1cm5Eb3duJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdyZWRDYW5keV9fXyc6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5KCdyZWRfdHVybkRvd24nLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2JsdWVDYW5keV9fJzpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXkoJ2JsdWVfdHVybkRvd24nLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2dyZWVuQ2FuZHlfJzpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXkoJ2dyZWVuX3R1cm5Eb3duJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ucGxheWJhY2tSYXRlKDIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8g5Z+656GA5pe26Ze05Y+C5pWw77yM5Yqo55S755qE5pe26Ze05Lya6ZqP552A5L2N572u6L656L+R6ICM57yp5bCPXHJcbiAgICAgICAgbGV0IHRpbWVQYXIgPSA1MDAgKyB0aGlzLmdyb3VwICogMTAwO1xyXG4gICAgICAgIGxldCB0YXJnZXRYO1xyXG4gICAgICAgIGxldCB0YXJnZXRZID0gdGhpcy5jYW5keVRhZ1JvbGUueTtcclxuICAgICAgICAvLyB46L2055qE5L2N572u5YGP56e7XHJcbiAgICAgICAgdGFyZ2V0WCA9IHRoaXMuY2FuZHlUYWdSb2xlLnggLSA1MDtcclxuXHJcbiAgICAgICAgbGV0IEhhbGZYO1xyXG4gICAgICAgIGxldCBkaXN0YW5jZVBlciA9IDQ7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZi54ID4gTGF5YS5zdGFnZS53aWR0aCAvIDIpIHtcclxuICAgICAgICAgICAgSGFsZlggPSB0aGlzLnNlbGYueCArICh0aGlzLmNhbmR5VGFnUm9sZS54IC0gdGhpcy5zZWxmLngpICogMyAvIDU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgSGFsZlggPSB0aGlzLnNlbGYueCAtICh0aGlzLnNlbGYueCAtIHRoaXMuY2FuZHlUYWdSb2xlLngpICogMyAvIDU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBIYWxmWSA9IHRoaXMuc2VsZi55ICsgKHRoaXMuY2FuZHlUYWdSb2xlLnkgLSB0aGlzLnNlbGYueSkgLyBkaXN0YW5jZVBlcjtcclxuICAgICAgICAvLyDns5bmnpzmnKzouqtcclxuICAgICAgICAvLyDnrKzkuIDmraXmlL7lpKdcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuc2VsZiwgeyB4OiBIYWxmWCwgeTogSGFsZlksIHNjYWxlWDogMS41LCBzY2FsZVk6IDEuNSB9LCB0aW1lUGFyICogMyAvIDQsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyDnrKzkuozmraXpmY3okL1cclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLnNlbGYsIHsgeDogdGFyZ2V0WCwgeTogdGhpcy5jYW5keVRhZ1JvbGUueSwgc2NhbGVYOiAwLjYsIHNjYWxlWTogMC42IH0sIHRpbWVQYXIgLyAyLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpbnRXb3JkTW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlQWRkUHJvcGVydHkoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FuZHlUYWdSb2xlID0gbnVsbDtcclxuICAgICAgICAgICAgfSksIDApO1xyXG4gICAgICAgIH0pLCAwKTtcclxuXHJcbiAgICAgICAgLy8g57OW5p6c55qE5b2x5a2Q5aSE55CGXHJcbiAgICAgICAgbGV0IHNoYWRvdyA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnc2hhZG93JykgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICAvLyDmi4nlvIDot53nprvlubbnvKnlsI9cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHNoYWRvdywgeyB4OiAtIDIwLCB5OiAxMDAsIHNjYWxlWDogMC44LCBzY2FsZVk6IDAuOCwgfSwgdGltZVBhciAqIDMgLyA0LCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8g56ys5LqM6YOo5Zue5b2SXHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8oc2hhZG93LCB7IHg6IC0xMCwgeTogNjAsIHNjYWxlWDogMC43LCBzY2FsZVk6IDAuNyB9LCB0aW1lUGFyLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgfSksIDApO1xyXG4gICAgICAgIH0pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirlsZ7mgKflop7liqDmj5DnpLrliqjnlLsqL1xyXG4gICAgaGludFdvcmRNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBNYWluU2NlbmVDb250cm9sID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXTtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMuc2VsZi5uYW1lLnN1YnN0cmluZygwLCAxMSkpIHtcclxuICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgTWFpblNjZW5lQ29udHJvbC5jcmVhdGVIaW50V29yZCh0aGlzLmNhbmR5VGFnUm9sZSwgJ+aUu+WHu+mHjCcsIDEwKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdyZWRDYW5keV9fXyc6XHJcbiAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHRoaXMuY2FuZHlUYWdSb2xlLCAn55Sf5ZG9JywgNSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnYmx1ZUNhbmR5X18nOlxyXG4gICAgICAgICAgICAgICAgTWFpblNjZW5lQ29udHJvbC5jcmVhdGVIaW50V29yZCh0aGlzLmNhbmR5VGFnUm9sZSwgJ+WFrOm4oemAn+W6picsIDEwKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdncmVlbkNhbmR5Xyc6XHJcbiAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHRoaXMuY2FuZHlUYWdSb2xlLCAn6Ziy5b6h5YqbJywgNSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5qC55o2u57OW5p6c55qE56eN57G75aKe5Yqg5Li76KeS5bGe5oCn6KeE5YiZXHJcbiAgICAgKiDlubbkuJTmkq3mlL7lop7liqDlsZ7mgKfmloflrZfmj5DnpLrliqjnlLtcclxuICAgICovXHJcbiAgICByb2xlQWRkUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLm5hbWUgPSB0aGlzLnNlbGYubmFtZS5zdWJzdHJpbmcoMCwgMTEpO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5zZWxmLm5hbWUpIHtcclxuICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5keVRhZ1JvbGVbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1ZhbHVlICs9IDEwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlICdyZWRDYW5keV9fXyc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbmR5VGFnUm9sZVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYmxvb2QgKz0gNTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSAnYmx1ZUNhbmR5X18nOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5keVRhZ1JvbGVbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1NwZWVkICs9IDEwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlICdncmVlbkNhbmR5Xyc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbmR5VGFnUm9sZVsnUm9sZSddLnJvbGVfcHJvcGVydHkuZGVmZW5zZSArPSA1O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5za2VsZXRvbikge1xyXG4gICAgICAgICAgICB0aGlzLnNrZWxldG9uLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5riF55CG5Yqo55S7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi5jbGVhckFsbCh0aGlzKTtcclxuICAgICAgICBpZiAodGhpcy5zZWxmLm5hbWUgPT09ICd5ZWxsb3dDYW5keScpIHtcclxuICAgICAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ3llbGxvd0NhbmR5JywgdGhpcy5zZWxmKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAncmVkQ2FuZHlfX18nKSB7XHJcbiAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKCdyZWRDYW5keV9fXycsIHRoaXMuc2VsZik7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGYubmFtZSA9PT0gJ2JsdWVDYW5keV9fJykge1xyXG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcignYmx1ZUNhbmR5X18nLCB0aGlzLnNlbGYpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxmLm5hbWUgPT09ICdncmVlbkNhbmR5XycpIHtcclxuICAgICAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ2dyZWVuQ2FuZHlfJywgdGhpcy5zZWxmKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYW5keSBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq6Ieq5bex55qE6KGA6YePKi9cclxuICAgIHByaXZhdGUgc2VsZkhlYWx0aDogTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgIC8qKuiHquW3seenu+WKqOmAn+W6piovXHJcbiAgICBwcml2YXRlIHNlbGZTcGVlZDogbnVtYmVyO1xyXG4gICAgLyoq6Ieq5bex55qE5Zu+54mHKi9cclxuICAgIHByaXZhdGUgcGljOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuezluaenOenu+WKqOWvueixoSovXHJcbiAgICBwcml2YXRlIGV4cGxvZGVUYXJnZXQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5Li76KeS55qE54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgcm9sZVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirlvpfliIbmmL7npLoqL1xyXG4gICAgcHJpdmF0ZSBzY29yZUxhYmVsOiBMYXlhLkZvbnRDbGlwO1xyXG4gICAgLyoq5pe26Ze057q/Ki9cclxuICAgIHByaXZhdGUgdGltZXJDb250cm9sOiBudW1iZXI7XHJcbiAgICAvKirmr4/kuKrns5bmnpzkuYvpl7TnmoTpl7Tot50qL1xyXG4gICAgcHJpdmF0ZSBzcGFjZVk6IG51bWJlcjtcclxuXHJcbiAgICAvKirliJ3lp4vljJbnmoQxMOS4quezluaenOeahOS9jee9ruiusOW9lSovXHJcbiAgICBwcml2YXRlIHBvc1lBcnI6IEFycmF5PG51bWJlcj47XHJcbiAgICAvKirlsZ7mgKfpo5jlrZfmj5DnpLoqL1xyXG4gICAgcHJpdmF0ZSBoaW50V29yZDogTGF5YS5QcmVmYWI7XHJcbiAgICAvKirniIbngrjlhYPntKAqL1xyXG4gICAgcHJpdmF0ZSBleHBsb2RlOiBMYXlhLlByZWZhYjtcclxuXHJcbiAgICAvKirpqqjpqrzliqjnlLvmqKHmnb8qL1xyXG4gICAgcHJpdmF0ZSB0ZW1wbGV0OiBMYXlhLlRlbXBsZXQ7XHJcbiAgICAvKirpqqjpqrzliqjnlLsqL1xyXG4gICAgcHJpdmF0ZSBza2VsZXRvbjogTGF5YS5Ta2VsZXRvbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0UHJvcGVydHkoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliJ3lp4vljJYqL1xyXG4gICAgaW5pdFByb3BlcnR5KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5waWMgPSB0aGlzLnNlbGYuZ2V0Q2hpbGRCeU5hbWUoJ3BpYycpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lID0gdGhpcy5zZWxmLnNjZW5lIGFzIExheWEuU2NlbmU7XHJcbiAgICAgICAgdGhpcy5leHBsb2RlVGFyZ2V0ID0gbnVsbDtcclxuICAgICAgICB0aGlzLnJvbGVQYXJlbnQgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5zY29yZUxhYmVsO1xyXG4gICAgICAgIHRoaXMuc2VsZlNwZWVkID0gMTA7XHJcbiAgICAgICAgdGhpcy5zZWxmSGVhbHRoID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdoZWFsdGgnKSBhcyBMYXlhLlByb2dyZXNzQmFyO1xyXG4gICAgICAgIHRoaXMudGltZXJDb250cm9sID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5leHBsb2RlID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5leHBsb2RlO1xyXG4gICAgICAgIHRoaXMuc3BhY2VZID0gNTtcclxuXHJcbiAgICAgICAgdGhpcy5oaW50V29yZCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uaGludFdvcmQ7XHJcbiAgICAgICAgLy8g5byA5ZCv5pWM5Lq66aKE6K2mXHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlXzAxWydSb2xlJ10ucm9sZV9XYXJuaW5nID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDJbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc2VsZlsnQ2FuZHlfRXhwbG9kZSddID0gdGhpcztcclxuXHJcbiAgICAgICAgdGhpcy5za2VsZXRvbiA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnc2tlbGV0b24nKSBhcyBMYXlhLlNrZWxldG9uO1xyXG5cclxuICAgICAgICB0aGlzLmNyZWF0ZUJvbmVBbmkoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliJvlu7rpqqjpqrzliqjnlLvnmq7ogqQqL1xyXG4gICAgY3JlYXRlQm9uZUFuaSgpOiB2b2lkIHtcclxuICAgICAgICAvL+WIm+W7uuWKqOeUu+aooeadv1xyXG4gICAgICAgIHRoaXMudGVtcGxldCA9IG5ldyBMYXlhLlRlbXBsZXQoKTtcclxuICAgICAgICB0aGlzLnRlbXBsZXQub24oTGF5YS5FdmVudC5DT01QTEVURSwgdGhpcywgdGhpcy5wYXJzZUNvbXBsZXRlKTtcclxuICAgICAgICB0aGlzLnRlbXBsZXQub24oTGF5YS5FdmVudC5FUlJPUiwgdGhpcywgdGhpcy5vbkVycm9yKTtcclxuICAgICAgICB0aGlzLnRlbXBsZXQubG9hZEFuaShcImNhbmR5L+ezluaenC9jYW5keUNvbXBpbGF0aW9ucy5za1wiKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkVycm9yKCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfpqqjpqrzliqjnlLvliqDovb3plJnor68nKTtcclxuICAgIH1cclxuXHJcbiAgICBwYXJzZUNvbXBsZXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOaSreaUvuaVjOS6uuWKqOeUu1xyXG4gICAgICAgIHZhciBza2VsZXRvbjogTGF5YS5Ta2VsZXRvbjtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMuc2VsZi5uYW1lLnN1YnN0cmluZygwLCAxMSkpIHtcclxuICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5KCd5ZWxsb3dfZXhwbG9kZScsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ3JlZENhbmR5X19fJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ucGxheSgncmVkX2V4cGxvZGUnLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdibHVlQ2FuZHlfXyc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXkoJ2JsdWVfZXhwbG9kZScsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2dyZWVuQ2FuZHlfJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ucGxheSgnZ3JlZW5fZXhwbG9kZScsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5YmFja1JhdGUoMSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6aOe5Yiw5Li76KeS6Lqr5LiK5bm25LiU54iG54K4XHJcbiAgICAgKiDooqvmtojnga3lkI7kvJrljp/lnLDniIbngrjvvIzkvYbmmK/kuI3lr7nkuLvop5LpgKDmiJDkvKTlrrNcclxuICAgICAqIOeIhueCuOWQjumAmui/h+WvueW6lOeahOezluaenOWHj+WwkeS4u+inkueahOWxnuaAp1xyXG4gICAgKi9cclxuICAgIGZseVRvUm9sZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDlpoLmnpzmmK/mmoLlgZzmiJbogIXmmK/muLjmiI/nu5PmnZ8s5YiZ5LiN5Lya56e75YqoXHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZ2FtZU92ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5leHBsb2RlVGFyZ2V0ICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIC8vIHgseeWIhuWIq+ebuOWHj+aYr+S4pOeCuei/nue6v+WQkemHj1xyXG4gICAgICAgICAgICAvLyDlkJHph4/orqHnrpflubbkuJTlvZLkuIDljJbvvIzlkJHph4/plb/luqbkuLox44CCXHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuZXhwbG9kZVRhcmdldC54IC0gdGhpcy5zZWxmLngsIHRoaXMuZXhwbG9kZVRhcmdldC55IC0gdGhpcy5zZWxmLnkpO1xyXG4gICAgICAgICAgICBwb2ludC5ub3JtYWxpemUoKTtcclxuICAgICAgICAgICAgLy/lkJHph4/nm7jliqDnp7vliqhcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnggKz0gcG9pbnQueCAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYueSArPSBwb2ludC55ICogdGhpcy5zZWxmU3BlZWQ7XHJcbiAgICAgICAgICAgIC8vIOWIsOi+vuWvueixoeS9jee9ruWQjuW8gOWQr+aUu+WHu+W8gOWFs+i/m+ihjOaUu+WHu++8jOaUu+WHu+mAn+W6puS+neeFp+aXtumXtOmXtOmalOiAjOWumlxyXG4gICAgICAgICAgICAvLyDmraTml7bnp7vliqjpgJ/luqbkuLrpm7ZcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VYID0gTWF0aC5hYnModGhpcy5zZWxmLnggLSB0aGlzLmV4cGxvZGVUYXJnZXQueCk7XHJcbiAgICAgICAgICAgIGxldCBkaWZmZXJlbmNlWSA9IE1hdGguYWJzKHRoaXMuc2VsZi55IC0gdGhpcy5leHBsb2RlVGFyZ2V0LnkpO1xyXG4gICAgICAgICAgICBpZiAoZGlmZmVyZW5jZVggPCA1MCAmJiBkaWZmZXJlbmNlWSA8IDUwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5leHBsb2RlQW5pKHRoaXMuc2VsZlNjZW5lLCB0aGlzLnNlbGYueCwgdGhpcy5zZWxmLnksIHRoaXMuc2VsZi5uYW1lLnN1YnN0cmluZygwLCAxMSksIDE1LCAxMDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wZXJ0eUhpbnRXb3JkKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJvbGVSZWR1Y2VQcm9wZXJ0eSgpO1xyXG4gICAgICAgICAgICAgICAgLy8g5YWz6Zet6aKE6K2mXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDFbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlXzAyWydSb2xlJ10ucm9sZV9XYXJuaW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZXhwbG9kZVRhcmdldCA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5bGe5oCn5YeP5bCR5o+Q56S65Yqo55S7Ki9cclxuICAgIHByb3BlcnR5SGludFdvcmQoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IE1haW5TY2VuZUNvbnRyb2wgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5zZWxmLm5hbWUuc3Vic3RyaW5nKDAsIDExKSkge1xyXG4gICAgICAgICAgICBjYXNlICd5ZWxsb3dDYW5keSc6XHJcbiAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHRoaXMuZXhwbG9kZVRhcmdldCwgJ+WHj+WwkeaUu+WHu+mHjCcsIDEwKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdyZWRDYW5keV9fXyc6XHJcbiAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHRoaXMuZXhwbG9kZVRhcmdldCwgJ+WHj+WwkeeUn+WRvScsIDUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2JsdWVDYW5keV9fJzpcclxuICAgICAgICAgICAgICAgIE1haW5TY2VuZUNvbnRyb2wuY3JlYXRlSGludFdvcmQodGhpcy5leHBsb2RlVGFyZ2V0LCAn5YeP5bCR5YWs6bih6YCf5bqmJywgMTApO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2dyZWVuQ2FuZHlfJzpcclxuICAgICAgICAgICAgICAgIE1haW5TY2VuZUNvbnRyb2wuY3JlYXRlSGludFdvcmQodGhpcy5leHBsb2RlVGFyZ2V0LCAn5YeP5bCR6Ziy5b6h5YqbJywgNSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5qC55o2u57OW5p6c55qE56eN57G75aKe5Yqg5Li76KeS5bGe5oCn6KeE5YiZXHJcbiAgICAgKiDlubbkuJTmkq3mlL7lop7liqDlsZ7mgKfmloflrZfmj5DnpLrliqjnlLtcclxuICAgICovXHJcbiAgICByb2xlUmVkdWNlUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLm5hbWUgPSB0aGlzLnNlbGYubmFtZS5zdWJzdHJpbmcoMCwgMTEpO1xyXG4gICAgICAgIGxldCByb2xlXzAxID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlXzAxO1xyXG4gICAgICAgIGxldCByb2xlXzAyID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlXzAyO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5zZWxmLm5hbWUpIHtcclxuICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXhwbG9kZVRhcmdldCA9PT0gcm9sZV8wMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJvbGVfMDFbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1ZhbHVlIC09IDEwO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5hdHRhY2tWYWx1ZSAtPSAxMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdyZWRDYW5keV9fXyc6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5leHBsb2RlVGFyZ2V0ID09PSByb2xlXzAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcm9sZV8wMVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYmxvb2QgLT0gNTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcm9sZV8wMlsnUm9sZSddLnJvbGVfcHJvcGVydHkuYmxvb2QgLT0gNTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnYmx1ZUNhbmR5X18nOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXhwbG9kZVRhcmdldCA9PT0gcm9sZV8wMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJvbGVfMDFbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1NwZWVkIC09IDEwO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5hdHRhY2tTcGVlZCAtPSAxMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdncmVlbkNhbmR5Xyc6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5leHBsb2RlVGFyZ2V0ID09PSByb2xlXzAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcm9sZV8wMVsnUm9sZSddLnJvbGVfcHJvcGVydHkuZGVmZW5zZSAtPSA1O1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5kZWZlbnNlIC09IDU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDmrbvkuqFcclxuICAgICAgICBpZiAodGhpcy5zZWxmSGVhbHRoLnZhbHVlIDw9IDApIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5leHBsb2RlQW5pKHRoaXMuc2VsZi54LCB0aGlzLnNlbGYueSwgdGhpcy5zZWxmLm5hbWUuc3Vic3RyaW5nKDAsIDExKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOmjnuWIsOS4u+inkui6q+S4ilxyXG4gICAgICAgIHRoaXMuZmx5VG9Sb2xlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOa4heeQhuWKqOeUu1xyXG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcyk7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAneWVsbG93Q2FuZHknKSB7XHJcbiAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKCd5ZWxsb3dDYW5keScsIHRoaXMuc2VsZik7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGYubmFtZSA9PT0gJ3JlZENhbmR5X19fJykge1xyXG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcigncmVkQ2FuZHlfX18nLCB0aGlzLnNlbGYpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxmLm5hbWUgPT09ICdibHVlQ2FuZHlfXycpIHtcclxuICAgICAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ2JsdWVDYW5keV9fJywgdGhpcy5zZWxmKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAnZ3JlZW5DYW5keV8nKSB7XHJcbiAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKCdncmVlbkNhbmR5XycsIHRoaXMuc2VsZik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vTWFpblNjZW5lQ29udHJvbFwiO1xyXG5pbXBvcnQgUm9sZSBmcm9tIFwiLi9Sb2xlXCI7XHJcbmltcG9ydCB7IHRvb2xzIH0gZnJvbSBcIi4vVG9vbFwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmVteSBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq6Ieq5bex55qE6KGA6YePKi9cclxuICAgIHByaXZhdGUgc2VsZkhlYWx0aDogTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgIC8qKuiHquW3seenu+WKqOmAn+W6piovXHJcbiAgICBwcml2YXRlIHNlbGZTcGVlZDogbnVtYmVyO1xyXG4gICAgLyoq55qu6IKkKi9cclxuICAgIHByaXZhdGUgcGljOiBMYXlhLlNwcml0ZTtcclxuXHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirlnLrmma/ohJrmnKznu4Tku7YqL1xyXG4gICAgcHJpdmF0ZSBtYWluU2NlbmVDb250cm9sO1xyXG4gICAgLyoq5Li76KeS55qE54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgcm9sZVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmgKrnianmlLvlh7vlr7nosaEs5Lmf5piv5LiK5Liq5ZCD57OW5p6c5a+56LGhLOS4gOasoeaAp++8jOi1i+S4gOasoeWAvOWPquiDveeUqOS4gOasoSovXHJcbiAgICBwcml2YXRlIHNsZWZUYWdSb2xlOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaUu+WHu+WvueixoeihgOmHjyovXHJcbiAgICBwcml2YXRlIHRhZ0hlYWx0aDogTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgIC8qKuWvueivneahhiovXHJcbiAgICBwcml2YXRlIHNwZWFrQm94OiBMYXlhLlByZWZhYjtcclxuXHJcbiAgICAvKirmlLvlh7vml7bpl7Tpl7TpmpQqL1xyXG4gICAgcHJpdmF0ZSBhdHRhY2tUbnRlcnZhbDogbnVtYmVyO1xyXG4gICAgLyoq5b2T5YmN5pe26Ze077yM55So5LqO5a+55q+U5pe26Ze06Ze06ZqUKi9cclxuICAgIHByaXZhdGUgcmVjb3JkVGltZTogbnVtYmVyO1xyXG5cclxuICAgIC8qKuWIhuaVsCovXHJcbiAgICBwcml2YXRlIHNjb3JlTGFiZWw6IExheWEuRm9udENsaXA7XHJcbiAgICAvKirlvZPliY3lsZ7mgKcqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVByb3BlcnR5OiBhbnk7XHJcbiAgICAvKirooYDph4/lgLzmmL7npLrnmoRsYWJlbCovXHJcbiAgICBwcml2YXRlIGJsb29kTGFiZWw6IGFueTtcclxuICAgIC8qKuWxnuaAp+WxleekuuahhiovXHJcbiAgICBwcml2YXRlIHByb3BlcnR5U2hvdzogTGF5YS5JbWFnZTtcclxuICAgIC8qKuiiq+WHu+mAgOaViOaenOiuoeaXtiovXHJcbiAgICBwcml2YXRlIHJlcGVsVGltZXI6IG51bWJlcjtcclxuXHJcbiAgICAvKirlsZ7mgKfpo5jlrZfmj5DnpLoqL1xyXG4gICAgcHJpdmF0ZSBoaW50V29yZDogTGF5YS5QcmVmYWI7XHJcbiAgICAvKirmiYDlsZ7mlYzkurrnmoTnsbvlnovvvIzmmK/ov5znqIvov5jmmK/ov5HmiJgqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVR5cGU6IHN0cmluZztcclxuICAgIC8qKuWtkOW8uSovXHJcbiAgICBwcml2YXRlIGVuZW15QnVsbGV0OiBMYXlhLlByZWZhYjtcclxuICAgIC8qKuWHuuadpeS5i+WQjuWwseehruWumuS6huWcqOS4u+inkueahOS7gOS5iOS9jee9ruWvueS4u+inkuWPkeWKqOaUu+WHuyovXHJcbiAgICBwcml2YXRlIGF0dGFja1g6IG51bWJlcjtcclxuICAgIHByaXZhdGUgYXR0YWNrWTogbnVtYmVyO1xyXG5cclxuICAgIC8qKumqqOmqvOWKqOeUu+aooeadvyovXHJcbiAgICBwcml2YXRlIHRlbXBsZXQ6IExheWEuVGVtcGxldDtcclxuICAgIC8qKumqqOmqvOWKqOeUuyovXHJcbiAgICBwcml2YXRlIHNrZWxldG9uOiBMYXlhLlNrZWxldG9uO1xyXG5cclxuICAgIC8qKuS4pOS4quS4u+inkiovXHJcbiAgICBwcml2YXRlIHJvbGVfMDE6IExheWEuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSByb2xlXzAyOiBMYXlhLlNwcml0ZTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaW5pdFByb3BlcnR5KCk7XHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5U2V0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yid5aeL5YyWKi9cclxuICAgIGluaXRQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZi5hbHBoYSA9IDE7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLm93bmVyLnNjZW5lIGFzIExheWEuU2NlbmU7XHJcbiAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sID0gdGhpcy5zZWxmU2NlbmUuZ2V0Q29tcG9uZW50KE1haW5TY2VuZUNvbnRyb2wpOy8v5Zy65pmv6ISa5pys57uE5Lu2XHJcbiAgICAgICAgdGhpcy5yb2xlUGFyZW50ID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5zZWxmSGVhbHRoID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdoZWFsdGgnKSBhcyBMYXlhLlByb2dyZXNzQmFyO1xyXG4gICAgICAgIHRoaXMuc2VsZkhlYWx0aC52YWx1ZSA9IDE7XHJcbiAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSAzLjU7XHJcbiAgICAgICAgdGhpcy5wcm9wZXJ0eVNob3cgPSB0aGlzLnNlbGYuZ2V0Q2hpbGRCeU5hbWUoJ3Byb3BlcnR5U2hvdycpIGFzIExheWEuSW1hZ2U7XHJcblxyXG4gICAgICAgIHRoaXMuYXR0YWNrVG50ZXJ2YWwgPSAxMDA7XHJcbiAgICAgICAgdGhpcy5yZWNvcmRUaW1lID0gRGF0ZS5ub3coKTtcclxuXHJcbiAgICAgICAgdGhpcy5zcGVha0JveCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5zcGVha0JveDtcclxuICAgICAgICB0aGlzLnNjb3JlTGFiZWwgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuc2NvcmVMYWJlbDtcclxuXHJcbiAgICAgICAgdGhpcy5yZXBlbFRpbWVyID0gMDtcclxuICAgICAgICB0aGlzLmhpbnRXb3JkID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmhpbnRXb3JkIGFzIExheWEuUHJlZmFiO1xyXG4gICAgICAgIHRoaXMuZW5lbXlCdWxsZXQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuZW5lbXlCdWxsZXQgYXMgTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgICAgIHRoaXMuc2VsZlsnRW5lbXknXSA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHRoaXMuc2tlbGV0b24pIHtcclxuICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucm9sZV8wMSA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10ucm9sZV8wMTtcclxuICAgICAgICB0aGlzLnJvbGVfMDIgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDI7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yib5bu66aqo6aq85Yqo55S755qu6IKkKi9cclxuICAgIGNyZWF0ZUJvbmVBbmkoKTogdm9pZCB7XHJcbiAgICAgICAgLy/liJvlu7rliqjnlLvmqKHmnb9cclxuICAgICAgICB0aGlzLnRlbXBsZXQgPSBuZXcgTGF5YS5UZW1wbGV0KCk7XHJcbiAgICAgICAgdGhpcy50ZW1wbGV0Lm9uKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIHRoaXMucGFyc2VDb21wbGV0ZSk7XHJcbiAgICAgICAgdGhpcy50ZW1wbGV0Lm9uKExheWEuRXZlbnQuRVJST1IsIHRoaXMsIHRoaXMub25FcnJvcik7XHJcbiAgICAgICAgaWYgKHRoaXMuZW5lbXlUeXBlID09PSAnaW5maWdodGluZycpIHtcclxuICAgICAgICAgICAgdGhpcy50ZW1wbGV0LmxvYWRBbmkoXCJjYW5keS/mlYzkurovZmlnaHRpbmdFbmVteS5za1wiKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZW5lbXlUeXBlID09PSAncmFuZ2UnKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGVtcGxldC5sb2FkQW5pKFwiY2FuZHkv5pWM5Lq6L3JhbmdlRW5lbXkuc2tcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRXJyb3IoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+mqqOmqvOWKqOeUu+WKoOi9vemUmeivrycpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhcnNlQ29tcGxldGUoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5pKt5pS+5pWM5Lq65Yqo55S7XHJcbiAgICAgICAgdmFyIHNrZWxldG9uOiBMYXlhLlNrZWxldG9uO1xyXG4gICAgICAgIHRoaXMuc2tlbGV0b24gPSB0aGlzLnRlbXBsZXQuYnVpbGRBcm1hdHVyZSgwKTsvL+aooeadvzBcclxuICAgICAgICB0aGlzLnNrZWxldG9uTGlzdGVuKCk7XHJcbiAgICAgICAgdGhpcy5zZWxmLmFkZENoaWxkKHRoaXMuc2tlbGV0b24pO1xyXG4gICAgICAgIC8v5qC85byPXHJcbiAgICAgICAgaWYgKHRoaXMuZW5lbXlUeXBlID09PSAnaW5maWdodGluZycpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLndpZHRoID0gMTIwO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuaGVpZ2h0ID0gMTgwO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucGl2b3RYID0gdGhpcy5zZWxmLndpZHRoIC8gMjtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnBpdm90WSA9IHRoaXMuc2VsZi5oZWlnaHQgLyAyO1xyXG4gICAgICAgICAgICB0aGlzLnNrZWxldG9uLnggPSA2MztcclxuICAgICAgICAgICAgdGhpcy5za2VsZXRvbi55ID0gMTA4O1xyXG4gICAgICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXkoJ21vdmUnLCB0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5YmFja1JhdGUoMSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmVuZW15VHlwZSA9PT0gJ3JhbmdlJykge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYud2lkdGggPSAxMjA7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5oZWlnaHQgPSAxODA7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5waXZvdFggPSB0aGlzLnNlbGYud2lkdGggLyAyO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucGl2b3RZID0gdGhpcy5zZWxmLmhlaWdodCAvIDI7XHJcbiAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ueCA9IDY0O1xyXG4gICAgICAgICAgICB0aGlzLnNrZWxldG9uLnkgPSA4NjtcclxuICAgICAgICAgICAgLy8g5bem5Y+z5Yqo5L2c5LiN5LiA5qC3XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGYueCA8IExheWEuc3RhZ2Uud2lkdGggLyAyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXkoJ21vdmVSaWdodCcsIHRydWUpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5KCdtb3ZlTGVmdCcsIHRydWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ucGxheWJhY2tSYXRlKDEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirnm5HlkKwqL1xyXG4gICAgc2tlbGV0b25MaXN0ZW4oKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5za2VsZXRvbi5vbihMYXlhLkV2ZW50LkxBQkVMLCB0aGlzLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5lbmVteVR5cGUgPT09ICdpbmZpZ2h0aW5nJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGUubmFtZSA9PT0gJ2hpdE91dCcpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZW15QXR0YWNrUnVsZXMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmICgncmFuZ2UnKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS5uYW1lID09PSAnaGl0T3V0Jykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRCdWxsZXQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKui/keaImOaUu+WHu+eahOaVjOS6uuaUu+WHu+S4u+inkueahOaXtuWAme+8jOS8mumaj+acuuWcqOS4u+inkuiMg+WbtOWGheWBnOatoueEtuWQjuaUu+WHu1xyXG4gICAgICog6L+c56iL5pS75Ye755qE5pWM5Lq65Zyo5Li76KeS55qE5LiK6Z2i77yM5LuW55qEeei9tOWdkOagh+avlOi+g+mrmFxyXG4gICAgICog5bm25LiU6L+Z5Liq5Z2Q5qCH5Zyo5byA5aeL55qE5pe25YCZ5omn6KGM5LiA5qyhXHJcbiAgICAgKiDmm7TmjaLkuLvop5LnmoTml7blgJnmiafooYzkuIDmrKFcclxuICAgICAqICovXHJcbiAgICByYW5kb21BdHRhY2tQb2ludCgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgZGlmZmVyZW5jZTtcclxuICAgICAgICBsZXQgbnVtYmVyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMik7XHJcbiAgICAgICAgaWYgKG51bWJlciA9PT0gMSkge1xyXG4gICAgICAgICAgICBkaWZmZXJlbmNlID0gLU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkaWZmZXJlbmNlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNTApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmF0dGFja1ggPSB0aGlzLnNsZWZUYWdSb2xlLnggKyBkaWZmZXJlbmNlO1xyXG4gICAgICAgIGlmICh0aGlzLmVuZW15VHlwZSA9PT0gJ2luZmlnaHRpbmcnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXR0YWNrWSA9IHRoaXMuc2xlZlRhZ1JvbGUueSAtIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwKTtcclxuICAgICAgICB9IGVsc2UgaWYgKCdyYW5nZScpIHtcclxuICAgICAgICAgICAgdGhpcy5hdHRhY2tZID0gdGhpcy5zbGVmVGFnUm9sZS55IC0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNTApIC0gNDUwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirmgKrniannrYnnuqfljIXmi6znmoTkuIDkupvlsZ7mgKcqL1xyXG4gICAgZW5lbXlQcm9wZXJ0eVNldCgpOiB2b2lkIHtcclxuICAgICAgICAvLyDlsZ7mgKfotYvlgLxcclxuICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkgPSB7XHJcbiAgICAgICAgICAgIGxldmVsOiAnJyxcclxuICAgICAgICAgICAgYmxvb2Q6ICcnLFxyXG4gICAgICAgICAgICBtb3ZlU3BlZWQ6ICcnLFxyXG4gICAgICAgICAgICBkZWZlbnNlOiAnJyxcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5LmJsb29kID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UHJvcGVydHkuYmxvb2Q7XHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5LmF0dGFja1ZhbHVlID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWU7XHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5LmF0dGFja1NwZWVkID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UHJvcGVydHkuYXR0YWNrU3BlZWQ7XHJcbiAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5LmRlZmVuc2UgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuZW5lbXlQcm9wZXJ0eS5kZWZlbnNlO1xyXG4gICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5tb3ZlU3BlZWQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuZW5lbXlQcm9wZXJ0eS5tb3ZlU3BlZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5bGe5oCn5Yi35paw5pi+56S66KeE5YiZLOihgOmHj+aYvuekuuS4gOWumuaYr+aVtOaVsDEwKi9cclxuICAgIGVuZW15UHJvcGVydHlVcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g6KGA5p2h5LiK55qE6KGA6YeP5pi+56S6XHJcbiAgICAgICAgdGhpcy5ibG9vZExhYmVsID0gdGhpcy5zZWxmSGVhbHRoLmdldENoaWxkQnlOYW1lKCdibG9vZExhYmVsJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBsZXQgc3RyID0gTWF0aC5yb3VuZCh0aGlzLmVuZW15UHJvcGVydHkuYmxvb2QgKiB0aGlzLnNlbGZIZWFsdGgudmFsdWUpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgbGV0IHN1YlN0cl8wMSA9IHN0ci5zdWJzdHJpbmcoMCwgc3RyLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgIGxldCBzdWJTdHJfMDIgPSBzdWJTdHJfMDEgKyAwO1xyXG4gICAgICAgIHRoaXMuYmxvb2RMYWJlbC50ZXh0ID0gc3ViU3RyXzAyO1xyXG5cclxuICAgICAgICAvLyDlsZ7mgKfmmL7npLrmoYbkuIrpnaLmmL7npLrnmoTlsZ7mgKdcclxuICAgICAgICAvLyDooYDph49cclxuICAgICAgICBsZXQgYmxvb2QgPSB0aGlzLnByb3BlcnR5U2hvdy5nZXRDaGlsZEJ5TmFtZSgnYmxvb2QnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgIGJsb29kLnRleHQgPSBcIuihgOmHjzogXCIgKyB0aGlzLmVuZW15UHJvcGVydHkuYmxvb2Q7XHJcbiAgICAgICAgLy8g5pS75Ye75YqbXHJcbiAgICAgICAgbGV0IGF0dGFja1ZhbHVlID0gdGhpcy5wcm9wZXJ0eVNob3cuZ2V0Q2hpbGRCeU5hbWUoJ2F0dGFja1ZhbHVlJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBhdHRhY2tWYWx1ZS50ZXh0ID0gXCLmlLvlh7vlips6IFwiICsgdGhpcy5lbmVteVByb3BlcnR5LmF0dGFja1ZhbHVlO1xyXG4gICAgICAgIC8vIOaUu+WHu+mAn+W6plxyXG4gICAgICAgIGxldCBhdHRhY2tTcGVlZCA9IHRoaXMucHJvcGVydHlTaG93LmdldENoaWxkQnlOYW1lKCdhdHRhY2tTcGVlZCcpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgYXR0YWNrU3BlZWQudGV4dCA9IFwi5pS75Ye76YCf5bqmOiBcIiArIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tTcGVlZDtcclxuICAgICAgICAvLyDpmLLlvqHliptcclxuICAgICAgICBsZXQgZGVmZW5zZSA9IHRoaXMucHJvcGVydHlTaG93LmdldENoaWxkQnlOYW1lKCdkZWZlbnNlJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBkZWZlbnNlLnRleHQgPSBcIumYsuW+oeWKmzogXCIgKyB0aGlzLmVuZW15UHJvcGVydHkuZGVmZW5zZTtcclxuXHJcbiAgICAgICAgLy/lvZPmlYzkurrmlbDph4/ovr7liLDkuIDlrprmlbDph4/nmoTml7blgJnvvIznu5nmlYzkurrlop7liqDmlLvlh7vlipvlvIDlhbNcclxuICAgICAgICAvLyDpnIDopoHmnInmj5DnpLpcclxuICAgICAgICBsZXQgcm9sZURlZmVuc2UgPSB0aGlzLnNsZWZUYWdSb2xlWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5kZWZlbnNlO1xyXG4gICAgICAgIGlmICh0aGlzLm1haW5TY2VuZUNvbnRyb2wuZW5lbXlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aCA+IDIwICYmIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tWYWx1ZSA8IHJvbGVEZWZlbnNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tWYWx1ZSA9IHJvbGVEZWZlbnNlICsgNTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOi/keaImOaUu+WHu+eahOaVjOS6uuesrOS6jOmYtuauteenu+WKqOWIsOS4u+inkuS9jee9ru+8jOW5tuS4lOi/m+WFpeS4u+inkuWwhOeoi+iMg+WbtOeahOenu+WKqOinhOWImVxyXG4gICAgICog5Yqg5YWl6KKr5a2Q5by55Ye76YCA5pWI5p6cXHJcbiAgICAqL1xyXG4gICAgaW5maWdodGluZ0VuZW15TW92ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyB4LHnliIbliKvnm7jlh4/mmK/kuKTngrnov57nur/lkJHph49cclxuICAgICAgICAvLyDlkJHph4/orqHnrpflubbkuJTlvZLkuIDljJbvvIzlkJHph4/plb/luqbkuLox44CCXHJcbiAgICAgICAgbGV0IHBvaW50ID0gbmV3IExheWEuUG9pbnQodGhpcy5hdHRhY2tYIC0gdGhpcy5zZWxmLngsIHRoaXMuYXR0YWNrWSAtIHRoaXMuc2VsZi55KTtcclxuICAgICAgICBwb2ludC5ub3JtYWxpemUoKTtcclxuICAgICAgICAvLyDliKTmlq3mmK/lkKbmv4DmtLvooqvlh7vpgIDmlYjmnpxcclxuICAgICAgICBpZiAodGhpcy5zbGVmVGFnUm9sZS54ID4gTGF5YS5zdGFnZS53aWR0aCAvIDIpIHsvL+WPs+i+uVxyXG4gICAgICAgICAgICAvLyDlj7Povrnlj5HnlJ/pooToraZcclxuICAgICAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDFbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zbGVmVGFnUm9sZS54IDwgTGF5YS5zdGFnZS53aWR0aCAvIDIpIHsvL+W3pui+uVxyXG4gICAgICAgICAgICAvLyDlt6bovrnlj5HnlJ/pooToraZcclxuICAgICAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDJbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDooqvlh7vpgIDlj43lkJHnp7vliqhcclxuICAgICAgICBpZiAodGhpcy5yZXBlbFRpbWVyID4gMCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlcGVsVGltZXItLTtcclxuICAgICAgICAgICAgLy/lj43lkJHnp7vliqhcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnggLT0gcG9pbnQueCAqIDI7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi55IC09IHBvaW50LnkgKiAyO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8v5ZCR6YeP55u45Yqg56e75YqoXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi54ICs9IHBvaW50LnggKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnkgKz0gcG9pbnQueSAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirov5znqIvmlLvlh7vnmoTmlYzkurrnp7vliqhcclxuICAgICAqIOi/nOeoi+aUu+WHu+aVjOS6uuS4jeS8muiiq+WHu+mAgFxyXG4gICAgKi9cclxuICAgIHJhbmdlRW5lbXlNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOWQkemHj+iuoeeul+W5tuS4lOW9kuS4gOWMlu+8jOWQkemHj+mVv+W6puS4ujHjgIJcclxuICAgICAgICBsZXQgcG9pbnQgPSBuZXcgTGF5YS5Qb2ludCh0aGlzLmF0dGFja1ggLSB0aGlzLnNlbGYueCwgdGhpcy5hdHRhY2tZIC0gdGhpcy5zZWxmLnkpO1xyXG4gICAgICAgIHBvaW50Lm5vcm1hbGl6ZSgpO1xyXG4gICAgICAgIC8v5ZCR6YeP55u45Yqg56e75YqoXHJcbiAgICAgICAgdGhpcy5zZWxmLnggKz0gcG9pbnQueCAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgIHRoaXMuc2VsZi55ICs9IHBvaW50LnkgKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgIH1cclxuXHJcbiAgICAvKirmgKrnianlr7nkuLvop5LpgKDmiJDkvKTlrrPnmoTlhazlvI9cclxuICAgICAqIOaUu+WHu+WKmy3kuLvop5LpmLLlvqHlpoLmnpzlpKfkuo7pm7bliJnpgKDmiJDkvKTlrrPvvIzlkKbliJnkuI3pgKDmiJDkvKTlrrNcclxuICAgICAqIOaOieihgOaYvuekuuWAvO+8jOS8pOWus+Wwj+S6jumbtuWImeaYvuekujBcclxuICAgICAqIOW5tuS4lOWcqOS4u+inkuWktOS4iuWHuueOsOaOieihgOWKqOeUu+aPkOekulxyXG4gICAgKi9cclxuICAgIGVuZW15QXR0YWNrUnVsZXMoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g6YCa6L+H5pS75Ye75Yqb6K6h566X5o6J6KGA54q25Ya1XHJcbiAgICAgICAgbGV0IGRhbWFnZSA9IHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tWYWx1ZSAtIHRoaXMuc2xlZlRhZ1JvbGVbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmRlZmVuc2U7XHJcbiAgICAgICAgaWYgKGRhbWFnZSA+IDApIHtcclxuICAgICAgICAgICAgdGhpcy5zbGVmVGFnUm9sZVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYmxvb2QgLT0gZGFtYWdlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGRhbWFnZSA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY3JlYXRlSGludFdvcmQoZGFtYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliJvlu7rmj5DnpLrvvIzmjonooYDmloflrZcqL1xyXG4gICAgY3JlYXRlSGludFdvcmQoZGFtYWdlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICAvLyDliJvlu7rmj5DnpLrliqjnlLvlr7nosaFcclxuICAgICAgICBsZXQgaGludFdvcmQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdjYW5keScsIHRoaXMuaGludFdvcmQuY3JlYXRlLCB0aGlzLmhpbnRXb3JkKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICBoaW50V29yZC5wb3MoMCwgLTE1MCk7XHJcbiAgICAgICAgdGhpcy5zbGVmVGFnUm9sZS5hZGRDaGlsZChoaW50V29yZCk7XHJcbiAgICAgICAgbGV0IHByb1BlcnR5VHlwZTogc3RyaW5nID0gJ+aVjOS6uuaOieihgCc7XHJcbiAgICAgICAgbGV0IG51bWJlclZhbHVlOiBudW1iZXI7XHJcbiAgICAgICAgaWYgKCF0aGlzLnNsZWZUYWdSb2xlLnBhcmVudCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGhpbnRXb3JkWydIaW50V29yZCddLmluaXRQcm9wZXJ0eShwcm9QZXJ0eVR5cGUsIGRhbWFnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6L+c56iL5pS75Ye75Yib5bu65a2Q5by5Ki9cclxuICAgIGNyZWF0QnVsbGV0KCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBidWxsZXQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdlbmVteUJ1bGxldCcsIHRoaXMuZW5lbXlCdWxsZXQuY3JlYXRlLCB0aGlzLmVuZW15QnVsbGV0KSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICBsZXQgYnVsbGV0UGFyZW50ID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmJ1bGxldFBhcmVudDtcclxuICAgICAgICBidWxsZXRQYXJlbnQuYWRkQ2hpbGQoYnVsbGV0KTtcclxuICAgICAgICBidWxsZXQucG9zKHRoaXMuc2VsZi54IC0gMTAwLCB0aGlzLnNlbGYueSk7XHJcbiAgICAgICAgYnVsbGV0WydFbmVteUJ1bGxldCddLmJlbG9uZ0VuZW15ID0gdGhpcy5zZWxmO1xyXG4gICAgICAgIGJ1bGxldFsnRW5lbXlCdWxsZXQnXS5idWxsZXRUYXJnZXQgPSB0aGlzLnNsZWZUYWdSb2xlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuabtOaNouaUu+WHu+ebruagh1xyXG4gICAgICog5aaC5p6c5b2T5YmN5pS75Ye755qE5Li76KeS5q275LqG77yM5pWM5Lq65Lya5pS75Ye75Y+m5LiA5Liq55uu5qCHXHJcbiAgICAqL1xyXG4gICAgcmVwbGFjZVRhcmdldCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAoIXRoaXMuc2xlZlRhZ1JvbGVbJ1JvbGUnXS5yb2xlRGVhdGgpIHtcclxuICAgICAgICAgICAgLy8g5pu05o2i55uu5qCHXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNsZWZUYWdSb2xlLm5hbWUgPT09ICdyb2xlXzAxJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zbGVmVGFnUm9sZSA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlXzAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50YWdIZWFsdGggPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMi5nZXRDaGlsZEJ5TmFtZSgnaGVhbHRoJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5zbGVmVGFnUm9sZS5uYW1lID09PSAncm9sZV8wMicpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2xlZlRhZ1JvbGUgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMTtcclxuICAgICAgICAgICAgICAgIHRoaXMudGFnSGVhbHRoID0gdGhpcy5tYWluU2NlbmVDb250cm9sLnJvbGVfMDEuZ2V0Q2hpbGRCeU5hbWUoJ2hlYWx0aCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuaSreaUvumAn+W6puebuOWvueaUu+WHu+mAn+W6pui/m+ihjOiwg+aVtFxyXG4gICAgICog5b2T5pKt5pS+6Ze06ZqU5L2O5LqONTAw5ZCO6L+b6KGM6LCD5pW0XHJcbiAgICAqL1xyXG4gICAgcGxheVNwZWVkQWRqdXN0KCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOaSreaUvumAn+W6puiwg+aVtFxyXG4gICAgICAgIGxldCBwbGF5U3BlZWQ7XHJcbiAgICAgICAgaWYgKCg1MDAgLSB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrU3BlZWQpIC8gNTAwID4gMCkge1xyXG4gICAgICAgICAgICBwbGF5U3BlZWQgPSAxICsgKDUwMCAtIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tTcGVlZCkgLyA1MDA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcGxheVNwZWVkID0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5YmFja1JhdGUocGxheVNwZWVkKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirmlYzkurrmrbvkuqHml7bnmoTooYzkuLpcclxuICAgICAqIOWFs+mXreaVjOS6uumihOitplxyXG4gICAgICog5bm25LiU54iG54K4XHJcbiAgICAqL1xyXG4gICAgZW5lbXlEZWF0aCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1haW5TY2VuZUNvbnRyb2wucm9sZV8wMVsnUm9sZSddLnJvbGVfV2FybmluZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubWFpblNjZW5lQ29udHJvbC5yb2xlXzAyWydSb2xlJ10ucm9sZV9XYXJuaW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICBpZiAodGhpcy5lbmVteVR5cGUgPT09ICdpbmZpZ2h0aW5nJykge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLmV4cGxvZGVBbmkodGhpcy5zZWxmU2NlbmUsIHRoaXMuc2VsZi54LCB0aGlzLnNlbGYueSwgJ2luZmlnaHRpbmcnLCAxNSwgMTAwKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLmV4cGxvZGVBbmkodGhpcy5zZWxmU2NlbmUsIHRoaXMuc2VsZi54LCB0aGlzLnNlbGYueSwgJ3JhbmdlJywgMTUsIDEwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOS4u+inkuWFqOmDqOatu+S6oeWImeWBnOatouenu+WKqFxyXG4gICAgICAgIGlmICh0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLmdhbWVPdmVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOWmguaenOayoeacieebruagh+WImeS7gOS5iOmDveS4jeaJp+ihjFxyXG4gICAgICAgIGlmICh0aGlzLnNsZWZUYWdSb2xlID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOihgOmHj+S9juS6jjDliJnmrbvkuqEs5bm25LiU5YWz6Zet5Li76KeS5Y+R5bCE5a2Q5by56aKE6K2mLOW5tuS4lOWBnOatouS4i+mdouihjOS4ulxyXG4gICAgICAgIGlmICh0aGlzLmVuZW15UHJvcGVydHkuYmxvb2QgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlEZWF0aCgpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyDlsZ7mgKflrp7ml7bliLfmlrBcclxuICAgICAgICB0aGlzLmVuZW15UHJvcGVydHlVcGRhdGUoKTtcclxuXHJcbiAgICAgICAgLy/liKTmlq3ov5nkuKrmlYzkurrmmK/kuI3mmK/ov5znqIvmlLvlh7vvvIzov5znqIvmlLvlh7vnmoTmlYzkurrmmoLml7bkuI3kvJrnp7vliqgs5Lya5Li75Yqo5Y+R5bCE5a2Q5by56L+b6KGM5pS75Ye7XHJcbiAgICAgICAgaWYgKHRoaXMuZW5lbXlUeXBlID09PSAncmFuZ2UnKSB7XHJcbiAgICAgICAgICAgIC8vIOi/nOeoi+enu+WKqFxyXG4gICAgICAgICAgICB0aGlzLnJhbmdlRW5lbXlNb3ZlKCk7XHJcbiAgICAgICAgICAgIC8vIOWIsOi+vuWvueixoeS9jee9ruWQjuW8gOWQr+aUu+WHu+W8gOWFs+i/m+ihjOaUu+WHu++8jOaUu+WHu+mAn+W6puS+neeFp+aXtumXtOmXtOmalOiAjOWumlxyXG4gICAgICAgICAgICAvLyDmraTml7bnp7vliqjpgJ/luqbkuLrpm7ZcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VYID0gTWF0aC5hYnModGhpcy5zZWxmLnggLSB0aGlzLmF0dGFja1gpO1xyXG4gICAgICAgICAgICBsZXQgZGlmZmVyZW5jZVkgPSBNYXRoLmFicyh0aGlzLnNlbGYueSAtIHRoaXMuYXR0YWNrWSk7XHJcbiAgICAgICAgICAgIGlmIChkaWZmZXJlbmNlWCA8IDEwICYmIGRpZmZlcmVuY2VZIDwgMTApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucm9sZV8wMVsnUm9sZSddLnJvbGVfV2FybmluZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJvbGVfMDJbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSAwO1xyXG4gICAgICAgICAgICAgICAgbGV0IG5vd1RpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5vd1RpbWUgLSB0aGlzLnJlY29yZFRpbWUgPiB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrU3BlZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29yZFRpbWUgPSBub3dUaW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIOihgOmHj+WIpOaWre+8jOebruagh+atu+S6oeWQju+8jOS8muabtOaNouebruagh1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNsZWZUYWdSb2xlWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5ibG9vZCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g562J5LiK5LiA5Liq5Yqo55S75pKt5pS+5a6M5q+VXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ucGxheSgnYXR0YWNrJywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXlTcGVlZEFkanVzdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVwbGFjZVRhcmdldCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5lbmVteVR5cGUgPT09ICdpbmZpZ2h0aW5nJykge1xyXG4gICAgICAgICAgICAvLyDov5HmiJjnp7vliqhcclxuICAgICAgICAgICAgdGhpcy5pbmZpZ2h0aW5nRW5lbXlNb3ZlKCk7XHJcbiAgICAgICAgICAgIC8vIOWIsOi+vuWvueixoeS9jee9ruWQjuW8gOWQr+aUu+WHu+W8gOWFs+i/m+ihjOaUu+WHu++8jOaUu+WHu+mAn+W6puS+neeFp+aXtumXtOmXtOmalOiAjOWumlxyXG4gICAgICAgICAgICAvLyDmraTml7bnp7vliqjpgJ/luqbkuLrpm7ZcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VYID0gTWF0aC5hYnModGhpcy5zZWxmLnggLSB0aGlzLmF0dGFja1gpO1xyXG4gICAgICAgICAgICBsZXQgZGlmZmVyZW5jZVkgPSBNYXRoLmFicyh0aGlzLnNlbGYueSAtIHRoaXMuYXR0YWNrWSk7XHJcbiAgICAgICAgICAgIGlmIChkaWZmZXJlbmNlWCA8IDEwMCAmJiBkaWZmZXJlbmNlWSA8IDEwMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSAwO1xyXG4gICAgICAgICAgICAgICAgbGV0IG5vd1RpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5vd1RpbWUgLSB0aGlzLnJlY29yZFRpbWUgPiB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrU3BlZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29yZFRpbWUgPSBub3dUaW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIOihgOmHj+WIpOaWre+8jOebruagh+atu+S6oeWQju+8jOS8muabtOaNouebruagh1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNsZWZUYWdSb2xlWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5ibG9vZCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5za2VsZXRvbi5wbGF5KCdhdHRhY2snLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGxheVNwZWVkQWRqdXN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXBsYWNlVGFyZ2V0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSA0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcignZW5lbXknLCB0aGlzLnNlbGYpO1xyXG4gICAgfVxyXG5cclxufSIsImltcG9ydCBNYWluU2NlbmVDb250cm9sIGZyb20gXCIuL01haW5TY2VuZUNvbnRyb2xcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZW15QnVsbGV0IGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoq6Ieq5bexKi9cclxuICAgIHByaXZhdGUgc2VsZjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirkuLvop5LniLboioLngrkqL1xyXG4gICAgcHJpdmF0ZSByb2xlUGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuS4u+inkjEqL1xyXG4gICAgcHJpdmF0ZSByb2xlXzAxOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuS4u+inkjIqL1xyXG4gICAgcHJpdmF0ZSByb2xlXzAyOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuWcuuaZr+iEmuacrCovXHJcbiAgICBwcml2YXRlIG1haW5TY2VuZUNvbnRyb2w7XHJcbiAgICAvKirmgKrnianniLboioLngrkqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmlLvlh7vlipsqL1xyXG4gICAgcHJpdmF0ZSBhdHRhY2tWYWx1ZTogbnVtYmVyO1xyXG4gICAgLyoq55uu5qCH77yM6L+Z5Liq55uu5qCH5piv5pyA6L+R55qE6YKj5Liq5pWM5Lq6Ki9cclxuICAgIHByaXZhdGUgYnVsbGV0VGFyZ2V0OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuWtkOW8uemAn+W6piovXHJcbiAgICBwcml2YXRlIHNlbGZTcGVlZDogbnVtYmVyO1xyXG4gICAgLyoq6L+Z5Liq5a2Q5by55bGe5LqO5ZOq5Liq5Li76KeS5Y+R5bCE55qEKi9cclxuICAgIHByaXZhdGUgYmVsb25nRW5lbXk6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5bGe5oCn6aOY5a2X5o+Q56S6Ki9cclxuICAgIHByaXZhdGUgaGludFdvcmQ6IExheWEuUHJlZmFiO1xyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuICAgIC8qKuWIneWni+WMluS4gOS6m+WxnuaApyovXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmU7XHJcbiAgICAgICAgdGhpcy5tYWluU2NlbmVDb250cm9sID0gdGhpcy5zZWxmU2NlbmUuZ2V0Q29tcG9uZW50KE1haW5TY2VuZUNvbnRyb2wpO1xyXG4gICAgICAgIHRoaXMuZW5lbXlQYXJlbnQgPSB0aGlzLm1haW5TY2VuZUNvbnRyb2wuZW5lbXlQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5zZWxmU3BlZWQgPSAxNTtcclxuICAgICAgICB0aGlzLmF0dGFja1ZhbHVlID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWU7XHJcbiAgICAgICAgdGhpcy5yb2xlUGFyZW50ID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlUGFyZW50O1xyXG4gICAgICAgIHRoaXMuc2VsZlsnRW5lbXlCdWxsZXQnXSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5aeL57uI5pS75Ye75LiA5Liq5Li76KeS77yM5aaC5p6c6L+Z5Liq5Li76KeS5q275LqG77yMXHJcbiAgICAgKiDoi6Xmnpzov5nkuKrnm67moIfooqvnp7vpmaTkuobvvIzpgqPkuYjlj5Hlh7rljrvnmoTlrZDlvLnkvJrmsr/nnYDlkozmgKrniannmoTmlrnlkJHnu6fnu63np7vliqjliLA1MDBcclxuICAgICAqICovXHJcbiAgICBidWxsZXRNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmJ1bGxldFRhcmdldCAmJiB0aGlzLmJ1bGxldFRhcmdldC5wYXJlbnQpIHtcclxuICAgICAgICAgICAgLy8geCx55YiG5Yir55u45YeP5piv5Lik54K56L+e57q/5ZCR6YePXHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuYnVsbGV0VGFyZ2V0LnggLSB0aGlzLnNlbGYueCwgdGhpcy5idWxsZXRUYXJnZXQueSAtIHRoaXMuc2VsZi55KTtcclxuICAgICAgICAgICAgLy8g5b2S5LiA5YyW77yM5ZCR6YeP6ZW/5bqm5Li6MeOAglxyXG4gICAgICAgICAgICBwb2ludC5ub3JtYWxpemUoKTtcclxuICAgICAgICAgICAgLy/lkJHph4/nm7jliqBcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnggKz0gcG9pbnQueCAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYueSArPSBwb2ludC55ICogdGhpcy5zZWxmU3BlZWQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8g5rK/552A6Ieq5bex5ZKM5Y+R5bCE6Ieq5bex55qE5pWM5Lq65pa55ZCR56e75YqoXHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuc2VsZi54IC0gdGhpcy5iZWxvbmdFbmVteS54LCB0aGlzLnNlbGYueSAtIHRoaXMuYmVsb25nRW5lbXkueSk7XHJcbiAgICAgICAgICAgIC8vIOW9kuS4gOWMlu+8jOWQkemHj+mVv+W6puS4ujHjgIJcclxuICAgICAgICAgICAgcG9pbnQubm9ybWFsaXplKCk7XHJcbiAgICAgICAgICAgIC8v5ZCR6YeP55u45YqgXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi54ICs9IHBvaW50LnggKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnkgKz0gcG9pbnQueSAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirlrZDlvLnlr7nkuLvop5LpgKDmiJDkvKTlrrPnmoTlhazlvI9cclxuICAgICAgICog5pS75Ye75YqbLeS4u+inkumYsuW+oeWmguaenOWkp+S6jumbtuWImemAoOaIkOS8pOWus++8jOWQpuWImeS4jemAoOaIkOS8pOWus1xyXG4gICAgICAgKiDlubbkuJTmnInliqjnlLvmj5DnpLrmloflrZdcclxuICAgICAgKi9cclxuICAgIGJ1bGxldEF0dGFja1J1bGVzKHJvbGUpOiB2b2lkIHtcclxuICAgICAgICAvLyDmjonooYDmmL7npLrlgLzvvIzkvKTlrrPlsI/kuo7pm7bliJnmmL7npLowXHJcbiAgICAgICAgbGV0IG51bWJlclZhbHVlOiBudW1iZXI7XHJcbiAgICAgICAgLy8g5Lyk5a6zXHJcbiAgICAgICAgbGV0IGRhbWFnZSA9IHRoaXMuYXR0YWNrVmFsdWUgLSByb2xlWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5kZWZlbnNlO1xyXG4gICAgICAgIGlmIChkYW1hZ2UgPiAwKSB7XHJcbiAgICAgICAgICAgIHJvbGVbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmJsb29kIC09IGRhbWFnZTtcclxuICAgICAgICAgICAgbnVtYmVyVmFsdWUgPSBkYW1hZ2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbnVtYmVyVmFsdWUgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDnp7vliqhcclxuICAgICAgICB0aGlzLmJ1bGxldE1vdmUoKTtcclxuICAgICAgICAvLyDotoXlh7rmqKrlkJHojIPlm7TmtojlpLHvvIzkuIDoiKzkuI3kvJrop6blj5FcclxuICAgICAgICBpZiAodGhpcy5zZWxmLnggPiA3NTAgKyB0aGlzLnNlbGYud2lkdGggKyA1MCB8fCB0aGlzLnNlbGYueCA8IC10aGlzLnNlbGYud2lkdGgpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g56Kw5Yiw5Lu75L2V5LiA5Liq5Li76KeS77yM5a2Q5by55raI5aSx5oCq54mp5o6J6KGAXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJvbGVQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCByb2xlID0gdGhpcy5yb2xlUGFyZW50Ll9jaGlsZHJlbltpXSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VYID0gTWF0aC5hYnMocm9sZS54IC0gdGhpcy5zZWxmLngpO1xyXG4gICAgICAgICAgICBsZXQgZGlmZmVyZW5jZVkgPSBNYXRoLmFicyhyb2xlLnkgLSB0aGlzLnNlbGYueSk7XHJcbiAgICAgICAgICAgIGlmIChkaWZmZXJlbmNlWCA8IDEwICYmIGRpZmZlcmVuY2VZIDwgMTApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0QXR0YWNrUnVsZXMocm9sZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcblxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHRvb2xzIGZyb20gXCIuL1Rvb2xcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXhwbG9kZSBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5pe26Ze057q/Ki9cclxuICAgIHByaXZhdGUgdGltZXI6IG51bWJlcjtcclxuICAgIC8qKuinkuW6piovXHJcbiAgICBwcml2YXRlIGluaXRpYWxBbmdsZTogbnVtYmVyO1xyXG4gICAgLyoq5Yqg6YCf5bqmKi9cclxuICAgIHByaXZhdGUgYWNjZWxlcmF0ZWQ6IG51bWJlcjtcclxuICAgIC8qKuWfuuehgOmAn+W6piovXHJcbiAgICBwcml2YXRlIHJhbmRvbVNwZWVkOiBudW1iZXI7XHJcbiAgICAvKirnp7vliqjlvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBtb3ZlU3dpdGNoOiBib29sZWFuO1xyXG4gICAgLyoq6ZqP5py65aSn5bCPKi9cclxuICAgIHByaXZhdGUgc2NhbGU6IG51bWJlcjtcclxuICAgIC8qKumaj+acuua2iOWkseaXtumXtCovXHJcbiAgICBwcml2YXRlIHZpbnNoVGltZTogbnVtYmVyO1xyXG4gICAgLyoq6ZqP5py66LW35aeL6YCP5piO5bqmKi9cclxuICAgIHByaXZhdGUgc3RhcnRBbHBoYTogbnVtYmVyO1xyXG4gICAgLyoq6ZqP5py65peL6L2s5pa55ZCR5ZKM5YC8Ki9cclxuICAgIHByaXZhdGUgcm90YXRpb25EOiBudW1iZXI7XHJcbiAgICAvKirniIbngrjnsbvlnovvvIzmmK/ku4DkuYjpopzoibLjgIHlvaLmgIHnmoTns5bmnpzmiJbogIXmlYzkurrmiJbogIXmmK/ng5/pm77nrYkqL1xyXG4gICAgcHJpdmF0ZSBlZmZlY3RzVHlwZTogc3RyaW5nO1xyXG4gICAgLyoq5a2Q6IqC54K55Zu+54mHKi9cclxuICAgIHByaXZhdGUgaW1nOiBMYXlhLkltYWdlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy50aW1lciA9IDA7XHJcbiAgICAgICAgdGhpcy5hY2NlbGVyYXRlZCA9IDAuMTtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuaW1nID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdpbWcnKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIHRoaXMuc2VsZlsnRXhwbG9kZSddID0gdGhpcztcclxuICAgICAgICB0aGlzLnNlbGYucGl2b3RYID0gdGhpcy5zZWxmLndpZHRoIC8gMjtcclxuICAgICAgICB0aGlzLnNlbGYucGl2b3RZID0gdGhpcy5zZWxmLmhlaWdodCAvIDI7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yid5aeL5YyW5Y+C5pWwKi9cclxuICAgIGluaXRQcm9wZXJ0eSh0eXBlKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5lZmZlY3RzVHlwZSA9IHR5cGU7XHJcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ3N0YXJTaGluaW5nJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhclNoaW5pbmdQcm9wZXJ0eSgpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2Rpc2FwcGVhcic6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc2FwcGVhclByb3BlcnR5KCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnYXBwZWFyJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuYXBwZWFyUHJvcGVydHkoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdmaXJld29ya3MnOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5maXJld29ya3NQcm9wZXJ0eSgpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ3Ntb2tlRWZmZWN0cyc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNtb2tlUHJvcGVydHkoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdpbmZpZ2h0aW5nJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5maWdodGluZ1Byb3BlcnR5KCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAncmFuZ2UnOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5yYW5nZVByb3BlcnR5KCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAncmVkQ2FuZHlfX18nOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5yZWRDYW5keVByb3BlcnR5KCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnZ3JlZW5DYW5keV8nOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5ncmVlbkNhbmR5UHJvcGVydHkoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdibHVlQ2FuZHlfXyc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJsdWVDYW5keVByb3BlcnR5KCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAneWVsbG93Q2FuZHknOlxyXG4gICAgICAgICAgICAgICAgdGhpcy55ZWxsb3dDYW5keVByb3BlcnR5KCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmltZy5waXZvdFggPSB0aGlzLmltZy53aWR0aCAvIDI7XHJcbiAgICAgICAgdGhpcy5pbWcucGl2b3RZID0gdGhpcy5pbWcuaGVpZ2h0IC8gMjtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoq5pWM5Lq65ZKM57OW5p6c6YCa55SoKi9cclxuICAgIGNvbW1vbkVubWV5QW5kQ2FuZHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb3ZlU3dpdGNoID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJhbmRvbVNwZWVkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNSkgKyAxMDtcclxuICAgICAgICB0aGlzLmluaXRpYWxBbmdsZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDM2MCk7XHJcbiAgICAgICAgdGhpcy5zY2FsZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQpICsgNjtcclxuICAgICAgICB0aGlzLnNlbGYuc2NhbGVYID0gdGhpcy5zY2FsZSAvIDEwO1xyXG4gICAgICAgIHRoaXMuc2VsZi5zY2FsZVkgPSB0aGlzLnNjYWxlIC8gMTA7XHJcbiAgICAgICAgdGhpcy52aW5zaFRpbWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KSArIDI7XHJcbiAgICAgICAgdGhpcy5zdGFydEFscGhhID0gKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSArIDUpIC8gMTA7XHJcbiAgICAgICAgdGhpcy5zZWxmLmFscGhhID0gdGhpcy5zdGFydEFscGhhO1xyXG4gICAgICAgIHRoaXMucm90YXRpb25EID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMikgPT09IDEgPyAtMjAgOiAyMDtcclxuICAgIH1cclxuICAgIC8qKui/keaImOaVjOS6uueIhueCuOWxnuaApyovXHJcbiAgICBpbmZpZ2h0aW5nUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jb21tb25Fbm1leUFuZENhbmR5KCk7XHJcbiAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv55m96Imy5Y2V5YWDLnBuZyc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6L+c56iL5pWM5Lq654iG54K45bGe5oCnKi9cclxuICAgIHJhbmdlUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jb21tb25Fbm1leUFuZENhbmR5KCk7XHJcbiAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv6buR6Imy5Y2V5YWDLnBuZyc7XHJcbiAgICB9XHJcbiAgICAvKirnuqLoibLns5bmnpwqL1xyXG4gICAgcmVkQ2FuZHlQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmNvbW1vbkVubWV5QW5kQ2FuZHkoKTtcclxuICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/nuqLoibLljZXlhYMucG5nJztcclxuICAgIH1cclxuICAgIC8qKum7hOiJsuezluaenCovXHJcbiAgICB5ZWxsb3dDYW5keVByb3BlcnR5KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29tbW9uRW5tZXlBbmRDYW5keSgpO1xyXG4gICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+m7hOiJsuWNleWFgy5wbmcnO1xyXG4gICAgfVxyXG4gICAgLyoq6JOd6Imy57OW5p6cKi9cclxuICAgIGJsdWVDYW5keVByb3BlcnR5KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29tbW9uRW5tZXlBbmRDYW5keSgpO1xyXG4gICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+iTneiJsuWNleWFgy5wbmcnO1xyXG4gICAgfVxyXG4gICAgLyoq6JOd6Imy57OW5p6cKi9cclxuICAgIGdyZWVuQ2FuZHlQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmNvbW1vbkVubWV5QW5kQ2FuZHkoKTtcclxuICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/nu7/oibLljZXlhYMucG5nJztcclxuICAgIH1cclxuICAgIC8qKuaZrumAmueIhueCuOenu+WKqOinhOWImVxyXG4gICAgKiDniIbngrhcclxuICAgICog5YeP6YCfXHJcbiAgICAqIOWBnOeVmeWcqOWcsOS4ilxyXG4gICAgKiDmtojlpLFcclxuICAgKi9cclxuICAgIGNvbW1vbkV4cGxvc2lvbigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmFjY2VsZXJhdGVkICs9IDAuMztcclxuICAgICAgICBpZiAodGhpcy50aW1lciA+IDAgJiYgdGhpcy50aW1lciA8PSA1KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29tbW9uU3BlZWRYWUJ5QW5nbGUodGhpcy5pbml0aWFsQW5nbGUsIHRoaXMucmFuZG9tU3BlZWQpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lciA+IDUgJiYgdGhpcy50aW1lciA8IDE1KSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5hbHBoYSAtPSAwLjAxO1xyXG4gICAgICAgICAgICB0aGlzLmNvbW1vblNwZWVkWFlCeUFuZ2xlKHRoaXMuaW5pdGlhbEFuZ2xlLCB0aGlzLnJhbmRvbVNwZWVkKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGltZXIgPj0gMTUgJiYgdGhpcy50aW1lciA8IDE3KSB7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVyID49IDE3KSB7XHJcbiAgICAgICAgICAgIHRoaXMudmluc2hUaW1lIC09IDAuMTtcclxuICAgICAgICAgICAgaWYgKHRoaXMudmluc2hUaW1lIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirng5/oirHniIbngrjlsZ7mgKcqL1xyXG4gICAgZmlyZXdvcmtzUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb3ZlU3dpdGNoID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJhbmRvbVNwZWVkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTUpICsgMjtcclxuICAgICAgICB0aGlzLmluaXRpYWxBbmdsZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDM2MCk7XHJcbiAgICAgICAgdGhpcy5zY2FsZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDgpICsgNDtcclxuICAgICAgICB0aGlzLnNlbGYuc2NhbGVYID0gdGhpcy5zY2FsZSAvIDEwO1xyXG4gICAgICAgIHRoaXMuc2VsZi5zY2FsZVkgPSB0aGlzLnNjYWxlIC8gMTA7XHJcbiAgICAgICAgdGhpcy52aW5zaFRpbWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KSArIDI7XHJcbiAgICAgICAgdGhpcy5zdGFydEFscGhhID0gMTtcclxuICAgICAgICB0aGlzLnNlbGYuYWxwaGEgPSB0aGlzLnN0YXJ0QWxwaGE7XHJcbiAgICAgICAgdGhpcy5yb3RhdGlvbkQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKSA9PT0gMSA/IC0xMCA6IDEwO1xyXG4gICAgICAgIC8vIOWbvueJh1xyXG4gICAgICAgIGxldCBudW1iZXIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA3KSArIDE7XHJcbiAgICAgICAgc3dpdGNoIChudW1iZXIpIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv5pif5pifMS5wbmcnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+aYn+aYnzIucG5nJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDM6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/mmJ/mmJ8zLnBuZyc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv5pif5pifNC5wbmcnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgNTpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+aYn+aYnzUucG5nJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDY6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/mmJ/mmJ82LnBuZyc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA3OlxyXG4gICAgICAgICAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv5pif5pifNy5wbmcnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq54Of6Iqx54iG54K456e75YqoXHJcbiAgICAqIOeIhueCuFxyXG4gICAgKiDlh4/pgJ9cclxuICAgICog5raI5aSxXHJcbiAgICovXHJcbiAgICBmaXJld29ya3NFeHBsb3Npb24oKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbWcucm90YXRpb24gKz0gdGhpcy5yb3RhdGlvbkQ7XHJcbiAgICAgICAgdGhpcy5hY2NlbGVyYXRlZCArPSAwLjE7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZXIgPiAwICYmIHRoaXMudGltZXIgPD0gMTUpIHtcclxuICAgICAgICAgICAgdGhpcy5jb21tb25TcGVlZFhZQnlBbmdsZSh0aGlzLmluaXRpYWxBbmdsZSwgdGhpcy5yYW5kb21TcGVlZCArIDUpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lciA+IDE1ICYmIHRoaXMudGltZXIgPCAxOCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbW1vblNwZWVkWFlCeUFuZ2xlKHRoaXMuaW5pdGlhbEFuZ2xlLCB0aGlzLnJhbmRvbVNwZWVkIC0gNSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVyID49IDE4KSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKueDn+WbseeDn+mbvuWxnuaApyovXHJcbiAgICBzbW9rZVByb3BlcnR5KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubW92ZVN3aXRjaCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5yYW5kb21TcGVlZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSArIDU7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsQW5nbGUgPSA5MDtcclxuICAgICAgICB0aGlzLnNjYWxlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNCkgKyAyO1xyXG4gICAgICAgIHRoaXMuc2VsZi5zY2FsZSh0aGlzLnNjYWxlIC8gMTAsIHRoaXMuc2NhbGUgLyAxMCk7XHJcbiAgICAgICAgdGhpcy52aW5zaFRpbWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KSArIDI7XHJcbiAgICAgICAgdGhpcy5zdGFydEFscGhhID0gMTtcclxuICAgICAgICB0aGlzLnNlbGYuYWxwaGEgPSB0aGlzLnN0YXJ0QWxwaGE7XHJcbiAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv55m96Imy5Y2V5YWDLnBuZyc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq54Of5Zux54Of6Zu+54m55pWI56e75YqoXHJcbiAgICAqIOWHuueOsFxyXG4gICAgKiDkuIrnp7tcclxuICAgICog5raI5aSxXHJcbiAgICovXHJcbiAgICBzbW9rZUVmZmVjdHMoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZXIgPiAwICYmIHRoaXMudGltZXIgPD0gMTApIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnNjYWxlWCArPSAwLjA4O1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuc2NhbGVZICs9IDAuMDg7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi55IC09IDAuMDE7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVyID4gMTAgJiYgdGhpcy50aW1lciA8IDQwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi55IC09IDI7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVyID4gNDApIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnkgLT0gMjtcclxuICAgICAgICAgICAgdGhpcy5zdGFydEFscGhhIC09IDAuMDI1O1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zdGFydEFscGhhIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirlj5jouqvmtojlpLHliqjnlLvlsZ7mgKcqL1xyXG4gICAgZGlzYXBwZWFyUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb3ZlU3dpdGNoID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJhbmRvbVNwZWVkID0gTWF0aC5yYW5kb20oKSAqIDIgKyAyO1xyXG4gICAgICAgIHRoaXMuaW5pdGlhbEFuZ2xlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzYwKTtcclxuICAgICAgICB0aGlzLnNjYWxlID0gNztcclxuICAgICAgICB0aGlzLnNlbGYuc2NhbGUodGhpcy5zY2FsZSAvIDEwLCB0aGlzLnNjYWxlIC8gMTApO1xyXG4gICAgICAgIHRoaXMudmluc2hUaW1lID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNSkgKyAyO1xyXG4gICAgICAgIHRoaXMuc3RhcnRBbHBoYSA9IChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA2KSArIDQpIC8gMTA7XHJcbiAgICAgICAgdGhpcy5zZWxmLmFscGhhID0gdGhpcy5zdGFydEFscGhhO1xyXG4gICAgICAgIHRoaXMucm90YXRpb25EID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMikgPT09IDEgPyAtNSA6IDU7XHJcbiAgICAgICAgLy8g5Zu+54mHXHJcbiAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv55m96Imy5Y2V5YWDLnBuZyc7XHJcbiAgICAgICAgdGhpcy5pbWcucm90YXRpb24gPSB0aGlzLmluaXRpYWxBbmdsZSAtIDkwO1xyXG4gICAgICAgIGxldCBudW1iZXIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKTtcclxuICAgICAgICBzd2l0Y2ggKG51bWJlcikge1xyXG4gICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/nmb3oibLljZXlhYMucG5nJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/nmb3oibLljZXlhYNfMDIucG5nJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWPmOi6q+a2iOWkseWKqOeUu+enu+WKqCovXHJcbiAgICBkaXNhcHBlYXJFZmZlY3RzKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYWNjZWxlcmF0ZWQgKz0gMC4wMTtcclxuICAgICAgICBpZiAodGhpcy50aW1lciA+IDAgJiYgdGhpcy50aW1lciA8PSAxNSkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbW1vblNwZWVkWFlCeUFuZ2xlKHRoaXMuaW5pdGlhbEFuZ2xlLCB0aGlzLnJhbmRvbVNwZWVkKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGltZXIgPiAxNSAmJiB0aGlzLnRpbWVyIDwgMjUpIHtcclxuICAgICAgICAgICAgdGhpcy5jb21tb25TcGVlZFhZQnlBbmdsZSh0aGlzLmluaXRpYWxBbmdsZSwgdGhpcy5yYW5kb21TcGVlZCAtIDIpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lciA+PSAyNSkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuYWxwaGEgLT0gMC4wMjtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZi5hbHBoYSA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWHuueOsOWKqOeUu+WxnuaApyovXHJcbiAgICBhcHBlYXJQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1vdmVTd2l0Y2ggPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucmFuZG9tU3BlZWQgPSBNYXRoLnJhbmRvbSgpICogMiArIDI7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsQW5nbGUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzNjApO1xyXG4gICAgICAgIHRoaXMuc2NhbGUgPSA3O1xyXG4gICAgICAgIHRoaXMuc2VsZi5zY2FsZSh0aGlzLnNjYWxlIC8gMTAsIHRoaXMuc2NhbGUgLyAxMCk7XHJcbiAgICAgICAgdGhpcy52aW5zaFRpbWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KSArIDI7XHJcbiAgICAgICAgdGhpcy5zdGFydEFscGhhID0gKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDYpICsgNCkgLyAxMDtcclxuICAgICAgICB0aGlzLnNlbGYuYWxwaGEgPSB0aGlzLnN0YXJ0QWxwaGE7XHJcbiAgICAgICAgdGhpcy5yb3RhdGlvbkQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKSA9PT0gMSA/IC01IDogNTtcclxuICAgICAgICAvLyDlm77niYdcclxuICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/nmb3oibLljZXlhYMucG5nJztcclxuICAgICAgICB0aGlzLmltZy5yb3RhdGlvbiA9IHRoaXMuaW5pdGlhbEFuZ2xlIC0gOTA7XHJcbiAgICAgICAgbGV0IG51bWJlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpO1xyXG4gICAgICAgIHN3aXRjaCAobnVtYmVyKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+eZveiJsuWNleWFgy5wbmcnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+eZveiJsuWNleWFg18wMi5wbmcnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Ye6546w5Yqo55S756e75YqoKi9cclxuICAgIGFwcGVhckVmZmVjdHMoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5hY2NlbGVyYXRlZCArPSAwLjAxO1xyXG4gICAgICAgIGlmICh0aGlzLnRpbWVyID4gMCAmJiB0aGlzLnRpbWVyIDw9IDIwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29tbW9uU3BlZWRYWUJ5QW5nbGUodGhpcy5pbml0aWFsQW5nbGUsIHRoaXMucmFuZG9tU3BlZWQpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lciA+IDIwICYmIHRoaXMudGltZXIgPCAzMCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbW1vblNwZWVkWFlCeUFuZ2xlKHRoaXMuaW5pdGlhbEFuZ2xlLCB0aGlzLnJhbmRvbVNwZWVkIC0gMik7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVyID49IDMwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5hbHBoYSAtPSAwLjAyO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zZWxmLmFscGhhIDw9IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5pif5pif6Zeq54OB5Yqo55S75bGe5oCnKi9cclxuICAgIHN0YXJTaGluaW5nUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb3ZlU3dpdGNoID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJhbmRvbVNwZWVkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTUpICsgMjtcclxuICAgICAgICB0aGlzLnNjYWxlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogOCkgKyA0O1xyXG4gICAgICAgIHRoaXMuc2VsZi5zY2FsZSh0aGlzLnNjYWxlIC8gMTAsIHRoaXMuc2NhbGUgLyAxMCk7XHJcbiAgICAgICAgdGhpcy5zdGFydEFscGhhID0gMDtcclxuICAgICAgICB0aGlzLnNlbGYuYWxwaGEgPSB0aGlzLnN0YXJ0QWxwaGE7XHJcbiAgICAgICAgdGhpcy5yb3RhdGlvbkQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKSA9PT0gMSA/IC01IDogNTtcclxuICAgICAgICAvLyDlm77niYdcclxuICAgICAgICBsZXQgbnVtYmVyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNykgKyAxO1xyXG4gICAgICAgIHN3aXRjaCAobnVtYmVyKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+aYn+aYnzEucG5nJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/mmJ/mmJ8yLnBuZyc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv5pif5pifMy5wbmcnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgNDpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+aYn+aYnzQucG5nJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltZy5za2luID0gJ2NhbmR5L+eJueaViC/mmJ/mmJ81LnBuZyc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA2OlxyXG4gICAgICAgICAgICAgICAgdGhpcy5pbWcuc2tpbiA9ICdjYW5keS/nibnmlYgv5pif5pifNi5wbmcnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgNzpcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1nLnNraW4gPSAnY2FuZHkv54m55pWIL+aYn+aYnzcucG5nJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuaYn+aYn+mXqueDgeWKqOeUuyovXHJcbiAgICBzdGFyU2hpbmluZ0VmZmVjdHMoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZXIgPiAwICYmIHRoaXMudGltZXIgPD0gMTUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLmFscGhhICs9IDAuMTtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnJvdGF0aW9uICs9IHRoaXMucm90YXRpb25EO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuc2NhbGVYICs9IDAuMDE7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5zY2FsZVkgKz0gMC4wMTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGltZXIgPiAxNSAmJiB0aGlzLnRpbWVyIDwgMjUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnJvdGF0aW9uICs9IHRoaXMucm90YXRpb25EO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lciA+PSAyNSkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucm90YXRpb24gLT0gdGhpcy5yb3RhdGlvbkQ7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5hbHBoYSAtPSAwLjAxNTtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnNjYWxlWCAtPSAwLjAxO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuc2NhbGVZIC09IDAuMDE7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGYuYWxwaGEgPD0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirnp7vliqjop4TliJkqL1xyXG4gICAgbW92ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5lZmZlY3RzVHlwZSA9PT0gJ2ZpcmV3b3JrcycpIHtcclxuICAgICAgICAgICAgdGhpcy5maXJld29ya3NFeHBsb3Npb24oKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZWZmZWN0c1R5cGUgPT09ICdzbW9rZUVmZmVjdHMnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc21va2VFZmZlY3RzKCk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmVmZmVjdHNUeXBlID09PSAnZGlzYXBwZWFyJykge1xyXG4gICAgICAgICAgICB0aGlzLmRpc2FwcGVhckVmZmVjdHMoKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZWZmZWN0c1R5cGUgPT09ICdhcHBlYXInKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwZWFyRWZmZWN0cygpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5lZmZlY3RzVHlwZSA9PT0gJ3N0YXJTaGluaW5nJykge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXJTaGluaW5nRWZmZWN0cygpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29tbW9uRXhwbG9zaW9uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAqIOmAmueUqOWtkOW8ueenu+WKqO+8jOaMieWNleS4gOinkuW6puenu+WKqFxyXG4gICAqIEBwYXJhbSBhbmdsZSDop5LluqZcclxuICAgKiAgQHBhcmFtIGJhc2VkU3BlZWQg5Z+656GA6YCf5bqmXHJcbiAgICovXHJcbiAgICBjb21tb25TcGVlZFhZQnlBbmdsZShhbmdsZSwgc3BlZWQpIHtcclxuICAgICAgICB0aGlzLnNlbGYueCArPSB0b29scy5zcGVlZFhZQnlBbmdsZShhbmdsZSwgc3BlZWQgKyB0aGlzLmFjY2VsZXJhdGVkKS54O1xyXG4gICAgICAgIHRoaXMuc2VsZi55ICs9IHRvb2xzLnNwZWVkWFlCeUFuZ2xlKGFuZ2xlLCBzcGVlZCArIHRoaXMuYWNjZWxlcmF0ZWQpLnk7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMubW92ZVN3aXRjaCkge1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVyICs9IDE7XHJcbiAgICAgICAgICAgIHRoaXMubW92ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ2V4cGxvZGUnLCB0aGlzLnNlbGYpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGludFdvcmQgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiroh6rlt7EqL1xyXG4gICAgcHJpdmF0ZSBzZWxmOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaJgOWxnuWcuuaZryovXHJcbiAgICBwcml2YXRlIHNlbGZTY2VuZTogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirlop7liqDlsZ7mgKflsZ7mgKfmoIfnrb4qL1xyXG4gICAgcHJpdmF0ZSBwcm9wZXJ0eVR5cGU6IExheWEuRm9udENsaXA7XHJcbiAgICAvKirlop7liqDlsZ7mgKflgLzlsZ7mgKflgLwqL1xyXG4gICAgcHJpdmF0ZSBhZGROdW1iZXI6IExheWEuRm9udENsaXA7XHJcbiAgICAvKirlh4/lsJHlsZ7mgKflgLzlsZ7mgKflgLwqL1xyXG4gICAgcHJpdmF0ZSBzdWJOdW1iZXI6IExheWEuRm9udENsaXA7XHJcbiAgICAvKirliIbmlbDlop7liqAqL1xyXG4gICAgcHJpdmF0ZSBhZGRTY29yZTogTGF5YS5Gb250Q2xpcDtcclxuICAgIC8qKuWIhuaVsOiKgueCuSovXHJcbiAgICBwcml2YXRlIHNjb3JlTGFiZWw6IExheWEuRm9udENsaXA7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZlsnSGludFdvcmQnXSA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmU7XHJcbiAgICAgICAgdGhpcy5zZWxmLmFscGhhID0gMDsvL+WHuueOsOeahOaXtuWAmemakOi6q++8jOaWueS+v+WBmuWKqOeUu1xyXG4gICAgICAgIHRoaXMuc2VsZi5waXZvdFggPSB0aGlzLnNlbGYud2lkdGggLyAyO1xyXG5cclxuICAgICAgICB0aGlzLnByb3BlcnR5VHlwZSA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgncHJvcGVydHlUeXBlJykgYXMgTGF5YS5Gb250Q2xpcDtcclxuICAgICAgICB0aGlzLmFkZE51bWJlciA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnYWRkTnVtYmVyJykgYXMgTGF5YS5Gb250Q2xpcDtcclxuICAgICAgICB0aGlzLnN1Yk51bWJlciA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnc3ViTnVtYmVyJykgYXMgTGF5YS5Gb250Q2xpcDtcclxuICAgICAgICB0aGlzLmFkZFNjb3JlID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdhZGRTY29yZScpIGFzIExheWEuRm9udENsaXA7XHJcbiAgICAgICAgLy8g5byA5aeL5YWo5piv56m6XHJcbiAgICAgICAgdGhpcy5wcm9wZXJ0eVR5cGUudmFsdWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuYWRkTnVtYmVyLnZhbHVlID0gbnVsbDtcclxuICAgICAgICB0aGlzLnN1Yk51bWJlci52YWx1ZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5hZGRTY29yZS52YWx1ZSA9IG51bGw7XHJcblxyXG4gICAgICAgIHRoaXMuc2NvcmVMYWJlbCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc2NvcmVMYWJlbDtcclxuICAgIH1cclxuXHJcbiAgICAvKirpgJrov4fkvKDlhaXnmoTlj4LmlbDmnaXvvIzorr7nva7lsZ7mgKflm77niYflrZfnmoTmoLzlvI9cclxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eVR5cGUg5bGe5oCn57G75Z6LXHJcbiAgICAgKiBAcGFyYW0gbnVtYmVyVmFsdWUg5bGe5oCn5YC8XHJcbiAgICAgKiAqL1xyXG4gICAgaW5pdFByb3BlcnR5KHByb3BlcnR5VHlwZTogc3RyaW5nLCBudW1iZXJWYWx1ZTogbnVtYmVyKTogdm9pZCB7XHJcblxyXG4gICAgICAgIC8vIOS9jee9ruWBj+enu++8jOWboOS4uuWtl+espumVv+W6puS4jeS4gOagt1xyXG4gICAgICAgIHN3aXRjaCAocHJvcGVydHlUeXBlKSB7XHJcbiAgICAgICAgICAgIC8vIOWxnuaAp+WinuWKoFxyXG4gICAgICAgICAgICBjYXNlICflhazpuKHpgJ/luqYnOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wZXJ0eVR5cGUudmFsdWUgPSAn5YWs6bih6YCf5bqmJztcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlUeXBlLnggLT0gNDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE51bWJlci52YWx1ZSA9IFwiK1wiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5TW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ+aUu+WHu+mHjCc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5VHlwZS52YWx1ZSA9ICfmlLvlh7vph4wnO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wZXJ0eVR5cGUueCAtPSAyMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkTnVtYmVyLnggLT0gMjA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE51bWJlci52YWx1ZSA9IFwiK1wiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5TW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ+eUn+WRvSc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5VHlwZS52YWx1ZSA9ICfnlJ/lkb0nO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGROdW1iZXIueCAtPSA0MDtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkTnVtYmVyLnZhbHVlID0gXCIrXCIgKyBudW1iZXJWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn6Ziy5b6h5YqbJzpcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlUeXBlLnZhbHVlID0gJ+mYsuW+oeWKmyc7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5VHlwZS54IC09IDIwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGROdW1iZXIueCAtPSAyMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkTnVtYmVyLnZhbHVlID0gXCIrXCIgKyBudW1iZXJWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIC8vIOWxnuaAp+WHj+WwkVxyXG4gICAgICAgICAgICBjYXNlICflh4/lsJHlhazpuKHpgJ/luqYnOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wZXJ0eVR5cGUudmFsdWUgPSAn5YWs6bih6YCf5bqmJztcclxuICAgICAgICAgICAgICAgIHRoaXMuc3ViTnVtYmVyLnggLT0gNDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN1Yk51bWJlci52YWx1ZSA9IFwiLVwiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5TW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ+WHj+WwkeaUu+WHu+mHjCc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5VHlwZS52YWx1ZSA9ICfmlLvlh7vph4wnO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wZXJ0eVR5cGUueCAtPSAyMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3ViTnVtYmVyLnggLT0gMjA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN1Yk51bWJlci52YWx1ZSA9IFwiLVwiICsgbnVtYmVyVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5TW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ+WHj+WwkeeUn+WRvSc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5VHlwZS52YWx1ZSA9ICfnlJ/lkb0nO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdWJOdW1iZXIueCAtPSA0MDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3ViTnVtYmVyLnZhbHVlID0gXCItXCIgKyBudW1iZXJWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn5YeP5bCR6Ziy5b6h5YqbJzpcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlUeXBlLnZhbHVlID0gJ+mYsuW+oeWKmyc7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BlcnR5VHlwZS54IC09IDIwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdWJOdW1iZXIueCAtPSAyMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3ViTnVtYmVyLnZhbHVlID0gXCItXCIgKyBudW1iZXJWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIC8vIOaVjOaIkeWHj+ihgFxyXG4gICAgICAgICAgICBjYXNlICfkuLvop5LmjonooYAnOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5zdWJOdW1iZXIueCAtPSA4MDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3ViTnVtYmVyLnZhbHVlID0gXCItXCIgKyBudW1iZXJWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcGVydHlNb3ZlKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ+aVjOS6uuaOieihgCc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN1Yk51bWJlci54IC09IDgwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdWJOdW1iZXIudmFsdWUgPSBcIi1cIiArIG51bWJlclZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wZXJ0eU1vdmUoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgLy8g5aKe5Yqg5YiG5pWwXHJcbiAgICAgICAgICAgIGNhc2UgJ+WinuWKoOWIhuaVsCc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFNjb3JlLnZhbHVlID0gXCIrXCIgKyBudW1iZXJWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkU2NvcmVNb3ZlKG51bWJlclZhbHVlKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWxnuaAp+mjmOWtl+WKqOeUu+aXtumXtOe6vyovXHJcbiAgICBwcm9wZXJ0eU1vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHRpbWVMaW5lID0gbmV3IExheWEuVGltZUxpbmU7XHJcbiAgICAgICAgdGltZUxpbmUuYWRkTGFiZWwoJ2FwcGVhcicsIDApLnRvKHRoaXMuc2VsZiwgeyB5OiB0aGlzLnNlbGYueSAtIDYwLCBhbHBoYTogMSB9LCAxMDAsIG51bGwsIDApXHJcbiAgICAgICAgICAgIC5hZGRMYWJlbCgncGF1c2UnLCAwKS50byh0aGlzLnNlbGYsIHsgeTogdGhpcy5zZWxmLnkgLSAxMjAgfSwgODAwLCBudWxsLCAwKVxyXG4gICAgICAgICAgICAuYWRkTGFiZWwoJ3ZhbmlzaCcsIDApLnRvKHRoaXMuc2VsZiwgeyB5OiB0aGlzLnNlbGYueSAtIDE1MCwgYWxwaGE6IDAgfSwgMTAwLCBudWxsLCAwKVxyXG4gICAgICAgIHRpbWVMaW5lLnBsYXkoJ2FwcGVhcicsIGZhbHNlKTtcclxuICAgICAgICB0aW1lTGluZS5vbihMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5aKe5Yqg5YiG5pWw5pe255qE5Yqo55S7Ki9cclxuICAgIGFkZFNjb3JlTW92ZShudW1iZXJWYWx1ZSk6IHZvaWQge1xyXG4gICAgICAgIC8vIOaKinNjb3JlTGFiZWznmoTlnZDmoIfovazmjaLmiJDlhajlsYDlnZDmoIdcclxuICAgICAgICBsZXQgc2NvcmVMYWJlbF9wID0gdGhpcy5zY29yZUxhYmVsLnBhcmVudCBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICBsZXQgc2NvcmVMYWJlbF9wX3AgPSBzY29yZUxhYmVsX3AucGFyZW50IGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIGxldCBzdGFnZVggPSB0aGlzLnNjb3JlTGFiZWwueCArIHNjb3JlTGFiZWxfcC54ICsgc2NvcmVMYWJlbF9wX3AueDtcclxuICAgICAgICBsZXQgc3RhZ2VZID0gdGhpcy5zY29yZUxhYmVsLnkgKyBzY29yZUxhYmVsX3AueSArIHNjb3JlTGFiZWxfcF9wLnk7XHJcblxyXG4gICAgICAgIGxldCB0aW1lTGluZSA9IG5ldyBMYXlhLlRpbWVMaW5lO1xyXG4gICAgICAgIHRpbWVMaW5lLmFkZExhYmVsKCdhcHBlYXInLCAwKS50byh0aGlzLnNlbGYsIHsgeTogdGhpcy5zZWxmLnkgLSA2MCwgYWxwaGE6IDEgfSwgMTAwLCBudWxsLCAwKVxyXG4gICAgICAgICAgICAuYWRkTGFiZWwoJ3BhdXNlJywgMCkudG8odGhpcy5zZWxmLCB7IHk6IHRoaXMuc2VsZi55IC0gMTIwIH0sIDYwMCwgbnVsbCwgMClcclxuICAgICAgICAgICAgLmFkZExhYmVsKCdtb3ZlVXAnLCAwKS50byh0aGlzLnNlbGYsIHsgeTogdGhpcy5zZWxmLnkgLSAxNTAsIGFscGhhOiAxIH0sIDEwMCwgbnVsbCwgMClcclxuICAgICAgICAgICAgLmFkZExhYmVsKCdtb3ZlVG8nLCAwKS50byh0aGlzLnNlbGYsIHsgc2NhbGVYOiAwLjUsIHNjYWxlWTogMC41LCByb3RhdGlvbjogLTM2MCwgeDogc3RhZ2VYLCB5OiBzdGFnZVksIGFscGhhOiAxIH0sIDYwMCwgTGF5YS5FYXNlLmN1YmljSW4sIDApXHJcbiAgICAgICAgICAgIC5hZGRMYWJlbCgndmFuaXNoJywgMCkudG8odGhpcy5zZWxmLCB7IHk6IHN0YWdlWSAtIDEwMCwgYWxwaGE6IDAgfSwgMTAwLCBMYXlhLkVhc2UuY3ViaWNJbiwgMClcclxuICAgICAgICB0aW1lTGluZS5wbGF5KCdhcHBlYXInLCBmYWxzZSk7XHJcbiAgICAgICAgdGltZUxpbmUub24oTGF5YS5FdmVudC5DT01QTEVURSwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB0aGlzLnNjb3JlTGFiZWwudmFsdWUgPSAoTnVtYmVyKHRoaXMuc2NvcmVMYWJlbC52YWx1ZSkgKyBudW1iZXJWYWx1ZSkudG9TdHJpbmcoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ2hpbnRXb3JkJywgdGhpcy5zZWxmKTtcclxuICAgIH1cclxufSIsImltcG9ydCBFbmVteSBmcm9tIFwiLi9FbmVteVwiO1xyXG5pbXBvcnQgQ2FuZHkgZnJvbSBcIi4vQ2FuZHlcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFpblNjZW5lQ29udHJvbCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpjYW5keSwgdGlwczpcIuezluaenFwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIGNhbmR5OiBMYXlhLlByZWZhYjtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpjYW5keVBhcmVudCwgdGlwczpcIuezluaenOeItuiKgueCuVwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBjYW5keVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6Y2FuZHlfRXhwbG9kZSwgdGlwczpcIuezluaenFwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIGNhbmR5X0V4cGxvZGU6IExheWEuUHJlZmFiO1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmNhbmR5X0V4cGxvZGVQYXJlbnQsIHRpcHM6XCLniIbngrjns5bmnpznmoTniLboioLngrlcIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgY2FuZHlfRXhwbG9kZVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6ZXhwbG9kZSwgdGlwczpcIuWItuS9nOeIhueCuOWKqOeUu+eahOmihOWItuS9k1wiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIGV4cGxvZGU6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpyb2xlUGFyZW50LCB0aXBzOlwi6KeS6Imy54i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIHJvbGVQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTplbmVteSwgdGlwczpcIuaVjOS6ulwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIGVuZW15OiBMYXlhLlByZWZhYjtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTplbmVteVBhcmVudCwgdGlwczpcIuaVjOS6uueItuiKgueCuVwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBlbmVteVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6ZW5lbXlCdWxsZXQsIHRpcHM6XCLmlYzkurrlrZDlvLnpooTliLbkvZNcIiwgdHlwZTpQcmVmYWJ9Ki9cclxuICAgIHB1YmxpYyBlbmVteUJ1bGxldDogTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmJhY2tncm91bmQsIHRpcHM6XCLog4zmma/lm75cIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgYmFja2dyb3VuZDogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnNwZWFrQm94UGFyZW50LCB0aXBzOlwi5a+56K+d5qGG54i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIHNwZWFrQm94UGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpzcGVha0JveCwgdGlwczpcIuWvueivneahhlwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIHNwZWFrQm94OiBMYXlhLlByZWZhYjtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6YnVsbGV0UGFyZW50LCB0aXBzOlwi5a2Q5by554i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJ1bGxldFBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6cm9sZUJ1bGxldCwgdGlwczpcIuWtkOW8uVwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIHJvbGVCdWxsZXQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpzY29yZUxhYmVsLCB0aXBzOuKAmOW+l+WIhuKAmSwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgc2NvcmVMYWJlbDogTGF5YS5Gb250Q2xpcDtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6aGludFdvcmQgLCB0aXBzOlwi5bGe5oCn6aOY5a2X5o+Q56S6XCIsIHR5cGU6UHJlZmFifSovXHJcbiAgICBwdWJsaWMgaGludFdvcmQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpyZXdhcmRXb3JkcyAsIHRpcHM6XCLlpZblirHmj5DnpLror61cIiwgdHlwZTpQcmVmYWJ9Ki9cclxuICAgIHB1YmxpYyByZXdhcmRXb3JkczogTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnRpbWVyICwgdGlwczpcIuiuoeaXtuWZqFwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyB0aW1lcjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirml7bpl7Tov5vluqbmnaEqL1xyXG4gICAgcHJpdmF0ZSB0aW1lU2NoZWR1bGU6IExheWEuUHJvZ3Jlc3NCYXI7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmRpc3BsYXlzICwgdGlwczpcIumZiOWIl+WPsFwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBkaXNwbGF5czogTGF5YS5JbWFnZTtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6b3BlcmF0aW5nICwgdGlwczpcIuaTjeS9nOiKgueCuVwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBvcGVyYXRpbmc6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTphc3NlbWJseSwgdGlwczpcIua1geawtOe6v1wiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBhc3NlbWJseTogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnJvbGVfMDEgLCB0aXBzOlwi5Li76KeSMVwiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyByb2xlXzAxOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpyb2xlXzAyICwgdGlwczpcIuS4u+inkjJcIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgcm9sZV8wMjogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnJlc3VyZ2VuY2UgLCB0aXBzOlwi5aSN5rS757un57ut55WM6Z2iXCIsIHR5cGU6UHJlZmFifSovXHJcbiAgICBwdWJsaWMgcmVzdXJnZW5jZTogTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnNldHRsZW1lbnQgLCB0aXBzOlwi57uT566XXCIsIHR5cGU6UHJlZmFifSovXHJcbiAgICBwdWJsaWMgc2V0dGxlbWVudDogTGF5YS5QcmVmYWI7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnN0YXJ0SW50ZXJmYWNlICwgdGlwczpcIuW8gOWni+a4uOaIj+eVjOmdolwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIHN0YXJ0SW50ZXJmYWNlOiBMYXlhLlByZWZhYjtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6cmFua2luZyAsIHRpcHM6XCLmjpLooYzmppznlYzpnaJcIiwgdHlwZTpQcmVmYWJ9Ki9cclxuICAgIHB1YmxpYyByYW5raW5nOiBMYXlhLlByZWZhYjtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6c2NvcmUgLCB0aXBzOlwi5YiG5pWw6IqC54K5XCIsIHR5cGU6UHJlZmFifSovXHJcbiAgICBwdWJsaWMgc2NvcmU6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKuS4pOS4quS4u+inkueahOWvueivneahhiovXHJcbiAgICBwcml2YXRlIHJvbGVfMDFzcGVhazogTGF5YS5TcHJpdGU7XHJcbiAgICBwcml2YXRlIHJvbGVfMDJzcGVhazogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoq5pWM5Lq65Ye6546w5byA5YWz77yM6L+Z5Liq5byA5YWz5q+P5qyh5byA5ZCv5ZCO77yM5LiA5qyh5oCn77yM6LWL5LiA5qyh5YC85Y+q6IO95Lqn55Sf5LiA5Liq5pWM5Lq6Ki9cclxuICAgIHByaXZhdGUgZW5lbXlBcHBlYXI6IGJvb2xlYW47XHJcbiAgICAvKirmgKrnianmlLvlh7vlr7nosaEs5Lmf5piv5LiK5Liq5ZCD57OW5p6c5a+56LGhLOS4gOasoeaAp++8jOi1i+S4gOasoeWAvOWPquiDveeUqOS4gOasoSovXHJcbiAgICBwcml2YXRlIGVuZW15VGFnUm9sZTogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmlYzkurrkuqfnlJ/nmoTmgLvkuKrmlbDorrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBlbmVteUNvdW50OiBudW1iZXI7XHJcblxyXG4gICAgLyoq57OW5p6c5Lqn55Sf55qE5pe26Ze06Ze06ZqUKi9cclxuICAgIHByaXZhdGUgY2FuZHlfaW50ZXJ2YWw6IG51bWJlcjtcclxuICAgIC8qKuW9k+WJjeaXtumXtOiusOW9lSovXHJcbiAgICBwcml2YXRlIGNyZWF0VGltZTogbnVtYmVyO1xyXG4gICAgLyoq55Sf5Lqn5byA5YWzKi9cclxuICAgIHByaXZhdGUgY3JlYXRPbk9mZjogYm9vbGVhbjtcclxuICAgIC8qKuezluaenOWIsOeisOWIsOaEn+W6lOijhee9ruaXtu+8jOWQjeWtl+ijhei/m+i/meS4quaVsOe7hCovXHJcbiAgICBwcml2YXRlIG5hbWVBcnI6IEFycmF5PHN0cmluZz47XHJcbiAgICAvKirns5bmnpznlJ/kuqfnmoTmgLvkuKrmlbDorrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBjYW5keUNvdW50OiBudW1iZXI7XHJcbiAgICAvKirlpI3mtLvmiYDpnIDlkIPns5bmnpznmoTmlbDph48qL1xyXG4gICAgcHJpdmF0ZSByZXNjdWVOdW06IG51bWJlcjtcclxuXHJcbiAgICAvKirml7bpl7Tnur8qL1xyXG4gICAgcHJpdmF0ZSB0aW1lckNvbnRyb2w6IG51bWJlcjtcclxuXHJcbiAgICAvKirmgKrnianlsZ7mgKcqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVByb3BlcnR5OiBhbnk7XHJcblxyXG4gICAgLyoq5bem6L655Ye65oCq55qE5pe26Ze06Ze06ZqUKi9cclxuICAgIHByaXZhdGUgZW5lbXlJbnRlcnZhbF8wMTogbnVtYmVyO1xyXG4gICAgLyoq5bem6L655q+P5qyh5Ye65oCq5pe26Ze05o6n5Yi2Ki9cclxuICAgIHByaXZhdGUgZW5lbXlUaW1lXzAxOiBudW1iZXI7XHJcbiAgICAvKirlt6bovrnlh7rmgKrlvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVN3aXRjaF8wMTogYm9vbGVhbjtcclxuXHJcbiAgICAvKirlj7Povrnlh7rmgKrnmoTml7bpl7Tpl7TpmpQqL1xyXG4gICAgcHJpdmF0ZSBlbmVteUludGVydmFsXzAyOiBudW1iZXI7XHJcbiAgICAvKirlj7Povrnmr4/mrKHlh7rmgKrml7bpl7TmjqfliLYqL1xyXG4gICAgcHJpdmF0ZSBlbmVteVRpbWVfMDI6IG51bWJlcjtcclxuICAgIC8qKuW3pui+ueWHuuaAquW8gOWFsyovXHJcbiAgICBwcml2YXRlIGVuZW15U3dpdGNoXzAyOiBib29sZWFuO1xyXG5cclxuICAgIC8qKjEw5Liq57OW5p6c5Zu65a6a5L2N572uKi9cclxuICAgIHByaXZhdGUgcG9zQXJyX2xlZnQ6IEFycmF5PEFycmF5PG51bWJlcj4+O1xyXG4gICAgcHJpdmF0ZSBwb3NBcnJfcmlnaHQ6IEFycmF5PEFycmF5PG51bWJlcj4+O1xyXG4gICAgLyoq5q+P5qyh5Yib5bu656ys5LiA5rOi57OW5p6c5LuW5Lus55qE5ZCN56ew57uE5ZCIKi9cclxuICAgIHByaXZhdGUgY2FuZHlOYW1lQXJyOiBBcnJheTxzdHJpbmc+O1xyXG4gICAgLyoq57OW5p6c55qE6KGM5pWwKi9cclxuICAgIHByaXZhdGUgc3RhcnRSb3c6IG51bWJlcjtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq5piv5ZCm5aSE5LqO5pqC5YGc54q25oCBKi9cclxuICAgIHByaXZhdGUgc3VzcGVuZDogYm9vbGVhbjtcclxuXHJcbiAgICAvKirlt6bovrnns5bmnpzlj5HlsITlj6MqL1xyXG4gICAgcHJpdmF0ZSBsYXVuY2hUZW1wXzAxOiBMYXlhLlRlbXBsZXQ7XHJcbiAgICBwcml2YXRlIGNhbmR5TGF1bmNoXzAxOiBMYXlhLlNrZWxldG9uO1xyXG4gICAgLyoq5Y+z6L6557OW5p6c5Y+R5bCE5Y+jKi9cclxuICAgIHByaXZhdGUgbGF1bmNoVGVtcF8wMjogTGF5YS5UZW1wbGV0O1xyXG4gICAgcHJpdmF0ZSBjYW5keUxhdW5jaF8wMjogTGF5YS5Ta2VsZXRvbjtcclxuXHJcbiAgICAvKirmuLjmiI/nu5PmnZ8qL1xyXG4gICAgcHJpdmF0ZSBnYW1lT3ZlcjogYm9vbGVhbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubm9TdGFydGVkKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVTdGFydEludGVyZmFjZSgnc3RhcnQnKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirlnLrmma/liJ3lp4vljJYqL1xyXG4gICAgc3RhcnRHYW1lKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZW5lbXlBcHBlYXIgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmVuZW15VGFnUm9sZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5lbmVteUNvdW50ID0gMDtcclxuICAgICAgICAvLyDliJ3lp4vljJbmgKrnianlsZ7mgKfvvIzkvp3mrKHkuLrooYDph4/vvIzmlLvlh7vlipvvvIzmlLvpgJ/vvIznp7vliqjpgJ/luqbvvIzmlLvlh7vpgJ/luqZcclxuICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkgPSB7XHJcbiAgICAgICAgICAgIGJsb29kOiAyMDAsXHJcbiAgICAgICAgICAgIGF0dGFja1ZhbHVlOiA1MDAwLFxyXG4gICAgICAgICAgICBhdHRhY2tTcGVlZDogMTAwMCwvL+aaguaXtuacgOWwj+aXtumXtOmXtOmalOS4ujEwMFxyXG4gICAgICAgICAgICBkZWZlbnNlOiAxMCxcclxuICAgICAgICAgICAgbW92ZVNwZWVkOiAxMCxcclxuICAgICAgICAgICAgY3JlYXRJbnRlcnZhbDogNTAwMFxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVuZW15SW50ZXJ2YWxfMDEgPSA1MDA7XHJcbiAgICAgICAgdGhpcy5lbmVteVRpbWVfMDEgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIHRoaXMuZW5lbXlTd2l0Y2hfMDEgPSB0cnVlO1xyXG5cclxuICAgICAgICB0aGlzLmVuZW15SW50ZXJ2YWxfMDIgPSA1MDA7XHJcbiAgICAgICAgdGhpcy5lbmVteVRpbWVfMDIgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIHRoaXMuZW5lbXlTd2l0Y2hfMDIgPSB0cnVlO1xyXG5cclxuICAgICAgICB0aGlzLmNhbmR5X2ludGVydmFsID0gMTAwMDtcclxuICAgICAgICB0aGlzLmNyZWF0VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdE9uT2ZmID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5hbWVBcnIgPSBbXTtcclxuICAgICAgICB0aGlzLmNhbmR5Q291bnQgPSAwO1xyXG4gICAgICAgIHRoaXMuc2NvcmVMYWJlbC52YWx1ZSA9ICcwJztcclxuXHJcbiAgICAgICAgdGhpcy50aW1lU2NoZWR1bGUgPSB0aGlzLnRpbWVyLmdldENoaWxkQnlOYW1lKCd0aW1lU2NoZWR1bGUnKSBhcyBMYXlhLlByb2dyZXNzQmFyO1xyXG5cclxuICAgICAgICB0aGlzLnJlc2N1ZU51bSA9IDA7XHJcbiAgICAgICAgLy8g5YWz6Zet5aSa54K56Kem5o6nXHJcbiAgICAgICAgTGF5YS5Nb3VzZU1hbmFnZXIubXVsdGlUb3VjaEVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnRpbWVyQ29udHJvbCA9IDA7XHJcbiAgICAgICAgdGhpcy5zdXNwZW5kID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zdGFydFJvdyA9IDQ7XHJcbiAgICAgICAgdGhpcy5nYW1lT3ZlciA9IGZhbHNlO1xyXG5cclxuICAgICAgICB0aGlzLmNhbmR5TW92ZVRvRGlzcGxheSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKua4uOaIj+ayoeacieW8gOWni+eahOaXtuWAmeiuvue9rueahOWxnuaApyovXHJcbiAgICBub1N0YXJ0ZWQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNjZW5lO1xyXG4gICAgICAgIHRoaXMub3duZXJbJ01haW5TY2VuZUNvbnRyb2wnXSA9IHRoaXM7Ly/ohJrmnKzotYvlgLxcclxuICAgICAgICB0aGlzLmdhbWVPdmVyID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmNyZWF0ZUxhdW5jaEFuaSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIm+W7uuW8gOWni+a4uOaIj+eVjOmdoiovXHJcbiAgICBjcmVhdGVTdGFydEludGVyZmFjZSh0eXBlKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHN0YXJ0SW50ZXJmYWNlID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNyZWF0ZUZ1bignc3RhcnRJbnRlcmZhY2UnLCB0aGlzLnN0YXJ0SW50ZXJmYWNlLmNyZWF0ZSwgdGhpcy5zdGFydEludGVyZmFjZSkgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5vd25lci5hZGRDaGlsZChzdGFydEludGVyZmFjZSk7XHJcbiAgICAgICAgc3RhcnRJbnRlcmZhY2UucGl2b3RYID0gc3RhcnRJbnRlcmZhY2Uud2lkdGggLyAyO1xyXG4gICAgICAgIHN0YXJ0SW50ZXJmYWNlLnBpdm90WSA9IHN0YXJ0SW50ZXJmYWNlLmhlaWdodCAvIDI7XHJcbiAgICAgICAgc3RhcnRJbnRlcmZhY2UueCA9IExheWEuc3RhZ2Uud2lkdGggLyAyO1xyXG4gICAgICAgIHN0YXJ0SW50ZXJmYWNlLnkgPSBMYXlhLnN0YWdlLmhlaWdodCAvIDI7XHJcblxyXG4gICAgICAgIHN0YXJ0SW50ZXJmYWNlWydzdGFydEdhbWUnXS5hbmlUeXBlSW5pdCh0eXBlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirkuKTkuKrlj5HlsITlj6PnmoTpqqjpqrzliqjnlLsqL1xyXG4gICAgY3JlYXRlTGF1bmNoQW5pKCk6IHZvaWQge1xyXG4gICAgICAgIC8v5Yib5bu65Yqo55S75qih5p2/MVxyXG4gICAgICAgIHRoaXMubGF1bmNoVGVtcF8wMSA9IG5ldyBMYXlhLlRlbXBsZXQoKTtcclxuICAgICAgICB0aGlzLmxhdW5jaFRlbXBfMDEub24oTGF5YS5FdmVudC5DT01QTEVURSwgdGhpcywgdGhpcy5wYXJzZUNvbXBsZXRlXzAxKTtcclxuICAgICAgICB0aGlzLmxhdW5jaFRlbXBfMDEub24oTGF5YS5FdmVudC5FUlJPUiwgdGhpcywgdGhpcy5vbkVycm9yKTtcclxuICAgICAgICB0aGlzLmxhdW5jaFRlbXBfMDEubG9hZEFuaShcImNhbmR5L+ezluaenOacuuWZqC9jYW5keUxhdW5jaC5za1wiKTtcclxuICAgICAgICAvL+WIm+W7uuWKqOeUu+aooeadvzJcclxuICAgICAgICB0aGlzLmxhdW5jaFRlbXBfMDIgPSBuZXcgTGF5YS5UZW1wbGV0KCk7XHJcbiAgICAgICAgdGhpcy5sYXVuY2hUZW1wXzAyLm9uKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIHRoaXMucGFyc2VDb21wbGV0ZV8wMik7XHJcbiAgICAgICAgdGhpcy5sYXVuY2hUZW1wXzAyLm9uKExheWEuRXZlbnQuRVJST1IsIHRoaXMsIHRoaXMub25FcnJvcik7XHJcbiAgICAgICAgdGhpcy5sYXVuY2hUZW1wXzAyLmxvYWRBbmkoXCJjYW5keS/ns5bmnpzmnLrlmagvY2FuZHlMYXVuY2guc2tcIik7XHJcbiAgICB9XHJcblxyXG4gICAgb25FcnJvcigpOiB2b2lkIHtcclxuICAgICAgICBjb25zb2xlLmxvZygn6aqo6aq85Yqo55S75Yqg6L296ZSZ6K+vJyk7XHJcbiAgICB9XHJcbiAgICBwYXJzZUNvbXBsZXRlXzAxKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOmdmeatolxyXG4gICAgICAgIHRoaXMuY2FuZHlMYXVuY2hfMDEgPSB0aGlzLmFzc2VtYmx5LmdldENoaWxkQnlOYW1lKCdjYW5keUxhdW5jaF8wMScpIGFzIExheWEuU2tlbGV0b247Ly/mqKHmnb8wXHJcbiAgICAgICAgdGhpcy5jYW5keUxhdW5jaF8wMS5wbGF5KCdzdGF0aWMnLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5jYW5keUxhdW5jaF8wMS5vbihMYXlhLkV2ZW50LkxBQkVMLCB0aGlzLCB0aGlzLmNhbmR5TGF1bmNoTGlzdGVuXzAxKTtcclxuICAgIH1cclxuICAgIHBhcnNlQ29tcGxldGVfMDIoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g6Z2Z5q2iXHJcbiAgICAgICAgdGhpcy5jYW5keUxhdW5jaF8wMiA9IHRoaXMuYXNzZW1ibHkuZ2V0Q2hpbGRCeU5hbWUoJ2NhbmR5TGF1bmNoXzAyJykgYXMgTGF5YS5Ta2VsZXRvbjsvL+aooeadvzBcclxuICAgICAgICB0aGlzLmNhbmR5TGF1bmNoXzAyLnBsYXkoJ3N0YXRpYycsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmNhbmR5TGF1bmNoXzAyLm9uKExheWEuRXZlbnQuTEFCRUwsIHRoaXMsIHRoaXMuY2FuZHlMYXVuY2hMaXN0ZW5fMDIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWPkeWwhOWPo+ebkeWQrOebkeWQrDFcclxuICAgICAqIOWIhuW8gOebkeWQrO+8jOWboOS4uuacieWGmeaTjeS9nOWPquS8muaJp+ihjOS4gOasoVxyXG4gICAgKi9cclxuICAgIGNhbmR5TGF1bmNoTGlzdGVuXzAxKGUpOiB2b2lkIHtcclxuICAgICAgICBpZiAoZS5uYW1lID09PSAnbGF1bmNoJykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5Y+R5bCE77yBJyk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChlLm5hbWUgPT09ICdnZXRSZWFkeScpIHtcclxuICAgICAgICAgICAgdGhpcy5jYW5keU1vdmVUb0Rpc3BsYXkoKTtcclxuICAgICAgICAgICAgdGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKuWPkeWwhOWPo+ebkeWQrOebkeWQrDEqL1xyXG4gICAgY2FuZHlMYXVuY2hMaXN0ZW5fMDIoZSk6IHZvaWQge1xyXG4gICAgICAgIGlmIChlLm5hbWUgPT09ICdsYXVuY2gnKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCflj5HlsITvvIEnKTtcclxuICAgICAgICB9IGVsc2UgaWYgKGUubmFtZSA9PT0gJ2dldFJlYWR5Jykge1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirnlJ/kuqc45Liq57OW5p6c56e75Yqo5Yiw5pON5L2c5Y+w55qE5Yqo55S7XHJcbiAgICAgKiA05qyh77yM5q+P5qyhMuS4quenu+WKqFxyXG4gICAgICog5YCS6L+H5p2l6YGN5Y6GXHJcbiAgICAqL1xyXG4gICAgY2FuZHlNb3ZlVG9EaXNwbGF5KCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBkZWxheWVkID0gMTA7XHJcbiAgICAgICAgbGV0IGNhbmR5SGVpaHQgPSAxMDA7XHJcbiAgICAgICAgbGV0IHNwYWNpbmcgPSAtMTtcclxuICAgICAgICBsZXQgc3RhcnRYXzAyID0gTGF5YS5zdGFnZS53aWR0aCAvIDIgLSA0MjtcclxuICAgICAgICBsZXQgc3RhcnRYXzAxID0gTGF5YS5zdGFnZS53aWR0aCAvIDIgKyA1ODtcclxuICAgICAgICAvL+acgOi/nOeahOmCo+S4quS9jee9rlxyXG4gICAgICAgIGxldCBzdGFydFkgPSB0aGlzLmRpc3BsYXlzLnkgKyA0ICogKGNhbmR5SGVpaHQgKyBzcGFjaW5nKSAtIDM1O1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zdGFydFJvdzsgaSsrKSB7XHJcbiAgICAgICAgICAgIExheWEudGltZXIuZnJhbWVPbmNlKGRlbGF5ZWQsIHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMjsgaisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNhbmR5ID0gdGhpcy5jcmVhdGVDYW5keSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbmR5WydDYW5keSddLmdyb3VwID0gaTtcclxuICAgICAgICAgICAgICAgICAgICBjYW5keS56T3JkZXIgPSB0aGlzLnN0YXJ0Um93IC0gaTsvL+Wxgue6p1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChqID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWHuueUn+S9jee9rlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5keS5wb3ModGhpcy5kaXNwbGF5cy54ICsgMTYwLCB0aGlzLmRpc3BsYXlzLnkgLSA1MCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbmR5LnNjYWxlWCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbmR5LnNjYWxlWSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuZHlMYXVuY2hfMDEucGxheSgnbGF1bmNoTGVmdCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g56e75Yqo5Yiw6ZmI5YiX5Y+w5L2N572uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0YXJnZXRZID0gc3RhcnRZIC0gaSAqIChjYW5keUhlaWh0ICsgc3BhY2luZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuZHlGbGlwVGhlQW5pKGNhbmR5LCBzdGFydFhfMDEsIHRhcmdldFkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWHuueUn+S9jee9rlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5keS5wb3ModGhpcy5kaXNwbGF5cy54IC0gMTYwLCB0aGlzLmRpc3BsYXlzLnkgLSA1MCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbmR5LnNjYWxlWCA9IDAuNTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FuZHkuc2NhbGVZID0gMC41O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbmR5TGF1bmNoXzAyLnBsYXkoJ2xhdW5jaFJpZ2h0JywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDpmYjliJflj7DkvY3nva5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g56e75Yqo5Yiw6ZmI5YiX5Y+w5L2N572uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0YXJnZXRZID0gc3RhcnRZIC0gaSAqIChjYW5keUhlaWh0ICsgc3BhY2luZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuZHlGbGlwVGhlQW5pKGNhbmR5LCBzdGFydFhfMDIsIHRhcmdldFkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgZGVsYXllZCArPSAxNTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq57OW5p6c5Y+R5bCE5Yqo55S75pe26Ze057q/XHJcbiAgICAgKiBAcGFyYW0gY2FuZHkg5b2T5YmN57OW5p6cXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2V0WCDnm67moId45L2N572uXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2V0WSDnm67moId55L2N572uXHJcbiAgICAqL1xyXG4gICAgY2FuZHlGbGlwVGhlQW5pKGNhbmR5LCB0YXJnZXRYLCB0YXJnZXRZKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5Z+656GA5pe26Ze05Y+C5pWw77yM5Yqo55S755qE5pe26Ze05Lya6ZqP552A5L2N572u6L656L+R6ICM57yp5bCPXHJcbiAgICAgICAgbGV0IHRpbWVQYXIgPSA1MDAgLSBjYW5keVsnQ2FuZHknXS5ncm91cCAqIDEwMDtcclxuICAgICAgICAvLyDns5bmnpzmnKzouqtcclxuICAgICAgICAvLyDnrKzkuIDmraXmlL7lpKdcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKGNhbmR5LCB7IHNjYWxlWDogMC44LCBzY2FsZVk6IDAuOCwgeTogY2FuZHkueSAtIDMwIH0sIHRpbWVQYXIgLyAyLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8g56ys5LqM5q2l6aOe5aSpLOS9jee9ruaYr+ebruagh+S9jee9rueahOS4gOWNilxyXG4gICAgICAgICAgICBsZXQgSGFsZlg7XHJcbiAgICAgICAgICAgIGxldCBkaXN0YW5jZVBlciA9IDM7Ly/lnKjov5nkuKrot53nprvnrYnliIblpITpo57liLDmnIDpq5jlpIRcclxuICAgICAgICAgICAgaWYgKGNhbmR5LnggPiBMYXlhLnN0YWdlLndpZHRoIC8gMikge1xyXG4gICAgICAgICAgICAgICAgSGFsZlggPSBjYW5keS54IC0gKGNhbmR5LnggLSB0YXJnZXRYKSAvIGRpc3RhbmNlUGVyO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgSGFsZlggPSBjYW5keS54ICsgKHRhcmdldFggLSBjYW5keS54KSAvIGRpc3RhbmNlUGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGxldCBIYWxmWSA9IGNhbmR5LnkgKyAodGFyZ2V0WSAtIGNhbmR5LnkpIC8gZGlzdGFuY2VQZXI7XHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8oY2FuZHksIHsgeDogSGFsZlgsIHk6IEhhbGZZLCBzY2FsZVg6IDEuMywgc2NhbGVZOiAxLjMgfSwgdGltZVBhciAqIDMgLyA0LCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIC8vIOesrOS4ieatpemZjeiQvVxyXG4gICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhjYW5keSwgeyB4OiB0YXJnZXRYLCB5OiB0YXJnZXRZLCBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCB0aW1lUGFyLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlcGxhY2VDYW5keU1hcChjYW5keSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbmR5WydDYW5keSddLmdyb3VwID09PSAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3BlcmF0aW5nWydPcGVyYXRpb25Db250cm9sJ10ub3BlcmF0ZVN3aXRjaCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3BlcmF0aW5nWydPcGVyYXRpb25Db250cm9sJ10uY2xpY2tIaW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGF1bmNoTnVtID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXVuY2hTd2l0Y2ggPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KSwgMCk7XHJcbiAgICAgICAgICAgIH0pLCAwKTtcclxuICAgICAgICB9KSwgMTApO1xyXG5cclxuICAgICAgICAvLyDns5bmnpznmoTlvbHlrZDlpITnkIZcclxuICAgICAgICBsZXQgc2hhZG93ID0gY2FuZHkuZ2V0Q2hpbGRCeU5hbWUoJ3NoYWRvdycpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgLy8g56ys5LiA5q2l5pS+5aSnXHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byhzaGFkb3csIHt9LCB0aW1lUGFyIC8gMiwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vIOesrOS6jOatpeWSjOezluaenOaLieW8gOi3neemu1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHNoYWRvdywgeyB4OiAtMjAsIHk6IDEwMCwgc2NhbGVYOiAwLjUsIHNjYWxlWTogMC41LCB9LCB0aW1lUGFyICogMyAvIDQsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8g56ys5LiJ5q2l6ZmN6JC9XHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHNoYWRvdywgeyB4OiAwLCB5OiAwLCBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCB0aW1lUGFyLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH0pLCAwKTtcclxuICAgICAgICAgICAgfSksIDApO1xyXG4gICAgICAgIH0pLCAxMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5pu/5o2i5LiN5ZCM57OW5p6c6LS05Zu+Ki9cclxuICAgIHJlcGxhY2VDYW5keU1hcChjYW5keSk6IHZvaWQge1xyXG4gICAgICAgIGxldCBza2VsZXRvbiA9IChjYW5keS5nZXRDaGlsZEJ5TmFtZSgnc2tlbGV0b24nKSBhcyBMYXlhLlNrZWxldG9uKTtcclxuICAgICAgICAvLyDliJvlu7rmtojlpLHlj5jmjaLnibnmlYhcclxuICAgICAgICB0aGlzLmV4cGxvZGVBbmkodGhpcy5vd25lciwgY2FuZHkueCwgY2FuZHkueSwgJ2Rpc2FwcGVhcicsIDgsIDEwMDApO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5zZWxmLm5hbWUuc3Vic3RyaW5nKDAsIDExKSkge1xyXG4gICAgICAgICAgICBjYXNlICd5ZWxsb3dDYW5keSc6XHJcbiAgICAgICAgICAgICAgICBza2VsZXRvbi5wbGF5KCd5ZWxsb3dfc3RhdGljJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAncmVkQ2FuZHlfX18nOlxyXG4gICAgICAgICAgICAgICAgc2tlbGV0b24ucGxheSgncmVkX3N0YXRpYycsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2JsdWVDYW5keV9fJzpcclxuICAgICAgICAgICAgICAgIHNrZWxldG9uLnBsYXkoJ2JsdWVfc3RhdGljJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnZ3JlZW5DYW5keV8nOlxyXG4gICAgICAgICAgICAgICAgc2tlbGV0b24ucGxheSgnZ3JlZW5fc3RhdGljJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirkuqfnlJ/ns5bmnpwqL1xyXG4gICAgY3JlYXRlQ2FuZHkoKTogTGF5YS5TcHJpdGUge1xyXG4gICAgICAgIC8vIOmAmui/h+WvueixoeaxoOWIm+W7ulxyXG4gICAgICAgIGxldCBjYW5keSA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ2NhbmR5JywgdGhpcy5jYW5keS5jcmVhdGUsIHRoaXMuY2FuZHkpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIC8vIOmaj+acuuWIm+W7uuS4gOenjeminOiJsuezluaenFxyXG4gICAgICAgIC8vIOezluaenOeahOWQjeensOe7k+aehOaYrzEx5L2N5a2X56ym5Liy5Yqg5LiK57Si5byV5YC877yM5pa55L6/5p+l5om+77yM5bm25LiU6L+Z5qC35L2/5LuW5Lus55qE5ZCN56ew5ZSv5LiAXHJcbiAgICAgICAgbGV0IHJhbmRvbU51bSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQpO1xyXG4gICAgICAgIGxldCBwaWMgPSAoY2FuZHkuZ2V0Q2hpbGRCeU5hbWUoJ3BpYycpIGFzIExheWEuSW1hZ2UpO1xyXG4gICAgICAgIHN3aXRjaCAocmFuZG9tTnVtKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAneWVsbG93Q2FuZHknICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAncmVkQ2FuZHlfX18nICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAnYmx1ZUNhbmR5X18nICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgIGNhbmR5Lm5hbWUgPSAnZ3JlZW5DYW5keV8nICsgdGhpcy5jYW5keUNvdW50O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6ZqP5py654K55Ye75qyh5pWwXHJcbiAgICAgICAgbGV0IGNsaWNrc0xhYmVsID0gY2FuZHkuZ2V0Q2hpbGRCeU5hbWUoJ2NsaWNrc0xhYmVsJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBjbGlja3NMYWJlbC50ZXh0ID0gJyc7XHJcbiAgICAgICAgY2FuZHkucG9zKExheWEuc3RhZ2Uud2lkdGggLyAyLCAtMTAwKTtcclxuICAgICAgICBjYW5keS5waXZvdFggPSBjYW5keS53aWR0aCAvIDI7XHJcbiAgICAgICAgY2FuZHkucGl2b3RZID0gY2FuZHkuaGVpZ2h0IC8gMjtcclxuICAgICAgICB0aGlzLmNhbmR5UGFyZW50LmFkZENoaWxkKGNhbmR5KTtcclxuICAgICAgICBjYW5keS5yb3RhdGlvbiA9IDA7XHJcbiAgICAgICAgdGhpcy5jYW5keUNvdW50Kys7XHJcbiAgICAgICAgcmV0dXJuIGNhbmR5O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuS6p+eUn+eIhueCuOezluaenCovXHJcbiAgICBjcmVhdGVFeHBsb2RlQ2FuZHkoY2FuZHlOYW1lOiBzdHJpbmcpOiBMYXlhLlNwcml0ZSB7XHJcbiAgICAgICAgLy8g6YCa6L+H5a+56LGh5rGg5Yib5bu6XHJcbiAgICAgICAgbGV0IGV4cGxvZGVDYW5keSA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ2NhbmR5X0V4cGxvZGUnLCB0aGlzLmNhbmR5X0V4cGxvZGUuY3JlYXRlLCB0aGlzLmNhbmR5X0V4cGxvZGUpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIGV4cGxvZGVDYW5keS5wb3MoTGF5YS5zdGFnZS53aWR0aCAvIDIsIC0xMDApO1xyXG4gICAgICAgIHRoaXMuY2FuZHlfRXhwbG9kZVBhcmVudC5hZGRDaGlsZChleHBsb2RlQ2FuZHkpO1xyXG4gICAgICAgIGV4cGxvZGVDYW5keS5yb3RhdGlvbiA9IDA7XHJcbiAgICAgICAgdGhpcy5jYW5keUNvdW50Kys7XHJcbiAgICAgICAgZXhwbG9kZUNhbmR5Lm5hbWUgPSBjYW5keU5hbWUuc3Vic3RyaW5nKDAsIDExKTtcclxuICAgICAgICByZXR1cm4gZXhwbG9kZUNhbmR5O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWvueeIhueCuOezluaenOi/m+ihjOaOkuW6jyovXHJcbiAgICBleHBsb2RlQ2FuZHl6T3JkZXIoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGxlbiA9IHRoaXMuY2FuZHlfRXhwbG9kZVBhcmVudC5fY2hpbGRyZW4ubGVuZ3RoO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgdGhpcy5jYW5keV9FeHBsb2RlUGFyZW50Ll9jaGlsZHJlbltpXS56T3JkZXIgPSBNYXRoLnJvdW5kKHRoaXMuY2FuZHlfRXhwbG9kZVBhcmVudC5fY2hpbGRyZW5baV0ueSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuS4pOS4quS4u+inkuWvueivneahhueahOWIneWni+WMliovXHJcbiAgICByb2xlU3BlYWtCb3hzKCk6IHZvaWQge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMjsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBzcGVha0JveCA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ3NwZWFrQm94JywgdGhpcy5zcGVha0JveC5jcmVhdGUsIHRoaXMuc3BlYWtCb3gpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICB0aGlzLnNwZWFrQm94UGFyZW50LmFkZENoaWxkKHNwZWFrQm94KTtcclxuICAgICAgICAgICAgaWYgKGkgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHNwZWFrQm94LnBvcyh0aGlzLnJvbGVfMDEueCwgdGhpcy5yb2xlXzAxLnkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAxc3BlYWsgPSBzcGVha0JveDtcclxuICAgICAgICAgICAgICAgIHRoaXMucm9sZV8wMXNwZWFrLmFscGhhID0gMDtcclxuICAgICAgICAgICAgICAgIC8vIOWPjeWQkeWSjOWBj+enu1xyXG4gICAgICAgICAgICAgICAgbGV0IHBpYyA9IHRoaXMucm9sZV8wMXNwZWFrLmdldENoaWxkQnlOYW1lKCdwaWMnKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgICAgIGxldCBsYWJlbCA9IHRoaXMucm9sZV8wMXNwZWFrLmdldENoaWxkQnlOYW1lKCdsYWJlbCcpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgcGljLnNjYWxlWCA9IC0xO1xyXG4gICAgICAgICAgICAgICAgbGFiZWwueCArPSAzMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNwZWFrQm94LnBvcyh0aGlzLnJvbGVfMDIueCwgdGhpcy5yb2xlXzAyLnkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAyc3BlYWsgPSBzcGVha0JveDtcclxuICAgICAgICAgICAgICAgIHRoaXMucm9sZV8wMnNwZWFrLmFscGhhID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirop5LoibLmrbvkuqHlpI3mtLvnirblhrUqL1xyXG4gICAgcm9sZURlYXRoU3RhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g6KeS6Imy5q275Lqh5oOF5Ya1XHJcbiAgICAgICAgbGV0IGxlbiA9IHRoaXMucm9sZVBhcmVudC5fY2hpbGRyZW4ubGVuZ3RoO1xyXG4gICAgICAgIGlmIChsZW4gPT09IDApIHtcclxuICAgICAgICAgICAgLy8g5q275LqhXHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlTd2l0Y2hfMDEgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5lbmVteVN3aXRjaF8wMiA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0gZWxzZSBpZiAobGVuID09PSAxKSB7XHJcbiAgICAgICAgICAgIGxldCBzcGVha18wMSA9IHRoaXMucm9sZV8wMXNwZWFrLmdldENoaWxkQnlOYW1lKCdsYWJlbCcpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgICAgIGxldCBzcGVha18wMiA9IHRoaXMucm9sZV8wMnNwZWFrLmdldENoaWxkQnlOYW1lKCdsYWJlbCcpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgICAgIC8vIOWkjea0u1xyXG4gICAgICAgICAgICBpZiAodGhpcy5yZXNjdWVOdW0gPj0gNSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZXNjdWVOdW0gPSAwO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucm9sZVBhcmVudC5fY2hpbGRyZW5bMF0ubmFtZSA9PT0gXCJyb2xlXzAxXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvbGVQYXJlbnQuYWRkQ2hpbGQodGhpcy5yb2xlXzAyKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvbGVfMDJzcGVhay54IC09IDE1MDtcclxuICAgICAgICAgICAgICAgICAgICBzcGVha18wMi50ZXh0ID0gJ+iwouiwouS9oOWViu+8gSc7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucm9sZVBhcmVudC5hZGRDaGlsZCh0aGlzLnJvbGVfMDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNwZWFrXzAxLnRleHQgPSAn6LCi6LCi5L2g5ZWK77yBJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvbGVfMDFzcGVhay54ICs9IDE1MDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIOW+heWkjea0u+aPkOekulxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucm9sZVBhcmVudC5fY2hpbGRyZW5bMF0ubmFtZSA9PT0gXCJyb2xlXzAxXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvbGVfMDJzcGVhay5hbHBoYSA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlXzAyc3BlYWsueCA9IHRoaXMucm9sZV8wMi54O1xyXG4gICAgICAgICAgICAgICAgICAgIHNwZWFrXzAyLnRleHQgPSAn6L+e57ut5ZCDNeS4quezluaenOS4jeeKr+mUmeeahOivneaIkeWwseWkjea0u+S6hic7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucm9sZV8wMXNwZWFrLmFscGhhID0gMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvbGVfMDFzcGVhay54ID0gdGhpcy5yb2xlXzAxLng7XHJcbiAgICAgICAgICAgICAgICAgICAgc3BlYWtfMDEudGV4dCA9ICfov57nu63lkIM15Liq57OW5p6c5LiN54qv6ZSZ55qE6K+d5oiR5bCx5aSN5rS75LqGJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAobGVuID09PSAyKSB7XHJcbiAgICAgICAgICAgIC8vIOS/neaMge+8jOWkjea0u+eKtuaAgeS4uuepulxyXG4gICAgICAgICAgICB0aGlzLnJlc2N1ZU51bSA9PT0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Ye6546w5pWM5Lq6XHJcbiAgICAgKiDliJvlu7rmlrnlvI/lhrPlrprkuobmlYzkurrlh7rnlJ/nmoTkvY3nva5cclxuICAgICAqIEBwYXJhbSBtb2RlIOWIm+W7uuaooeW8j+aYr+W3pui+uei/mOaYr+WPs+i+uVxyXG4gICAgICogQHBhcmFtIHRhZ1JvbGUg55uu5qCH5piv5ZOq5Liq5Li76KeSXHJcbiAgICAqL1xyXG4gICAgY2FyZWF0RW5lbXkobW9kZTogc3RyaW5nLCB0YWdSb2xlOiBMYXlhLlNwcml0ZSwgdHlwZTogc3RyaW5nKTogTGF5YS5TcHJpdGUge1xyXG4gICAgICAgIHRoaXMuZW5lbXlDb3VudCsrO1xyXG4gICAgICAgIGlmICh0YWdSb2xlICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGxldCBlbmVteSA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ2VuZW15JywgdGhpcy5lbmVteS5jcmVhdGUsIHRoaXMuZW5lbXkpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICB0aGlzLmVuZW15UGFyZW50LmFkZENoaWxkKGVuZW15KTtcclxuICAgICAgICAgICAgZW5lbXkubmFtZSA9ICdlbmVteScgKyB0aGlzLmVuZW15Q291bnQ7Ly/lkI3np7DllK/kuIBcclxuICAgICAgICAgICAgZW5lbXkucGl2b3RYID0gZW5lbXkud2lkdGggLyAyO1xyXG4gICAgICAgICAgICBlbmVteS5waXZvdFkgPSBlbmVteS5oZWlnaHQgLyAyO1xyXG4gICAgICAgICAgICAvL+WHuueUn+S9jee9ruWIpOWumizlkozmlLvlh7vnm67moIfpgInmi6lcclxuICAgICAgICAgICAgaWYgKG1vZGUgPT09ICdsZWZ0Jykge1xyXG4gICAgICAgICAgICAgICAgZW5lbXkucG9zKC01MCwgMzAwKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChtb2RlID09PSAncmlnaHQnKSB7XHJcbiAgICAgICAgICAgICAgICBlbmVteS5wb3MoODAwLCAzMDApO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG1vZGUgPT09ICd0YXJnZXQnKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGFnUm9sZS54IDwgTGF5YS5zdGFnZS53aWR0aCAvIDIgJiYgdGFnUm9sZS54ID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVuZW15LnBvcygtNTAsIDMwMCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRhZ1JvbGUueCA+PSBMYXlhLnN0YWdlLndpZHRoIC8gMiAmJiB0YWdSb2xlLnggPCBMYXlhLnN0YWdlLndpZHRoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZW5lbXkucG9zKDgwMCwgMzAwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbmVteVsnRW5lbXknXS5zbGVmVGFnUm9sZSA9IHRhZ1JvbGU7XHJcbiAgICAgICAgICAgIGVuZW15WydFbmVteSddLmVuZW15VHlwZSA9IHR5cGU7XHJcbiAgICAgICAgICAgIGVuZW15WydFbmVteSddLnJhbmRvbUF0dGFja1BvaW50KCk7XHJcbiAgICAgICAgICAgIGVuZW15WydFbmVteSddLmNyZWF0ZUJvbmVBbmkoKTtcclxuICAgICAgICAgICAgLy8g6buY6K6k5bGe5oCn5LiN5Y+v6KeBXHJcbiAgICAgICAgICAgIGxldCBwcm9wZXJ0eVNob3cgPSBlbmVteS5nZXRDaGlsZEJ5TmFtZSgncHJvcGVydHlTaG93JykgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5zdXNwZW5kKSB7XHJcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eVNob3cuYWxwaGEgPSAwO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcHJvcGVydHlTaG93LmFscGhhID0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZW5lbXk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqIOaVjOS6uueahOWxgue6p+i/m+ihjOaOkuW6j1xyXG4gICAgICog6KeE5YiZ5piv5Yik5pateei9tO+8jHnlnZDmoIfotorkvY7nmoTotorpnaDliY1cclxuICAgICAqL1xyXG4gICAgZW5lbXlPcmRlcigpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuW2ldLnpPcmRlciA9IE1hdGgucm91bmQodGhpcy5lbmVteVBhcmVudC5fY2hpbGRyZW5baV0ueSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoq5bGe5oCn5Yi35paw5pi+56S66KeE5YiZLOihgOmHj+aYvuekuuS4gOWumuaYr+aVtOaVsO+8jOW5tuS4lOaYrzEw55qE5YCN5pWwXHJcbiAgICAqIOagueaNruaXtumXtOe6v+eahOWinumVv++8jOaAqueJqeeahOWxnuaAp+S4jeaWreWinuW8ulxyXG4gICAgKiDmr4/pmpQ2MDDluKflop7plb/kuIDmrKHvvIzlpKfnuqbmmK8xMOenkumSn1xyXG4gICAgKi9cclxuICAgIGVuZW15UHJvcGVydHlVcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZXJDb250cm9sICUgNjAwID09PSAwKSB7XHJcbiAgICAgICAgICAgIC8vIOihgOmHj+WinumVv1xyXG4gICAgICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkuYmxvb2QgKz0gNTA7XHJcbiAgICAgICAgICAgIC8vIOaUu+WHu+WKm+WinumVv1xyXG4gICAgICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkuYXR0YWNrVmFsdWUgKz0gMTtcclxuICAgICAgICAgICAgLy8g5pS75Ye76YCf5bqm5aKe6ZW/77yM5pyA55+t5pe26Ze06Ze06ZqU5Li6MTAwXHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tTcGVlZCArPSAxMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZW5lbXlQcm9wZXJ0eS5hdHRhY2tTcGVlZCA8IDEwMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmVteVByb3BlcnR5LmF0dGFja1NwZWVkID0gMTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIOmYsuW+oeWKm+WinumVv1xyXG4gICAgICAgICAgICB0aGlzLmVuZW15UHJvcGVydHkuZGVmZW5zZSArPSAxO1xyXG4gICAgICAgICAgICAvLyDlh7rmgKrml7bpl7Tlop7plb8s5pyA55+t5pe26Ze06Ze06ZqU5Li6NTAwXHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5jcmVhdEludGVydmFsICs9IDUwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5lbmVteVByb3BlcnR5LmNyZWF0SW50ZXJ2YWwgPCA1MDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eS5jcmVhdEludGVydmFsID0gNTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKueIhueCuOWKqOeUu1xyXG4gICAgICogQHBhcmFtIHBhcmVudCDniLboioLngrlcclxuICAgICAqIEBwYXJhbSB4IOS9jee9rlxyXG4gICAgICogQHBhcmFtIHlcclxuICAgICAqIEBwYXJhbSB0eXBlIOexu+WeiyBcclxuICAgICAqIEBwYXJhbSBzaHVsIOaVsOmHjyBcclxuICAgICAqIEBwYXJhbSB6T3JkZXIg5bGC57qnXHJcbiAgICAqL1xyXG4gICAgZXhwbG9kZUFuaShwYXJlbnQsIHgsIHksIHR5cGUsIG51bWJlciwgek9yZGVyKTogdm9pZCB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXI7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgZXhwbG9kZSA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ2V4cGxvZGUnLCB0aGlzLmV4cGxvZGUuY3JlYXRlLCB0aGlzLmV4cGxvZGUpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICBwYXJlbnQuYWRkQ2hpbGQoZXhwbG9kZSk7XHJcbiAgICAgICAgICAgIGV4cGxvZGUuek9yZGVyID0gek9yZGVyO1xyXG4gICAgICAgICAgICBleHBsb2RlLnBvcyh4LCB5KTtcclxuICAgICAgICAgICAgLy8g57G75Z6LXHJcbiAgICAgICAgICAgIGV4cGxvZGVbJ0V4cGxvZGUnXS50eXBlID0gdHlwZTtcclxuICAgICAgICAgICAgZXhwbG9kZVsnRXhwbG9kZSddLmluaXRQcm9wZXJ0eSh0eXBlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5aSN5rS7Ki9cclxuICAgIGNyZWF0ZVJlc3VyZ2VuY2UoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlc3VyZ2VuY2UgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdyZXN1cmdlbmNlJywgdGhpcy5yZXN1cmdlbmNlLmNyZWF0ZSwgdGhpcy5yZXN1cmdlbmNlKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGYuYWRkQ2hpbGQocmVzdXJnZW5jZSk7XHJcbiAgICAgICAgcmVzdXJnZW5jZS56T3JkZXIgPSAxMDAwO1xyXG4gICAgICAgIHJlc3VyZ2VuY2UucG9zKDAsIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWxnuaAp+WinuWHj+WKqOeUuyovXHJcbiAgICBjcmVhdGVIaW50V29yZCh0YXJnZXQsIHByb1BlcnR5VHlwZSwgbnVtYmVyVmFsdWUpOiB2b2lkIHtcclxuICAgICAgICBsZXQgaGludFdvcmQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdoaW50V29yZCcsIHRoaXMuaGludFdvcmQuY3JlYXRlLCB0aGlzLmhpbnRXb3JkKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0YXJnZXQuYWRkQ2hpbGQoaGludFdvcmQpO1xyXG4gICAgICAgIGhpbnRXb3JkLnBvcygxMDAsIC0xMCk7XHJcbiAgICAgICAgaGludFdvcmRbJ0hpbnRXb3JkJ10uaW5pdFByb3BlcnR5KHByb1BlcnR5VHlwZSwgbnVtYmVyVmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKumHjeadpe+8jOmHjee9ruWQhOenjeWxnuaAp1xyXG4gICAgICog5omA5pyJ57OW5p6c5ZKM5oCq54mp6YO954K45o6JXHJcbiAgICAgKiDliIbmlbDmuIXpm7ZcclxuICAgICAqIOeEtuWQjuS4u+inkuWkjea0u1xyXG4gICAgKi9cclxuICAgIHJlc3RhcnQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5raI6Zmk5pWM5Lq6XHJcbiAgICAgICAgLy8g5YWI6ZqQ6JeP5Zyo5LiA5bm25Yig6Zmk77yM5ZCm5YiZ5Y+v6IO95Lya5pyJbGVuZ3Ro5Y+Y5YyW6YCg5oiQ6ZSZ6K+vXHJcbiAgICAgICAgbGV0IGVuZW15RGVsYXllZCA9IDA7XHJcbiAgICAgICAgbGV0IGxlbjEgPSB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmZyYW1lT25jZShlbmVteURlbGF5ZWQsIHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5lbmVteVBhcmVudC5fY2hpbGRyZW5baV0pIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbltpXS5hbHBoYSA9IDA7XHJcbiAgICAgICAgICAgICAgICBsZXQgeCA9IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuW2ldLng7XHJcbiAgICAgICAgICAgICAgICBsZXQgeSA9IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuW2ldLnk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5lbmVteVBhcmVudC5fY2hpbGRyZW5baV1bJ0VuZW15J10gPT09ICdpbmZpZ2h0aW5nJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwbG9kZUFuaSh0aGlzLm93bmVyLCB4LCB5LCAnaW5maWdodGluZycsIDE1LCAxMDApO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmV4cGxvZGVBbmkodGhpcy5vd25lciwgeCwgeSwgJ3JhbmdlJywgMTUsIDEwMCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoaSA9PT0gbGVuMSAtIDEpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZW15UGFyZW50LnJlbW92ZUNoaWxkcmVuKDAsIGxlbjEgLSAxKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGVuZW15RGVsYXllZCArPSAyMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOa2iOmZpOeIhueCuOezluaenFxyXG4gICAgICAgIC8vIOWFiOmakOiXj+WcqOS4gOW5tuWIoOmZpO+8jOWQpuWImeWPr+iDveS8muaciWxlbmd0aOWPmOWMlumAoOaIkOmUmeivr1xyXG4gICAgICAgIGxldCBjYW5keUV4cG9sZURlbGF5ZWQgPSAwO1xyXG4gICAgICAgIGxldCBsZW4yID0gdGhpcy5jYW5keV9FeHBsb2RlUGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7XHJcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBsZW4yOyBqKyspIHtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5mcmFtZU9uY2UoY2FuZHlFeHBvbGVEZWxheWVkLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY2FuZHlfRXhwbG9kZVBhcmVudC5fY2hpbGRyZW5bal0pIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbmR5X0V4cGxvZGVQYXJlbnQuX2NoaWxkcmVuW2pdLmFscGhhID0gMDtcclxuICAgICAgICAgICAgICAgIGxldCBuYW1lID0gdGhpcy5jYW5keV9FeHBsb2RlUGFyZW50Ll9jaGlsZHJlbltqXS5uYW1lLnN1YnN0cmluZygwLCAxMSk7XHJcbiAgICAgICAgICAgICAgICBsZXQgeCA9IHRoaXMuY2FuZHlfRXhwbG9kZVBhcmVudC5fY2hpbGRyZW5bal0ueDtcclxuICAgICAgICAgICAgICAgIGxldCB5ID0gdGhpcy5jYW5keV9FeHBsb2RlUGFyZW50Ll9jaGlsZHJlbltqXS55O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5leHBsb2RlQW5pKHRoaXMub3duZXIsIHgsIHksICdkaXNhcHBlYXInLCA4LCAxMDAwKTtcclxuICAgICAgICAgICAgICAgIGlmIChqID09PSBsZW4yIC0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuZHlfRXhwbG9kZVBhcmVudC5yZW1vdmVDaGlsZHJlbigwLCBsZW4yIC0gMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjYW5keUV4cG9sZURlbGF5ZWQgKz0gMjA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyDmtojpmaTns5bmnpws5aaC5p6c5q2k5pe25rKh5pyJ57OW5p6c55u05o6l5Yid5aeL5YyWXHJcbiAgICAgICAgLy8g5YWI6ZqQ6JeP5Zyo5LiA5bm25Yig6Zmk77yM5ZCm5YiZ5Y+v6IO95Lya5pyJbGVuZ3Ro5Y+Y5YyW6YCg5oiQ6ZSZ6K+vXHJcbiAgICAgICAgbGV0IGNhbmR5RGVsYXllZCA9IDA7XHJcbiAgICAgICAgbGV0IGxlbjMgPSB0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7XHJcbiAgICAgICAgaWYgKGxlbjMgPT09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5yb2xlUmVzdXJnZW5jZUFuaSgpO1xyXG4gICAgICAgICAgICB0aGlzLmNhbmR5UGFyZW50LnJlbW92ZUNoaWxkcmVuKDAsIGxlbjMgLSAxKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBsZW4zOyBrKyspIHtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5mcmFtZU9uY2UoY2FuZHlEZWxheWVkLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuW2tdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5keVBhcmVudC5fY2hpbGRyZW5ba10uYWxwaGEgPSAwO1xyXG4gICAgICAgICAgICAgICAgbGV0IG5hbWUgPSB0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbltrXS5uYW1lLnN1YnN0cmluZygwLCAxMSk7XHJcbiAgICAgICAgICAgICAgICBsZXQgeCA9IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuW2tdLng7XHJcbiAgICAgICAgICAgICAgICBsZXQgeSA9IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuW2tdLnk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmV4cGxvZGVBbmkodGhpcy5vd25lciwgeCwgeSwgJ2Rpc2FwcGVhcicsIDgsIDEwMDApO1xyXG4gICAgICAgICAgICAgICAgaWYgKGsgPT09IGxlbjMgLSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlUmVzdXJnZW5jZUFuaSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuZHlQYXJlbnQucmVtb3ZlQ2hpbGRyZW4oMCwgbGVuMyAtIDEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgY2FuZHlEZWxheWVkICs9IDIwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Li76KeS5aSN5rS76YeN5paw5byA5aeLKi9cclxuICAgIHJvbGVSZXN1cmdlbmNlQW5pKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBza2VsZXRvbjEgPSB0aGlzLnJvbGVfMDEuZ2V0Q2hpbGRCeU5hbWUoJ3NrZWxldG9uJykgYXMgTGF5YS5Ta2VsZXRvbjtcclxuICAgICAgICBza2VsZXRvbjEucGxheSgnc3BlYWsnLCB0cnVlKTtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMucm9sZV8wMSwgeyBhbHBoYTogMSB9LCA3MDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlc3RhcnRQcm9wZXJ0aWVzKCk7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgbGV0IHNrZWxldG9uMiA9IHRoaXMucm9sZV8wMi5nZXRDaGlsZEJ5TmFtZSgnc2tlbGV0b24nKSBhcyBMYXlhLlNrZWxldG9uO1xyXG4gICAgICAgIHNrZWxldG9uMi5wbGF5KCdzcGVhaycsIHRydWUpO1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5yb2xlXzAyLCB7IGFscGhhOiAxIH0sIDcwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirph43mlrDlvIDlp4vmiYDpnIDmlLnlj5jnmoTlsZ7mgKcqL1xyXG4gICAgcmVzdGFydFByb3BlcnRpZXMoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zdGFydEdhbWUoKTtcclxuICAgICAgICAvL+S4u+inkuWkjea0u1xyXG4gICAgICAgIHRoaXMucm9sZV8wMVsnUm9sZSddLnJvbGVfV2FybmluZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMVsnUm9sZSddLnJvbGVEZWF0aCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMVsnUm9sZSddLmluaXRQcm9wZXJ0eSgpO1xyXG5cclxuICAgICAgICB0aGlzLnJvbGVfMDJbJ1JvbGUnXS5yb2xlX1dhcm5pbmcgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJvbGVfMDJbJ1JvbGUnXS5yb2xlRGVhdGggPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJvbGVfMDJbJ1JvbGUnXS5pbml0UHJvcGVydHkoKTtcclxuXHJcbiAgICAgICAgdGhpcy5vcGVyYXRpbmdbJ09wZXJhdGlvbkNvbnRyb2wnXS5pbml0UHJvcGVydHkoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirov5Tlm57kuLvnlYzpnaLmuIXnkIblnLrmma8qL1xyXG4gICAgcmV0dXJuU3RhcnRTZXQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5YiG5pWw5riF6Zu2XHJcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsLnZhbHVlID0gJzAnO1xyXG4gICAgICAgIHRoaXMubm9TdGFydGVkKCk7XHJcbiAgICAgICAgLy8g5riF56m65LiJ5Liq5YWD57SgXHJcbiAgICAgICAgbGV0IGxlbjEgPSB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7XHJcbiAgICAgICAgdGhpcy5lbmVteVBhcmVudC5yZW1vdmVDaGlsZHJlbigwLCBsZW4xIC0gMSk7XHJcblxyXG4gICAgICAgIGxldCBsZW4yID0gdGhpcy5jYW5keV9FeHBsb2RlUGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7XHJcbiAgICAgICAgdGhpcy5jYW5keV9FeHBsb2RlUGFyZW50LnJlbW92ZUNoaWxkcmVuKDAsIGxlbjIgLSAxKTtcclxuXHJcbiAgICAgICAgbGV0IGxlbjMgPSB0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7XHJcbiAgICAgICAgdGhpcy5jYW5keVBhcmVudC5yZW1vdmVDaGlsZHJlbigwLCBsZW4zIC0gMSk7XHJcbiAgICAgICAgLy/kuLvop5LlpI3mtLtcclxuICAgICAgICB0aGlzLnJvbGVfMDEuYWxwaGEgPSAxO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMVsnUm9sZSddLnJvbGVfV2FybmluZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMVsnUm9sZSddLnJvbGVEZWF0aCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMVsnUm9sZSddLmluaXRQcm9wZXJ0eSgpO1xyXG5cclxuICAgICAgICB0aGlzLnJvbGVfMDIuYWxwaGEgPSAxO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMlsnUm9sZSddLnJvbGVfV2FybmluZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMlsnUm9sZSddLnJvbGVEZWF0aCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucm9sZV8wMlsnUm9sZSddLmluaXRQcm9wZXJ0eSgpO1xyXG5cclxuICAgICAgICAvLyDmk43kvZzlj7Dph43nva5cclxuICAgICAgICB0aGlzLm9wZXJhdGluZ1snT3BlcmF0aW9uQ29udHJvbCddLmluaXRQcm9wZXJ0eSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWxnuaAp+WIt+aWsOaYvuekuuinhOWImSovXHJcbiAgICBvblVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDmuLjmiI/nu5PmnZ9cclxuICAgICAgICBpZiAodGhpcy5nYW1lT3Zlcikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyDkuLvop5Llhajpg6jmrbvkuqHliJnlgZzmraLnp7vliqgs5bm25LiU5by55Ye65aSN5rS7XHJcbiAgICAgICAgaWYgKHRoaXMucm9sZV8wMVsnUm9sZSddLnJvbGVEZWF0aCAmJiB0aGlzLnJvbGVfMDJbJ1JvbGUnXS5yb2xlRGVhdGgpIHtcclxuICAgICAgICAgICAgdGhpcy5nYW1lT3ZlciA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlUmVzdXJnZW5jZSgpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyDml7bliLvlr7nmlYzkurrnmoTlsYLnuqfov5vooYzmjpLluo9cclxuICAgICAgICB0aGlzLmVuZW15T3JkZXIoKTtcclxuICAgICAgICAvLyDorrDlvZXml7bpl7RcclxuICAgICAgICB0aGlzLnRpbWVyQ29udHJvbCArPSAxO1xyXG4gICAgICAgIC8vIOagueaNruaXtumXtOe6v++8jOWIt+aWsOaAqueJqeWxnuaAp1xyXG4gICAgICAgIHRoaXMuZW5lbXlQcm9wZXJ0eVVwZGF0ZSgpO1xyXG4gICAgICAgIC8vIOinkuiJsuatu+S6oeWkjea0u+eKtuWGtVxyXG4gICAgICAgIHRoaXMucm9sZURlYXRoU3RhdGUoKTtcclxuICAgICAgICAvLyDpgJrov4fml7bpl7Tpl7TpmpTkuqfnlJ/mlYzkurrvvIzlt6blj7PkuqfnlJ/nmoTmlYzkurrkuI3kuIDmoLdcclxuICAgICAgICAvLyDlt6ZcclxuICAgICAgICBpZiAodGhpcy5lbmVteVN3aXRjaF8wMSkge1xyXG4gICAgICAgICAgICBsZXQgbm93VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGlmIChub3dUaW1lIC0gdGhpcy5lbmVteVRpbWVfMDEgPiB0aGlzLmVuZW15UHJvcGVydHkuY3JlYXRJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmVteVRpbWVfMDEgPSBub3dUaW1lO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmVteVRhZ1JvbGUgPSB0aGlzLnJvbGVfMDE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhcmVhdEVuZW15KCdsZWZ0JywgdGhpcy5yb2xlXzAxLCAnaW5maWdodGluZycpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYXJlYXRFbmVteSgnbGVmdCcsIHRoaXMucm9sZV8wMSwgJ3JhbmdlJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15VGFnUm9sZSA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5Y+zXHJcbiAgICAgICAgaWYgKHRoaXMuZW5lbXlTd2l0Y2hfMDIpIHtcclxuICAgICAgICAgICAgbGV0IG5vd1RpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICBpZiAobm93VGltZSAtIHRoaXMuZW5lbXlUaW1lXzAyID4gdGhpcy5lbmVteVByb3BlcnR5LmNyZWF0SW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZW5lbXlUaW1lXzAyID0gbm93VGltZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZW5lbXlUYWdSb2xlID0gdGhpcy5yb2xlXzAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYXJlYXRFbmVteSgncmlnaHQnLCB0aGlzLnJvbGVfMDIsICdpbmZpZ2h0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhcmVhdEVuZW15KCdyaWdodCcsIHRoaXMucm9sZV8wMiwgJ3JhbmdlJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW15VGFnUm9sZSA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vTWFpblNjZW5lQ29udHJvbFwiO1xyXG5pbXBvcnQgQ2FuZHkgZnJvbSBcIi4vQ2FuZHlcIjtcclxuaW1wb3J0IHRvb2xzIGZyb20gXCIuL1Rvb2xcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3BlcmF0aW9uQnV0dG9uIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoq6Ieq5bexKi9cclxuICAgIHByaXZhdGUgc2VsZjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirns5bmnpzniLboioLngrkqL1xyXG4gICAgcHJpdmF0ZSBjYW5keVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirniIbngrjns5bmnpwqL1xyXG4gICAgcHJpdmF0ZSBjYW5keV9FeHBsb2RlOiBMYXlhLlByZWZhYjtcclxuICAgIC8qKueIhueCuOezluaenOeItuiKgueCuSovXHJcbiAgICBwcml2YXRlIGNhbmR5X0V4cGxvZGVQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5pON5L2c5byA5YWzKi9cclxuICAgIHByaXZhdGUgb3BlcmF0ZVN3aXRjaDogYm9vbGVhbjtcclxuICAgIC8qKuaVjOS6uiovXHJcbiAgICBwcml2YXRlIGVuZW15OiBMYXlhLlByZWZhYjtcclxuICAgIC8qKuiuoeaXtuWZqCovXHJcbiAgICBwcml2YXRlIHRpbWVyOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuiuoeaXtuWZqOi/m+W6puadoSovXHJcbiAgICBwcml2YXRlIHRpbWVTY2hlZHVsZTogTGF5YS5Qcm9ncmVzc0JhcjtcclxuXHJcbiAgICAvKirngrnlh7vmrKHmlbDorrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBjbGlja3NDb3VudDogbnVtYmVyO1xyXG4gICAgLyoq5q+P54K55Lik5qyh5ZCO55qE57OW5p6c6aKc6Imy5ZCN56ewKi9cclxuICAgIHByaXZhdGUgY2xpY2tzTmFtZUFycjogQXJyYXk8c3RyaW5nPjtcclxuICAgIC8qKuato+ehruezluaenOeahOWQjeWtlyovXHJcbiAgICBwcml2YXRlIHJpZ2h0TmFtZTogQXJyYXk8c3RyaW5nPjtcclxuICAgIC8qKumUmeivr+ezluaenOeahOWQjeWtlyovXHJcbiAgICBwcml2YXRlIGVycm9yTmFtZTogQXJyYXk8c3RyaW5nPjtcclxuICAgIC8qKuezluaenOaAu+WQjeensOWQiOmbhiovXHJcbiAgICBwcml2YXRlIGNhbmR5TmFtZUFycjogQXJyYXk8c3RyaW5nPjtcclxuICAgIC8qKuezluaenOaAu+WQjeensOWQiOmbhiovXHJcbiAgICBwcml2YXRlIGFscmVhZHlHcm91cDogQXJyYXk8bnVtYmVyPjtcclxuICAgIC8qKuWIhuaVsCovXHJcbiAgICBwcml2YXRlIHNjb3JlTGFiZWw6IExheWEuRm9udENsaXA7XHJcbiAgICAvKirlpZblirHmj5DnpLrmloflrZcqL1xyXG4gICAgcHJpdmF0ZSByZXdhcmRXb3JkczogTGF5YS5QcmVmYWI7XHJcbiAgICAvKirmlrDlu7rns5bmnpznmoTlvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBjcmVhdGVDYW5keTogYm9vbGVhbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaW5pdFByb3BlcnR5KCk7XHJcbiAgICAgICAgdGhpcy5idXR0b25DbGluaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+WMluS4gOS6m+WxnuaApyovXHJcbiAgICBpbml0UHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZSA9IHRoaXMuc2VsZi5zY2VuZTtcclxuICAgICAgICB0aGlzLmNsaWNrc0NvdW50ID0gMDtcclxuICAgICAgICB0aGlzLmNsaWNrc05hbWVBcnIgPSBbXTtcclxuICAgICAgICB0aGlzLnJpZ2h0TmFtZSA9IFtdO1xyXG4gICAgICAgIHRoaXMuZXJyb3JOYW1lID0gW107XHJcbiAgICAgICAgdGhpcy5hbHJlYWR5R3JvdXAgPSBbXTtcclxuXHJcbiAgICAgICAgdGhpcy5jYW5keVBhcmVudCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uY2FuZHlQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5jYW5keV9FeHBsb2RlID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5jYW5keV9FeHBsb2RlXHJcbiAgICAgICAgdGhpcy5jYW5keV9FeHBsb2RlUGFyZW50ID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5jYW5keV9FeHBsb2RlUGFyZW50O1xyXG4gICAgICAgIHRoaXMuc2NvcmVMYWJlbCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc2NvcmVMYWJlbDtcclxuICAgICAgICB0aGlzLmNhbmR5TmFtZUFyciA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uY2FuZHlOYW1lQXJyO1xyXG4gICAgICAgIHRoaXMudGltZXIgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnRpbWVyO1xyXG4gICAgICAgIHRoaXMucmV3YXJkV29yZHMgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJld2FyZFdvcmRzO1xyXG5cclxuICAgICAgICB0aGlzLnRpbWVTY2hlZHVsZSA9IHRoaXMudGltZXIuZ2V0Q2hpbGRCeU5hbWUoJ3RpbWVTY2hlZHVsZScpIGFzIExheWEuUHJvZ3Jlc3NCYXI7XHJcbiAgICAgICAgdGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPSAxO1xyXG4gICAgICAgIC8vIHRoaXMub3BlcmF0ZVN3aXRjaCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5zZWxmWydPcGVyYXRpb25Db250cm9sJ10gPSB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuaTjeS9nOaMiemSrueahOeCueWHu+S6i+S7tiovXHJcbiAgICBidXR0b25DbGluaygpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2VsZi5fY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLl9jaGlsZHJlbltpXS5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5fY2hpbGRyZW5baV0ub24oTGF5YS5FdmVudC5NT1VTRV9NT1ZFLCB0aGlzLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuX2NoaWxkcmVuW2ldLm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMudXApO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYuX2NoaWxkcmVuW2ldLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKirliKTmlq3mjInkuIvnmoTmjInpkq7lkozlh4blpIfkvY3nva7nmoTns5bmnpzmmK/lkKbljLnphY07XHJcbiAgICAgKiDlpoLmnpzljLnphY3vvIzpgqPkuYjnnIvkuIvns5bmnpzkuIrpnaLlhpnnmoTlh6DmrKHngrnlh7vmrKHmlbDvvIzpnIDopoHov57nu63ngrnlh7vliLDov5nkuKrmrKHmlbDmiY3lj6/ku6XlkIPns5bmnpxcclxuICAgICAqIOWmguaenOasoeaVsOayoeaciei+vuWIsO+8jOWNtOeCueS6huWPpuS4gOenjeaMiemSru+8jOmCo+S5iOWJjemdoueahOasoeaVsOS8mumHjee9ru+8jOW5tuS4lOWHuueOsOS4gOS4quaAqueJqVxyXG4gICAgICog5aaC5p6c5LiN5Yy56YWN77yM6K+05piO54K56ZSZ5LqG77yM57OW5p6c5Lya6Lez5Yiw5aSW6Z2i5Y+Y5oiQ5LiA5Liq5oCq54mpLOWImeWHuueOsOS4gOS4quaAqueJqVxyXG4gICAgICovXHJcbiAgICBkb3duKGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm9wZXJhdGVTd2l0Y2gpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNsaWNrc0NvdW50Kys7XHJcbiAgICAgICAgLy8g6YCa6L+H54K55Ye755qE5oyJ6ZKu5Yy56YWN5a+55bqU55qE57OW5p6c57G75Z6LXHJcbiAgICAgICAgc3dpdGNoIChldmVudC5jdXJyZW50VGFyZ2V0Lm5hbWUpIHtcclxuICAgICAgICAgICAgY2FzZSAncmVkQnV0dG9uJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xpY2tzTmFtZUFyci5wdXNoKCdyZWRDYW5keV9fXycpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ3llbGxvd0J1dHRvbic6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsaWNrc05hbWVBcnIucHVzaCgneWVsbG93Q2FuZHknKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdncmVlbkJ1dHRvbic6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsaWNrc05hbWVBcnIucHVzaCgnZ3JlZW5DYW5keV8nKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdibHVlQnV0dG9uJzpcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xpY2tzTmFtZUFyci5wdXNoKCdibHVlQ2FuZHlfXycpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDkuKTkuKTlr7nmr5TliKTmlq3kuYvlkI7muIXnqbrov5nkuKrmlbDnu4TvvIzlvZPngrnlh7vmrKHmlbDmmK8y55qE5YCN5pWw5pe26L+b6KGM5a+55q+UXHJcbiAgICAgICAgaWYgKHRoaXMuY2xpY2tzQ291bnQgJSAyID09PSAwICYmIHRoaXMuY2xpY2tzQ291bnQgPj0gMikge1xyXG4gICAgICAgICAgICB0aGlzLmNsaWNrVHdvQ29tcGFyZU5hbWUoKTsvL+esrOS6jOasoeeCueWHu+WvueavlFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xpY2tPbmVDb21wYXJlTmFtZSgpOy8v56ys5LiA5qyh54K55Ye75a+55q+UXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOeCueWujOe7k+eul1xyXG4gICAgICAgIGlmICh0aGlzLmNsaWNrc0NvdW50ID09PSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnN0YXJ0Um93ICogMikge1xyXG4gICAgICAgICAgICB0aGlzLnNldHRsZW1lbnQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zY2FsZSgwLjksIDAuOSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq54K55Ye75Lik5qyh5LmL5ZCO5a+55q+U5ZCN56ewXHJcbiAgICAgKiDngrnlh7vmrKHmlbDlkoznu4TmlbDpg73mmK/lm7rlrprnmoTvvIzliIbliKvmmK8xMOasoeWSjDXnu4RcclxuICAgICAq5omA5Lul54K55Ye75LqGMuasoeWvueW6lOeahOWwseaYr+esrDDnu4TvvIw05qyh5bCx5piv56ysMee7hC4uLi4uLlxyXG4gICAgKi9cclxuICAgIGNsaWNrVHdvQ29tcGFyZU5hbWUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IG5hbWVBcnIgPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBjYW5keSA9IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuW2ldO1xyXG4gICAgICAgICAgICBpZiAoY2FuZHlbXCJDYW5keVwiXS5ncm91cCA9PT0gKHRoaXMuY2xpY2tzQ291bnQgLSAyKSAvIDIpIHsvL+avj+eCueS4pOasoeWvueW6lOeahOezluaenOe7hFxyXG4gICAgICAgICAgICAgICAgbmFtZUFyci5wdXNoKGNhbmR5Lm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGZpcnN0Q2FuZHkgPSB0aGlzLmNhbmR5UGFyZW50LmdldENoaWxkQnlOYW1lKG5hbWVBcnJbMF0pIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgLy8g5paH5a2X5pi+56S6XHJcbiAgICAgICAgICAgICAgICBpZiAobmFtZUFyci5sZW5ndGggPj0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjb21wYXJlQXJyID0gW25hbWVBcnJbMF0uc3Vic3RyaW5nKDAsIDExKSwgbmFtZUFyclsxXS5zdWJzdHJpbmcoMCwgMTEpXVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIOWvueavlOS4pOS4quaVsOe7hOeci+eci+aYr+WQpuebuOetie+8jOaOkuW6j++8jOi9rOaIkOWtl+espuS4suaWueWPr+WvueavlO+8m1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb21wYXJlQXJyLnNvcnQoKS50b1N0cmluZygpID09PSB0aGlzLmNsaWNrc05hbWVBcnIuc29ydCgpLnRvU3RyaW5nKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yaWdodEFuZFdyb25nU2hvdygncmlnaHQnLCBmaXJzdENhbmR5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yaWdodEFuZFdyb25nU2hvdygncmlnaHQnLCBjYW5keSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOato+ehrueahOezluaenOWQjeensOS/neWtmFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0TmFtZS5wdXNoKG5hbWVBcnJbMF0sIG5hbWVBcnJbMV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmlnaHRBbmRXcm9uZ1Nob3coJ3dyb25nJywgZmlyc3RDYW5keSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmlnaHRBbmRXcm9uZ1Nob3coJ3dyb25nJywgY2FuZHkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDplJnor6/nmoTns5bmnpzlkI3kv53lrZhcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvck5hbWUucHVzaChuYW1lQXJyWzBdLCBuYW1lQXJyWzFdKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLy8g5bey57uP54K56L+H55qE57OW5p6c55qE57uE5pWwXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hbHJlYWR5R3JvdXAucHVzaChjYW5keVtcIkNhbmR5XCJdLmdyb3VwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNsaWNrSGludCgpO1xyXG4gICAgICAgIHRoaXMuY2xpY2tzTmFtZUFyciA9IFtdOy8v5a+55q+U5ZCO5riF56m6XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5q+P54K55LiA5qyh55qE5pe25YCZ5Yik5pat54K55Ye75piv5ZCm5q2j56Gu77yM5bm25LiU57uZ5LqI5Yqo55S75o+Q56S6XHJcbiAgICAgKiDmraTml7bliIbkuLrkuInnp43mg4XlhrVcclxuICAgICAqIOS4gOS4qumDveS4jeWvue+8jOmCo+S5iOebtOaOpeWGmeS4iumUmeivr1xyXG4gICAgICog5a+55LiA5Liq77yM6YKj5LmI55u05o6l5YaZ5LiK5q2j56GuXHJcbiAgICAgKiDlpoLmnpzkuKTkuKrnm7jlkIzpg73lkowgdGhpcy5jbGlja3NOYW1lQXJyWzBd5Yy56YWN77yM6YKj5LmI5oiR5Y+q6ZyA6KaB5Yik5pat5LiA5Liq5bCx6KGMXHJcbiAgICAgKiDlm6DkuLrnrKzkuozmrKHngrnlh7vnmoTml7blgJnkvJrooaXkuIrmoIforrBcclxuICAgICovXHJcbiAgICBjbGlja09uZUNvbXBhcmVOYW1lKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBuYW1lQXJyID0gW107XHJcbiAgICAgICAgbGV0IGZpcnN0X05hbWU6IHN0cmluZyA9IG51bGw7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgY2FuZHkgPSB0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbltpXTtcclxuICAgICAgICAgICAgaWYgKGNhbmR5W1wiQ2FuZHlcIl0uZ3JvdXAgPT09ICh0aGlzLmNsaWNrc0NvdW50IC0gMSkgLyAyKSB7Ly/mr4/ngrnkuIDmrKHlr7nlupTnmoTns5bmnpznu4RcclxuICAgICAgICAgICAgICAgIGlmIChjYW5keS5uYW1lLnN1YnN0cmluZygwLCAxMSkgPT09IHRoaXMuY2xpY2tzTmFtZUFyclswXSkgeyAvL+WPquWIpOaWreS4gOasoe+8jOeEtuWQjui/lOWbnlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmlnaHRBbmRXcm9uZ1Nob3coJ3JpZ2h0JywgY2FuZHkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBudW1iZXLnlKjkuo7orrDlvZXnrKzlh6DmrKHlvqrnjq/vvIzmnIDlpJrkuKTmrKHlvqrnjq9cclxuICAgICAgICAgICAgICAgICAgICBuYW1lQXJyLnB1c2goY2FuZHkubmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWVBcnIubGVuZ3RoID09PSAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOW9k25hbWVBcnIubGVuZ3RoPTLnmoTml7blgJnor7TmmI7kuIDkuKrpg73kuI3lr7nvvIzpgqPkuYjnm7TmjqXnu5PmnZ/mnKznu4RcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZpcnN0Q2FuZHkgPSB0aGlzLmNhbmR5UGFyZW50LmdldENoaWxkQnlOYW1lKG5hbWVBcnJbMF0pIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0QW5kV3JvbmdTaG93KCd3cm9uZycsIGZpcnN0Q2FuZHkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0QW5kV3JvbmdTaG93KCd3cm9uZycsIGNhbmR5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy/ph43mlrDliJ3lp4vljJbkuIvkuIDnu4RcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGlja3NOYW1lQXJyID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xpY2tzQ291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvck5hbWUucHVzaChuYW1lQXJyWzBdLCBuYW1lQXJyWzFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbHJlYWR5R3JvdXAucHVzaChjYW5keVtcIkNhbmR5XCJdLmdyb3VwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGlja0hpbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiAg54K55Ye75q2j56Gu5ZKM6ZSZ6K+v55qE5pi+56S6XHJcbiAgICAgKiBAcGFyYW0gcmlnaHRBbmRXcm9uZyDmraPnoa7ov5jmmK/plJnor69cclxuICAgICAqIEBwYXJhbSBjYW5keSDlvZPliY3liKTmlq3ngrnlh7vnmoTns5bmnpxcclxuICAgICovXHJcbiAgICByaWdodEFuZFdyb25nU2hvdyhyaWdodEFuZFdyb25nLCBjYW5keSk6IHZvaWQge1xyXG4gICAgICAgIC8vIOWmguaenOacieaPkOekuuS6hu+8jOWwseWFiOWIoOmZpFxyXG4gICAgICAgIGxldCBvcmlnaW5JbWcgPSBjYW5keS5nZXRDaGlsZEJ5TmFtZSgnaW1nJykgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICBpZiAob3JpZ2luSW1nKSB7XHJcbiAgICAgICAgICAgIG9yaWdpbkltZy5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyDph43mlrDmmL7npLrkuIDkuKrmj5DnpLpcclxuICAgICAgICBsZXQgbm93SW1nID0gbmV3IExheWEuSW1hZ2UoKTtcclxuICAgICAgICBpZiAocmlnaHRBbmRXcm9uZyA9PSAncmlnaHQnKSB7XHJcbiAgICAgICAgICAgIG5vd0ltZy5za2luID0gJ2NhbmR5L3VpL+ato+ehruaPkOekui5wbmcnO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocmlnaHRBbmRXcm9uZyA9PSAnd3JvbmcnKSB7XHJcbiAgICAgICAgICAgIG5vd0ltZy5za2luID0gJ2NhbmR5L3VpL+mUmeivr+aPkOekui5wbmcnO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbm93SW1nLnBpdm90WCA9IG5vd0ltZy53aWR0aCAvIDI7XHJcbiAgICAgICAgbm93SW1nLnBpdm90WSA9IG5vd0ltZy5oZWlnaHQgLyAyO1xyXG4gICAgICAgIG5vd0ltZy5uYW1lID0gJ2ltZyc7XHJcbiAgICAgICAgbm93SW1nLnNjYWxlWCA9IDE7XHJcbiAgICAgICAgbm93SW1nLnNjYWxlWSA9IDE7XHJcbiAgICAgICAgY2FuZHkuYWRkQ2hpbGQobm93SW1nKTtcclxuICAgICAgICBpZiAoY2FuZHkueCA8IExheWEuc3RhZ2Uud2lkdGggLyAyKSB7XHJcbiAgICAgICAgICAgIG5vd0ltZy5wb3MoLTIwLCA1MCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbm93SW1nLnBvcygyMCArIGNhbmR5LndpZHRoLCA1MCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIC8vIOWHuueOsOWKqOeUu1xyXG4gICAgICAgIC8vIExheWEuVHdlZW4udG8obm93SW1nLCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxIH0sIDEwMCwgTGF5YS5FYXNlLmV4cG9JbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gfSksIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuaPkOekuuaIkeW6lOivpeeCueWTquS4gOe7hOS6hlxyXG4gICAgICog6L+Z5LiA57uE57uT5p2f5LmL5ZCO5o+Q56S65LiL5LiA57uEXHJcbiAgICAgKiDnhLblkI7ov5nkuIDnu4TnmoTmj5DnpLrmtojlpLFcclxuICAgICovXHJcbiAgICBjbGlja0hpbnQoKTogdm9pZCB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNhbmR5UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgcHJlc2VudEdyb3VwID0gdGhpcy5hbHJlYWR5R3JvdXBbdGhpcy5hbHJlYWR5R3JvdXAubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgICAgIGxldCBjYW5keSA9IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuW2ldO1xyXG4gICAgICAgICAgICBsZXQgY2FuZHlHcm91cCA9IGNhbmR5WydDYW5keSddLmdyb3VwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5hbHJlYWR5R3JvdXAubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2FuZHlHcm91cCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbmR5LnNjYWxlKDEuMSwgMS4xKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChjYW5keUdyb3VwID09PSBwcmVzZW50R3JvdXApIHtcclxuICAgICAgICAgICAgICAgICAgICBjYW5keS5zY2FsZSgxLCAxKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChjYW5keUdyb3VwID09PSBwcmVzZW50R3JvdXAgKyAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuZHkuc2NhbGUoMS4xLCAxLjEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKue7k+eul++8jOW9kzEw5Liq6YO954K55Ye75a6M5q+V5ZCO77yM5omn6KGM5ZCD57OW5p6c5oiW6ICF5piv5Y+Y5oiQ54iG54K457OW5p6c6L+H55qE5Yqo55S7Ki9cclxuICAgIHNldHRsZW1lbnQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5vcGVyYXRlU3dpdGNoID0gZmFsc2U7XHJcbiAgICAgICAgLy8g5q2j56Gu56e75Yqo5Yiw5Li76KeS5aSE5Yqg5bGe5oCnXHJcbiAgICAgICAgaWYgKHRoaXMucmlnaHROYW1lLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJpZ2h0TmFtZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgbGV0IGNhbmR5ID0gdGhpcy5jYW5keVBhcmVudC5nZXRDaGlsZEJ5TmFtZSh0aGlzLnJpZ2h0TmFtZVtpXSkgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2FuZHkueCA8IExheWEuc3RhZ2Uud2lkdGggLyAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuZHlbJ0NhbmR5J10uY2FuZHlUYWdSb2xlID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlXzAxO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbmR5WydDYW5keSddLmNhbmR5Rmx5VG9Sb2xlKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbmR5WydDYW5keSddLmNhbmR5VGFnUm9sZSA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10ucm9sZV8wMjtcclxuICAgICAgICAgICAgICAgICAgICBjYW5keVsnQ2FuZHknXS5jYW5keUZseVRvUm9sZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOmUmeivr+eahOWPmOaIkOaVjOS6ulxyXG4gICAgICAgIGlmICh0aGlzLmVycm9yTmFtZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5lcnJvck5hbWUubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBjYW5keSA9IHRoaXMuY2FuZHlQYXJlbnQuZ2V0Q2hpbGRCeU5hbWUodGhpcy5lcnJvck5hbWVbal0pIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW5keWJlY29tZUVuZW15KGNhbmR5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFkZGl0aW9uQXdhcmQoKTtcclxuICAgICAgICAvLyDmuIXnqbpcclxuICAgICAgICB0aGlzLnJpZ2h0TmFtZSA9IFtdO1xyXG4gICAgICAgIHRoaXMuZXJyb3JOYW1lID0gW107XHJcbiAgICAgICAgdGhpcy5jbGlja3NDb3VudCA9IDA7XHJcbiAgICAgICAgdGhpcy5jbGlja3NOYW1lQXJyID0gW107XHJcbiAgICAgICAgdGhpcy5hbHJlYWR5R3JvdXAgPSBbXTtcclxuXHJcbiAgICAgICAgLy/lj5HlsITns5bmnpzpooTlpIfliqjnlLvvvIznm5HlkKzov5nkuKrliqjnlLvlrozmiJDlkI7lj5HlsITns5bmnpxcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLmNhbmR5TGF1bmNoXzAxLnBsYXkoJ3ByZXBhcmUnLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5jYW5keUxhdW5jaF8wMi5wbGF5KCdwcmVwYXJlJywgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuiuoeaXtuWZqOaOp+WItlxyXG4gICAgICog5b2T5pe26Ze05bCP5LqO6Zu255qE5pe25YCZ5omA5pyJ6L+Y5rKh5pyJ54K55Ye755qE57OW5p6c55u05o6l5Y+Y5oiQ5pWM5Lq6XHJcbiAgICAgKiDlubbkuJTnu5PnrpfvvIzph43nva7lsZ7mgKdcclxuICAgICovXHJcbiAgICB0aW1lckNvbnRyb2woKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZVNjaGVkdWxlLnZhbHVlID4gMCAmJiB0aGlzLm9wZXJhdGVTd2l0Y2gpIHtcclxuICAgICAgICAgICAgdGhpcy50aW1lU2NoZWR1bGUudmFsdWUgLT0gMC4wMDI1O1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPD0gMCAmJiB0aGlzLm9wZXJhdGVTd2l0Y2gpIHtcclxuICAgICAgICAgICAgLy8g5rKh5pyJ54K55Ye76L+H55qE5YWo6YOo5Y+Y5oiQ5pWM5Lq6LOWHj+WOu+eCuemUmeeahOezluaenFxyXG4gICAgICAgICAgICBsZXQgZ3JvdXBBcnIgPSBbMCwgMSwgMiwgMywgNF1cclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmFscmVhZHlHcm91cC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBncm91cEFyci5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmFscmVhZHlHcm91cFtpXSA9PT0gZ3JvdXBBcnJbal0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXBBcnIuc2hpZnQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8g5oqK5rKh5pyJ54K55Ye755qE5Y+Y5oiQ5pWM5Lq6XHJcbiAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgdGhpcy5jYW5keVBhcmVudC5fY2hpbGRyZW4ubGVuZ3RoOyBrKyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBjYW5keSA9IHRoaXMuY2FuZHlQYXJlbnQuX2NoaWxkcmVuW2tdIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgbCA9IDA7IGwgPCBncm91cEFyci5sZW5ndGg7IGwrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYW5keVtcIkNhbmR5XCJdLmdyb3VwID09PSBncm91cEFycltsXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbmR5YmVjb21lRW5lbXkoY2FuZHkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyDngrnlh7vov4fnmoTnu5PnrpdcclxuICAgICAgICAgICAgdGhpcy5zZXR0bGVtZW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoq5qC55o2u6L+b5bqm5p2h5Ymp5L2Z55qE5pe26Ze057uZ5LqI5aWW5Yqx5Yqg5oiQXHJcbiAgICAgKiDliIbmrrXnu5nkuojkuI3lkIznmoTlpZblirFcclxuICAgICAqIOWmguaenOacieS4gOS4queCuemUmeS6hu+8jOmDveS4jeS8mue7meS6iOeJueauiuWlluWKsVxyXG4gICAgKi9cclxuICAgIGFkZGl0aW9uQXdhcmQoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuZXJyb3JOYW1lLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy50aW1lU2NoZWR1bGUudmFsdWUgPiAwLjgpIHtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdFJld2FyZFdvcmRzKCflubLlvpfmvILkuq4nKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGltZVNjaGVkdWxlLnZhbHVlID4gMC42KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRSZXdhcmRXb3Jkcygn5aSq5qOS5LqGJyk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRpbWVTY2hlZHVsZS52YWx1ZSA+IDAuNCkge1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0UmV3YXJkV29yZHMoJ+eJm+earicpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKuaPkOekuuWlluWKseaWh+Wtl+eahOWIm+W7uiovXHJcbiAgICBjcmVhdFJld2FyZFdvcmRzKHdvcmQpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmV3YXJkV29yZHMgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdyZXdhcmRXb3JkcycsIHRoaXMucmV3YXJkV29yZHMuY3JlYXRlLCB0aGlzLnJld2FyZFdvcmRzKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZS5hZGRDaGlsZChyZXdhcmRXb3Jkcyk7XHJcbiAgICAgICAgcmV3YXJkV29yZHNbJ1Jld2FyZFdvcmRzJ10uY3JlYXRlV29yZHNBbmkod29yZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq54K56ZSZ5ZCO77yM57OW5p6c6Lez5Yiw5Zyw5LiK5Y+Y5oiQMeeIhueCuOezluaenFxyXG4gICAgICogQHBhcmFtIGNhbmR5IOi/meS4quezluaenOeahOS/oeaBr1xyXG4gICAgKi9cclxuICAgIGNhbmR5YmVjb21lRW5lbXkoY2FuZHk6IExheWEuU3ByaXRlKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5bem5Y+z5Lik5Liq5pa55ZCRXHJcbiAgICAgICAgbGV0IHBvaW50Oy8v5Zu65a6a5Zyw54K5XHJcbiAgICAgICAgbGV0IGV4cGxvZGVUYXJnZXQ7Ly/mlLvlh7vlr7nosaFcclxuICAgICAgICAvLyDmnIDnu4jkvY3nva5cclxuICAgICAgICBsZXQgbW92ZVg7XHJcbiAgICAgICAgbGV0IG1vdmVZO1xyXG4gICAgICAgIGlmIChjYW5keS54IDwgTGF5YS5zdGFnZS53aWR0aCAvIDIpIHtcclxuICAgICAgICAgICAgZXhwbG9kZVRhcmdldCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10ucm9sZV8wMTtcclxuICAgICAgICAgICAgcG9pbnQgPSBuZXcgTGF5YS5Qb2ludChjYW5keS54IC0gMjAwLCBjYW5keS55ICsgODApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGV4cGxvZGVUYXJnZXQgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDI7XHJcbiAgICAgICAgICAgIHBvaW50ID0gbmV3IExheWEuUG9pbnQoY2FuZHkueCArIDIwMCwgY2FuZHkueSArIDgwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5pKt5pS+57+76L2s5Yqo55S7XHJcbiAgICAgICAgaWYgKGNhbmR5WydDYW5keSddLnNrZWxldG9uKSB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAoY2FuZHkubmFtZS5zdWJzdHJpbmcoMCwgMTEpKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlICd5ZWxsb3dDYW5keSc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuZHlbJ0NhbmR5J10uc2tlbGV0b24ucGxheSgneWVsbG93X3R1cm5MZWZ0JywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdyZWRDYW5keV9fXyc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuZHlbJ0NhbmR5J10uc2tlbGV0b24ucGxheSgncmVkX3R1cm5MZWZ0JywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdibHVlQ2FuZHlfXyc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuZHlbJ0NhbmR5J10uc2tlbGV0b24ucGxheSgnYmx1ZV90dXJuTGVmdCcsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnZ3JlZW5DYW5keV8nOlxyXG4gICAgICAgICAgICAgICAgICAgIGNhbmR5WydDYW5keSddLnNrZWxldG9uLnBsYXkoJ2dyZWVuX3R1cm5MZWZ0JywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhbmR5WydDYW5keSddLnNrZWxldG9uLnBsYXliYWNrUmF0ZSg0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5mbGV3VG9Hcm91bmQoY2FuZHksIHBvaW50LCBleHBsb2RlVGFyZ2V0KTtcclxuICAgIH1cclxuXHJcbiAgICAvKirns5bmnpzpo57liLDlnLDkuIrnmoTliqjnlLtcclxuICAgICAqIEBwYXJhbSBjYW5keSDns5bmnpxcclxuICAgICAqIEBwYXJhbSB0YXJnZXRQIOebruagh+eCuVxyXG4gICAgICogQHBhcmFtIGV4cGxvZGVUYXJnZXQg6KKr54iG54K455qE55uu5qCHXHJcbiAgICAqL1xyXG4gICAgZmxld1RvR3JvdW5kKGNhbmR5LCB0YXJnZXRQLCBleHBsb2RlVGFyZ2V0KTogdm9pZCB7XHJcbiAgICAgICAgLy8g57OW5p6c5pys6LqrXHJcbiAgICAgICAgbGV0IEhhbGZYO1xyXG4gICAgICAgIGxldCBIYWxmWTtcclxuICAgICAgICBsZXQgZGlzdGFuY2VQZXIgPSAyO1xyXG4gICAgICAgIGlmIChjYW5keS54ID4gTGF5YS5zdGFnZS53aWR0aCAvIDIpIHtcclxuICAgICAgICAgICAgSGFsZlggPSBjYW5keS54IC0gKGNhbmR5LnggLSB0YXJnZXRQLngpIC8gZGlzdGFuY2VQZXI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgSGFsZlggPSBjYW5keS54ICsgKHRhcmdldFAueCAtIGNhbmR5LngpIC8gZGlzdGFuY2VQZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEhhbGZZID0gY2FuZHkueSAtIDEwMDtcclxuICAgICAgICAvLyDnrKzkuIDmraXpo57lpKnmlL7lpKdcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKGNhbmR5LCB7IHg6IEhhbGZYLCB5OiBIYWxmWSwgc2NhbGVYOiAxLjMsIHNjYWxlWTogMS4zIH0sIDUwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICAvLyDnrKzkuozmraXpmY3okL3nvKnlsI9cclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhjYW5keSwgeyB4OiB0YXJnZXRQLngsIHk6IHRhcmdldFAueSwgc2NhbGVYOiAwLjksIHNjYWxlWTogMC45IH0sIDQwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAvLyDnlJ/miJAx5Liq54iG54K457OW5p6cXHJcbiAgICAgICAgICAgICAgICBsZXQgZXhwbG9kZUNhbmR5ID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5jcmVhdGVFeHBsb2RlQ2FuZHkoY2FuZHkubmFtZSk7XHJcbiAgICAgICAgICAgICAgICBleHBsb2RlQ2FuZHkucG9zKGNhbmR5LngsIGNhbmR5LnkpO1xyXG4gICAgICAgICAgICAgICAgZXhwbG9kZUNhbmR5LnNjYWxlKDAuOSwgMC45KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZXhwbG9kZUFuaSh0aGlzLnNlbGZTY2VuZSwgZXhwbG9kZUNhbmR5LngsIGV4cGxvZGVDYW5keS55LCAnZGlzYXBwZWFyJywgOCwgMTAwMCk7XHJcbiAgICAgICAgICAgICAgICBjYW5keS5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgICAgICAvLyDlsYLnuqfmjpLluo9cclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZXhwbG9kZUNhbmR5ek9yZGVyKCk7XHJcbiAgICAgICAgICAgICAgICAvLyDnrKzkuInmraXlgZznlZnvvIzlu7bov5/nu5nkuojniIbngrjnm67moIdcclxuICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8oY2FuZHksIHt9LCA1MDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGV4cGxvZGVDYW5keVsnQ2FuZHlfRXhwbG9kZSddLmV4cGxvZGVUYXJnZXQgPSBleHBsb2RlVGFyZ2V0O1xyXG4gICAgICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICAvLyDns5bmnpznmoTlvbHlrZDlpITnkIZcclxuICAgICAgICBsZXQgc2hhZG93ID0gY2FuZHkuZ2V0Q2hpbGRCeU5hbWUoJ3NoYWRvdycpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgLy8g5ouJ5byA6Led56a75bm257yp5bCPXHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byhzaGFkb3csIHsgeDogLTIwLCB5OiA4MCwgc2NhbGVYOiAwLjgsIHNjYWxlWTogMC44LCB9LCAzMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyDnrKzkuozpg6jlm57lvZJcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhzaGFkb3csIHsgeDogMCwgeTogMCwgc2NhbGVYOiAxLCBzY2FsZVk6IDEgfSwgNTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgfSksIDApO1xyXG4gICAgICAgIH0pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirnp7vliqgqL1xyXG4gICAgbW92ZShldmVudCk6IHZvaWQge1xyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcbiAgICAvKirmiqzotbcqL1xyXG4gICAgdXAoZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNjYWxlKDEsIDEpO1xyXG4gICAgfVxyXG4gICAgLyoq5Ye65bGP5bmVKi9cclxuICAgIG91dChldmVudCk6IHZvaWQge1xyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5Li76KeS5YWo6YOo5q275Lqh5ri45oiP57uT5p2fXHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZ2FtZU92ZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5vcGVyYXRlU3dpdGNoID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/orqHml7blmahcclxuICAgICAgICB0aGlzLnRpbWVyQ29udHJvbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJhbmtpbmcgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiogQHByb3Age25hbWU6YnV0X0Nsb3NlLCB0aXBzOlwi5YWz6Zet5oyJ6ZKuXCIsIHR5cGU6Tm9kZSwgZGVmYXVsdDp0cnVlfSovXHJcbiAgICBwdWJsaWMgYnV0X0Nsb3NlOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpjb250ZW50LCB0aXBzOlwi5YaF5a65XCIsIHR5cGU6Tm9kZSwgZGVmYXVsdDp0cnVlfSovXHJcbiAgICBwdWJsaWMgY29udGVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6YmFja2dyb3VuZCwgdGlwczpcIuWGheWuuVwiLCB0eXBlOk5vZGUsIGRlZmF1bHQ6dHJ1ZX0qL1xyXG4gICAgcHVibGljIGJhY2tncm91bmQ6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIHByaXZhdGUgc2VsZjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG4gICAgLyoq5Yid5aeL5YyWKi9cclxuICAgIC8qKuWIneWni+WMluS4gOS6m+mdnuWKqOeUu+WxnuaApyovXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kLmFscGhhID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kLndpZHRoID0gTGF5YS5zdGFnZS53aWR0aDtcclxuICAgICAgICB0aGlzLmJhY2tncm91bmQuaGVpZ2h0ID0gTGF5YS5zdGFnZS5oZWlnaHQ7XHJcblxyXG4gICAgICAgIHRoaXMuY29udGVudC54ID0gTGF5YS5zdGFnZS53aWR0aCAvIDI7XHJcbiAgICAgICAgdGhpcy5jb250ZW50LnkgPSBMYXlhLnN0YWdlLmhlaWdodCAvIDI7XHJcbiAgICAgICAgdGhpcy5jb250ZW50LnNjYWxlKDAsIDApO1xyXG4gICAgICAgIHRoaXMuY29udGVudC5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5hcHBlYXIoKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgLy/liqDovb3kuIDkuKpqc29u5ZKM5Zu+6ZuGXHJcbiAgICAgICAgICAgIExheWEubG9hZGVyLmxvYWQoW1wicmVzL2F0bGFzL3Rlc3QuYXRsYXNcIl0sIExheWEuSGFuZGxlci5jcmVhdGUobnVsbCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy/liqDovb3lrozmiJBcclxuXHJcbiAgICAgICAgICAgICAgICAvL+S9v+eUqOaOpeWPo+WwhuWbvumbhumAj+S8oOWIsOWtkOWfn1xyXG4gICAgICAgICAgICAgICAgTGF5YS5NaW5pQWRwdGVyLnNlbmRBdGxhc1RvT3BlbkRhdGFDb250ZXh0KFwicmVzL2F0bGFzL3Rlc3QuYXRsYXNcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IHd4OiBhbnkgPSBMYXlhLkJyb3dzZXIud2luZG93Lnd4O1xyXG4gICAgICAgICAgICAgICAgbGV0IG9wZW5EYXRhQ29udGV4dDogYW55ID0gd3guZ2V0T3BlbkRhdGFDb250ZXh0KCk7XHJcbiAgICAgICAgICAgICAgICBvcGVuRGF0YUNvbnRleHQucG9zdE1lc3NhZ2UoeyBhY3Rpb246ICdyYW5raW5nJyB9KTtcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoq5Ye65Zy65Yqo55S7Ki9cclxuICAgIGFwcGVhcigpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuY29udGVudCwgeyByb3RhdGlvbjogNzIwLCBhbHBoYTogMSwgc2NhbGVYOiAxLCBzY2FsZVk6IDEgfSwgNTUwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLnJvdGF0aW9uID0gMDtcclxuICAgICAgICAgICAgdGhpcy5idG5DbGlrQ2xpbmsoKTtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmFja2dyb3VuZCwgeyBhbHBoYTogMC42IH0sIDU1MCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKua2iOWkseWKqOeUuyovXHJcbiAgICB2YW5pc2goKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLnBpdm90WCA9IExheWEuc3RhZ2Uud2lkdGggLyAyO1xyXG4gICAgICAgIHRoaXMuc2VsZi5waXZvdFkgPSBMYXlhLnN0YWdlLmhlaWdodCAvIDI7XHJcbiAgICAgICAgdGhpcy5zZWxmLnggPSBMYXlhLnN0YWdlLndpZHRoIC8gMjtcclxuICAgICAgICB0aGlzLnNlbGYueSA9IExheWEuc3RhZ2UuaGVpZ2h0IC8gMjtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuc2VsZiwgeyByb3RhdGlvbjogLTcyMCwgYWxwaGE6IDAsIHNjYWxlWDogMCwgc2NhbGVZOiAwLCB4OiAxNTAwIH0sIDcwMCwgTGF5YS5FYXNlLmV4cG9JbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirlvIDlkK/mjInpkq7ngrnlh7vkuovku7YqL1xyXG4gICAgYnRuQ2xpa0NsaW5rKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYnV0X0Nsb3NlLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5kb3duKTtcclxuICAgICAgICB0aGlzLmJ1dF9DbG9zZS5vbihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMubW92ZSk7XHJcbiAgICAgICAgdGhpcy5idXRfQ2xvc2Uub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy51cCk7XHJcbiAgICAgICAgdGhpcy5idXRfQ2xvc2Uub24oTGF5YS5FdmVudC5NT1VTRV9PVVQsIHRoaXMsIHRoaXMub3V0KTtcclxuICAgIH1cclxuXHJcbiAgICAvKirlhbPpl63mjInpkq7ngrnlh7vkuovku7YqL1xyXG4gICAgYnRuQ2xvc2VDbGluaygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmJ1dF9DbG9zZS5vZmYoTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLmRvd24pO1xyXG4gICAgICAgIHRoaXMuYnV0X0Nsb3NlLm9mZihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMubW92ZSk7XHJcbiAgICAgICAgdGhpcy5idXRfQ2xvc2Uub2ZmKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMudXApO1xyXG4gICAgICAgIHRoaXMuYnV0X0Nsb3NlLm9mZihMYXlhLkV2ZW50Lk1PVVNFX09VVCwgdGhpcywgdGhpcy5vdXQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuaMieS4iyovXHJcbiAgICBkb3duKGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5idXRfQ2xvc2Uuc2NhbGUoMC45LCAwLjkpO1xyXG4gICAgfVxyXG4gICAgLyoq56e75YqoKi9cclxuICAgIG1vdmUoZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmJ1dF9DbG9zZS5zY2FsZSgwLjksIDAuOSk7XHJcbiAgICB9XHJcbiAgICAvKirmiqzotbflop7liqDlsZ7mgKdcclxuICAgICAqIOeUseS6jui/memHjOeahOaMiemSruS4jeaYr+WPiuaXtua2iOWkse+8jOaJgOS7peimgeWFs+mXreeCueWHu+S6i+S7tlxyXG4gICAgKi9cclxuICAgIHVwKGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5idXRfQ2xvc2Uuc2NhbGUoMSwgMSk7XHJcbiAgICAgICAgdGhpcy52YW5pc2goKTtcclxuICAgIH1cclxuICAgIC8qKuWHuuWxj+W5lSovXHJcbiAgICBvdXQoZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmJ1dF9DbG9zZS5zY2FsZSgxLCAxKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBSZXN1cmdlbmNlIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoq6Ieq5bexKi9cclxuICAgIHByaXZhdGUgc2VsZjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmiYDlsZ7lnLrmma8qL1xyXG4gICAgcHJpdmF0ZSBzZWxmU2NlbmU6IExheWEuU2NlbmU7XHJcbiAgICAvKirpu5HoibLog4zmma/pga7nvakqL1xyXG4gICAgcHJpdmF0ZSBiYWNrZ3JvdW5kOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuWGheWuue+8jOmZpOS6huiDjOaZr+WbviovXHJcbiAgICBwcml2YXRlIGNvbnRlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5aSN5rS75oyJ6ZKuKi9cclxuICAgIHByaXZhdGUgcmVzdXJnZW5jZV9CdG46IExheWEuSW1hZ2U7XHJcbiAgICAvKirlgJLorqHml7bmlbDlrZflupXmnb8qL1xyXG4gICAgcHJpdmF0ZSBkaWdpdGFsUGxhdGU6IExheWEuSW1hZ2U7XHJcbiAgICAvKirlgJLorqHml7bmlbDlrZcqL1xyXG4gICAgcHJpdmF0ZSBkaWdpdGFsOiBMYXlhLkZvbnRDbGlwO1xyXG5cclxuICAgIC8qKuaXtumXtOe6vyovXHJcbiAgICBwcml2YXRlIHRpbWVMaW5lOiBudW1iZXI7XHJcbiAgICAvKirlgJLorqHml7blvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBjb3VudGRvd246IGJvb2xlYW47XHJcblxyXG4gICAgLyoq5bGe5oCn5re75Yqg5pWw5a2XKi9cclxuICAgIHByaXZhdGUgaGludFdvcmQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKue7k+eulyovXHJcbiAgICBwcml2YXRlIHNldHRsZW1lbnQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yid5aeL5YyWKi9cclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGYucGl2b3RYID0gMDtcclxuICAgICAgICB0aGlzLnNlbGYucGl2b3RZID0gMDtcclxuICAgICAgICB0aGlzLnNlbGYueCA9IHRoaXMuc2VsZi5waXZvdFg7XHJcbiAgICAgICAgdGhpcy5zZWxmLnkgPSB0aGlzLnNlbGYucGl2b3RZO1xyXG5cclxuICAgICAgICB0aGlzLnNlbGZTY2VuZSA9IHRoaXMuc2VsZi5zY2VuZSBhcyBMYXlhLlNjZW5lO1xyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnYmFja2dyb3VuZCcpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZC5hbHBoYSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuY29udGVudCA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnY29udGVudCcpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuY29udGVudC5hbHBoYSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMucmVzdXJnZW5jZV9CdG4gPSB0aGlzLmNvbnRlbnQuZ2V0Q2hpbGRCeU5hbWUoJ3Jlc3VyZ2VuY2VfQnRuJykgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLnJlc3VyZ2VuY2VfQnRuLnggPSAtMTIwMDtcclxuXHJcbiAgICAgICAgdGhpcy5kaWdpdGFsUGxhdGUgPSB0aGlzLmNvbnRlbnQuZ2V0Q2hpbGRCeU5hbWUoJ2RpZ2l0YWxQbGF0ZScpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5kaWdpdGFsUGxhdGUueCA9IDEyMDA7XHJcblxyXG4gICAgICAgIHRoaXMuZGlnaXRhbCA9IHRoaXMuY29udGVudC5nZXRDaGlsZEJ5TmFtZSgnZGlnaXRhbCcpIGFzIExheWEuRm9udENsaXA7XHJcbiAgICAgICAgdGhpcy5kaWdpdGFsLnNjYWxlWCA9IDA7XHJcbiAgICAgICAgdGhpcy5kaWdpdGFsLnNjYWxlWSA9IDA7XHJcbiAgICAgICAgdGhpcy5kaWdpdGFsLmFscGhhID0gMDtcclxuICAgICAgICB0aGlzLmRpZ2l0YWwudmFsdWUgPSAnNSc7XHJcbiAgICAgICAgdGhpcy50aW1lTGluZSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuY291bnRkb3duID0gZmFsc2U7XHJcblxyXG4gICAgICAgIHRoaXMuaGludFdvcmQgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLmhpbnRXb3JkO1xyXG4gICAgICAgIHRoaXMuc2V0dGxlbWVudCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc2V0dGxlbWVudDtcclxuXHJcbiAgICAgICAgTGF5YS50aW1lci5mcmFtZU9uY2UoMTAwLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwZWFyQW5pKCk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgdGhpcy5hZGFwdGl2ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuiHqumAguW6lCovXHJcbiAgICBhZGFwdGl2ZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmJhY2tncm91bmQud2lkdGggPSBMYXlhLnN0YWdlLndpZHRoO1xyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZC5oZWlnaHQgPSBMYXlhLnN0YWdlLmhlaWdodDtcclxuICAgICAgICB0aGlzLmNvbnRlbnQueCA9IExheWEuc3RhZ2Uud2lkdGggLyAyO1xyXG4gICAgICAgIHRoaXMuY29udGVudC55ID0gTGF5YS5zdGFnZS5oZWlnaHQgLyAyO1xyXG4gICAgICAgIHRoaXMuc2VsZi53aWR0aCA9IExheWEuc3RhZ2Uud2lkdGg7XHJcbiAgICAgICAgdGhpcy5zZWxmLmhlaWdodCA9IExheWEuc3RhZ2UuaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuc2VsZi5hbHBoYSA9IDE7XHJcbiAgICAgICAgdGhpcy5zZWxmLnNjYWxlKDEsIDEpO1xyXG4gICAgICAgIHRoaXMuc2VsZi5yb3RhdGlvbiA9IDA7XHJcbiAgICAgICAgdGhpcy5zZWxmLnggPSAwO1xyXG4gICAgICAgIHRoaXMuc2VsZi55ID0gMDtcclxuICAgIH1cclxuXHJcbiAgICAvKirliqjnlLvliJ3lp4vljJYqL1xyXG4gICAgYXBwZWFyQW5pKCk6IHZvaWQge1xyXG5cclxuICAgICAgICAvLyDmgLvkvZPmmL7njrBcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuY29udGVudCwgeyBhbHBoYTogMSB9LCA1NTAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgLy8g5aSN5rS75oyJ6ZKuXHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLnJlc3VyZ2VuY2VfQnRuLCB7IHg6IDM3NSwgcm90YXRpb246IDcyMCB9LCA1NTAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzdXJnZW5jZV9CdG4ucm90YXRpb24gPSAwO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgLy8g5pWw5a2X5Zyw5p2/XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmRpZ2l0YWxQbGF0ZSwgeyB4OiAzNzUsIHJvdGF0aW9uOiA3MjAgfSwgNTUwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmRpZ2l0YWxQbGF0ZS5yb3RhdGlvbiA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMucmVzdXJnZW5jZV9CdG5DbGluaygpO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgLy8g6IOM5pmvXHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJhY2tncm91bmQsIHsgYWxwaGE6IDAuNyB9LCA1NTAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgLy8g5YCS6K6h5pe25pWw5a2X55qE5YCS6K6h5pe25Yqo55S7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmRpZ2l0YWwsIHsgc2NhbGVYOiAxLjIsIHNjYWxlWTogMS4yLCBhbHBoYTogMSB9LCA3MDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50ZG93biA9IHRydWU7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliIfmjaLnlYzpnaLnmoTmtojlpLHliqjnlLtcclxuICAgICAqIEBwYXJhbSB0eXBlIOWIh+aNouWIsOS7gOS5iOeVjOmdolxyXG4gICAgKi9cclxuICAgIGN1dFRudGVyZmFjZSh0eXBlKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLnBpdm90WCA9IExheWEuc3RhZ2Uud2lkdGggLyAyO1xyXG4gICAgICAgIHRoaXMuc2VsZi5waXZvdFkgPSBMYXlhLnN0YWdlLmhlaWdodCAvIDI7XHJcbiAgICAgICAgdGhpcy5zZWxmLnggPSB0aGlzLnNlbGYucGl2b3RYO1xyXG4gICAgICAgIHRoaXMuc2VsZi55ID0gdGhpcy5zZWxmLnBpdm90WTtcclxuICAgICAgICAvLyDnp7vliqhcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuc2VsZiwgeyB4OiAxNTAwLCByb3RhdGlvbjogNzIwLCBzY2FsZVg6IDAsIHNjYWxlWTogMCwgYWxwaGE6IDAgfSwgNzAwLCBMYXlhLkVhc2UuZXhwb0luLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdtYWluJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlUmVzdXJnZW5jZUFuaSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgICAgIC8vIOiDjOaZr1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5iYWNrZ3JvdW5kLCB7IGFscGhhOiAwIH0sIDQ1MCwgTGF5YS5FYXNlLmV4cG9JbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirkuLvop5LlpI3mtLvph43mlrDlvIDlp4sqL1xyXG4gICAgcm9sZVJlc3VyZ2VuY2VBbmkoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJvbGVfMDEgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDE7XHJcbiAgICAgICAgbGV0IHJvbGVfMDIgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVfMDI7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byhyb2xlXzAxLCB7IGFscGhhOiAxIH0sIDcwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGludFdvcmRNb3ZlKCk7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHJvbGVfMDIsIHsgYWxwaGE6IDEgfSwgNzAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirlsZ7mgKflop7liqDmj5DnpLrliqjnlLsqL1xyXG4gICAgaGludFdvcmRNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBkZWxheWVkID0gMDtcclxuICAgICAgICBsZXQgTWFpblNjZW5lQ29udHJvbCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ107XHJcbiAgICAgICAgbGV0IHJvbGVfMDEgPSBNYWluU2NlbmVDb250cm9sLnJvbGVfMDE7XHJcbiAgICAgICAgbGV0IHJvbGVfMDIgPSBNYWluU2NlbmVDb250cm9sLnJvbGVfMDI7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5mcmFtZU9uY2UoZGVsYXllZCwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHJvbGVfMDEsICfmlLvlh7vph4wnLCAyMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1haW5TY2VuZUNvbnRyb2wuY3JlYXRlSGludFdvcmQocm9sZV8wMiwgJ+aUu+WHu+mHjCcsIDIwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZV8wMVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYXR0YWNrVmFsdWUgKz0gMjA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGVfMDJbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1ZhbHVlICs9IDIwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1haW5TY2VuZUNvbnRyb2wuY3JlYXRlSGludFdvcmQocm9sZV8wMSwgJ+eUn+WRvScsIDEwMDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHJvbGVfMDIsICfnlJ/lkb0nLCAxMDAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZV8wMVsnUm9sZSddLnJvbGVfcHJvcGVydHkuYmxvb2QgPSAxMDAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5ibG9vZCA9IDEwMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgTWFpblNjZW5lQ29udHJvbC5jcmVhdGVIaW50V29yZChyb2xlXzAxLCAn5YWs6bih6YCf5bqmJywgMjApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHJvbGVfMDIsICflhazpuKHpgJ/luqYnLCAyMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGVfMDFbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1NwZWVkICs9IDIwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb2xlXzAyWydSb2xlJ10ucm9sZV9wcm9wZXJ0eS5hdHRhY2tTcGVlZCArPSAyMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBNYWluU2NlbmVDb250cm9sLmNyZWF0ZUhpbnRXb3JkKHJvbGVfMDEsICfpmLLlvqHlipsnLCAxMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1haW5TY2VuZUNvbnRyb2wuY3JlYXRlSGludFdvcmQocm9sZV8wMiwgJ+mYsuW+oeWKmycsIDEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZV8wMVsnUm9sZSddLnJvbGVfcHJvcGVydHkuZGVmZW5zZSArPSAxMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZV8wMlsnUm9sZSddLnJvbGVfcHJvcGVydHkuZGVmZW5zZSArPSAxMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyDmkq3mlL7lrozmr5XkuYvlkI7lvIDlp4vmuLjmiI9cclxuICAgICAgICAgICAgICAgIGlmIChpID09PSAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXN1cmdlbmNlUHJvcGVydGllcygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBkZWxheWVkICs9IDI1O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirlvIDlp4vmiJbogIXph43mlrDlvIDlp4vmiYDpnIDmlLnlj5jnmoTlsZ7mgKcqL1xyXG4gICAgcmVzdXJnZW5jZVByb3BlcnRpZXMoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IE1haW5TY2VuZUNvbnRyb2wgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddO1xyXG4gICAgICAgIE1haW5TY2VuZUNvbnRyb2wuZ2FtZU92ZXIgPSBmYWxzZTtcclxuICAgICAgICBNYWluU2NlbmVDb250cm9sLnJvbGVfMDFbJ1JvbGUnXS5yb2xlRGVhdGggPSBmYWxzZTtcclxuICAgICAgICBNYWluU2NlbmVDb250cm9sLnJvbGVfMDJbJ1JvbGUnXS5yb2xlRGVhdGggPSBmYWxzZTtcclxuICAgICAgICBNYWluU2NlbmVDb250cm9sLm9wZXJhdGluZ1snT3BlcmF0aW9uQ29udHJvbCddLm9wZXJhdGVTd2l0Y2ggPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWkjea0u+aMiemSrueCueWHu+S6i+S7tiovXHJcbiAgICByZXN1cmdlbmNlX0J0bkNsaW5rKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucmVzdXJnZW5jZV9CdG4ub24oTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLmRvd24pO1xyXG4gICAgICAgIHRoaXMucmVzdXJnZW5jZV9CdG4ub24oTGF5YS5FdmVudC5NT1VTRV9NT1ZFLCB0aGlzLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgIHRoaXMucmVzdXJnZW5jZV9CdG4ub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy51cCk7XHJcbiAgICAgICAgdGhpcy5yZXN1cmdlbmNlX0J0bi5vbihMYXlhLkV2ZW50Lk1PVVNFX09VVCwgdGhpcywgdGhpcy5vdXQpO1xyXG4gICAgfVxyXG4gICAgZG93bihldmVudCk6IHZvaWQge1xyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMC45NSwgMC45NSk7XHJcbiAgICB9XHJcbiAgICAvKirnp7vliqgqL1xyXG4gICAgbW92ZShldmVudCk6IHZvaWQge1xyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcbiAgICAvKirmiqzotbflop7liqDlsZ7mgKcqL1xyXG4gICAgdXAoZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNjYWxlKDEsIDEpO1xyXG4gICAgICAgIHRoaXMuY291bnRkb3duID0gZmFsc2U7Ly/lgZzmraLor7vnp5JcclxuICAgICAgICB0aGlzLmN1dFRudGVyZmFjZSgnbWFpbicpO1xyXG4gICAgfVxyXG4gICAgLyoq5Ye65bGP5bmVKi9cclxuICAgIG91dChldmVudCk6IHZvaWQge1xyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yib5bu657uT566X55WM6Z2iKi9cclxuICAgIGNyZWF0ZVNldHRsZW1lbnQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g56iN5Yqg5bu25pe2XHJcbiAgICAgICAgTGF5YS50aW1lci5mcmFtZU9uY2UoMjAsIHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IHNldHRsZW1lbnQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdzZXR0bGVtZW50JywgdGhpcy5zZXR0bGVtZW50LmNyZWF0ZSwgdGhpcy5zZXR0bGVtZW50KSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgdGhpcy5zZWxmU2NlbmUuYWRkQ2hpbGQoc2V0dGxlbWVudCk7XHJcbiAgICAgICAgICAgIHNldHRsZW1lbnQucG9zKDAsIDApO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5YCS6K6h5pe2XHJcbiAgICAgICAgaWYgKHRoaXMuY291bnRkb3duKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGltZUxpbmUrKztcclxuICAgICAgICAgICAgLy8g562J5LqO6Zu255qE5pe25YCZ5Yib5bu657uT566X55WM6Z2iXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRpbWVMaW5lICUgNjAgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaWdpdGFsLnZhbHVlID0gKE51bWJlcih0aGlzLmRpZ2l0YWwudmFsdWUpIC0gMSkudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGlnaXRhbC5zY2FsZSgxLCAxKTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmRpZ2l0YWwudmFsdWUgPT09ICctMScpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvdW50ZG93biA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlU2V0dGxlbWVudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3V0VG50ZXJmYWNlKCdzZXR0bGVtZW50Jyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyDliqjnlLtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGlnaXRhbC5zY2FsZVggLT0gMC4wMDM7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpZ2l0YWwuc2NhbGVZIC09IDAuMDAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlR3ZWVuLmNsZWFyQWxsKHRoaXMpO1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXJBbGwodGhpcyk7XHJcbiAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoJ3Jlc3VyZ2VuY2UnLCB0aGlzLnNlbGYpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmV3YXJkV29yZHMgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiroh6rlt7EqL1xyXG4gICAgcHJpdmF0ZSBzZWxmOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaJgOWxnuWcuuaZryovXHJcbiAgICBwcml2YXRlIHNlbGZTY2VuZTogTGF5YS5TcHJpdGU7XHJcbiAgICAvKipZ6L2055qE5L2N572uKi9cclxuICAgIHByaXZhdGUgbG9jYXRpb25ZOiBudW1iZXI7XHJcbiAgICAvKirliIbmlbAqL1xyXG4gICAgcHJpdmF0ZSBzY29yZUxhYmVsOiBMYXlhLkZvbnRDbGlwO1xyXG4gICAgLyoq6ZyA6KaB5aKe5Yqg55qE5YiG5pWwKi9cclxuICAgIHByaXZhdGUgYWRkU2NvcmVOdW1iZXI6IG51bWJlcjtcclxuICAgIC8qKuWIhuaVsOmjmOWtl+eahOaPkOekuiovXHJcbiAgICBwcml2YXRlIGhpbnRXb3JkOiBMYXlhLlByZWZhYjtcclxuICAgIC8qKuexu+WeiyovXHJcbiAgICBwcml2YXRlIHdvcmRzVHlwZTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0UHJvcGVydHkoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0UHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZbJ1Jld2FyZFdvcmRzJ10gPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lID0gdGhpcy5zZWxmLnNjZW5lO1xyXG4gICAgICAgIHRoaXMuc2VsZi5hbHBoYSA9IDA7Ly/lh7rnjrDnmoTml7blgJnpmpDouqvvvIzmlrnkvr/lgZrliqjnlLtcclxuICAgICAgICB0aGlzLmxvY2F0aW9uWSA9IExheWEuc3RhZ2UuaGVpZ2h0ICogMiAvIDU7XHJcbiAgICAgICAgdGhpcy5zZWxmLnkgPSB0aGlzLmxvY2F0aW9uWTtcclxuICAgICAgICB0aGlzLnNlbGYucGl2b3RYID0gdGhpcy5zZWxmLndpZHRoIC8gMjtcclxuICAgICAgICB0aGlzLnNlbGYucGl2b3RZID0gdGhpcy5zZWxmLmhlaWdodCAvIDI7XHJcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5zY29yZUxhYmVsO1xyXG4gICAgICAgIHRoaXMuc2VsZi54ID0gMTIwMDtcclxuICAgICAgICB0aGlzLmhpbnRXb3JkID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5oaW50V29yZDtcclxuICAgIH1cclxuXHJcbiAgICAvKirpgJrov4fkvKDlhaXnmoTlj4LmlbDmnaXvvIzorr7nva7lsZ7mgKflm77niYflrZfnmoTmoLzlvI9cclxuICAgICAqIEBwYXJhbSB3b3JkIOWFt+S9k+Wtl+agt1xyXG4gICAgICogKi9cclxuICAgIGNyZWF0ZVdvcmRzQW5pKHdvcmQ6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIGxldCB1cmxfMDEgPSAnY2FuZHkv5o+Q56S65paH5a2XL+eJm+eari5wbmcnO1xyXG4gICAgICAgIGxldCB1cmxfMDIgPSAnY2FuZHkv5o+Q56S65paH5a2XL+WkquajkuS6hi5wbmcnO1xyXG4gICAgICAgIGxldCB1cmxfMDMgPSAnY2FuZHkv5o+Q56S65paH5a2XL+W5suW+l+a8guS6ri5wbmcnO1xyXG4gICAgICAgIC8vIOmBv+WFjeS7juWvueixoeaxoOaLv+WHuuadpeWQjumHjeWkjea3u+WKoFxyXG4gICAgICAgIGxldCBzcHJpdGU6IExheWEuSW1hZ2U7XHJcbiAgICAgICAgaWYgKCF0aGlzLnNlbGYuZ2V0Q2hpbGRCeU5hbWUoJ3dvcmQnKSkge1xyXG4gICAgICAgICAgICBzcHJpdGUgPSBuZXcgTGF5YS5JbWFnZTtcclxuICAgICAgICAgICAgdGhpcy5zZWxmLmFkZENoaWxkKHNwcml0ZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc3ByaXRlID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCd3b3JkJykgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNwcml0ZS5uYW1lID0gJ3dvcmQnO1xyXG4gICAgICAgIHNwcml0ZS5hbmNob3JYID0gMC41O1xyXG4gICAgICAgIHNwcml0ZS5hbmNob3JZID0gMC41O1xyXG4gICAgICAgIHN3aXRjaCAod29yZCkge1xyXG4gICAgICAgICAgICBjYXNlICfniZvnmq4nOlxyXG4gICAgICAgICAgICAgICAgc3ByaXRlLmxvYWRJbWFnZSh1cmxfMDEpO1xyXG4gICAgICAgICAgICAgICAgc3ByaXRlLnBvcygxNTAsIDIwKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkU2NvcmVOdW1iZXIgPSA1MDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn5aSq5qOS5LqGJzpcclxuICAgICAgICAgICAgICAgIHNwcml0ZS5sb2FkSW1hZ2UodXJsXzAyKTtcclxuICAgICAgICAgICAgICAgIHNwcml0ZS5wb3MoMTA1LCAyMCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFNjb3JlTnVtYmVyID0gMTAwMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICflubLlvpfmvILkuq4nOlxyXG4gICAgICAgICAgICAgICAgc3ByaXRlLmxvYWRJbWFnZSh1cmxfMDMpO1xyXG4gICAgICAgICAgICAgICAgc3ByaXRlLnBvcyg1NSwgMjApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGRTY29yZU51bWJlciA9IDIwMDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLndvcmRzVHlwZSA9IHdvcmQ7XHJcbiAgICAgICAgdGhpcy5SZXdhcmRXb3Jkc01vdmUoKTtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIC8qKumjmOWtl+WKqOeUu+aXtumXtOe6vyovXHJcbiAgICBSZXdhcmRXb3Jkc01vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHN0YW5kaW5nVGltZTtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMud29yZHNUeXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ+eJm+earic6XHJcbiAgICAgICAgICAgICAgICBzdGFuZGluZ1RpbWUgPSAxNjAwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ+WkquajkuS6hic6XHJcbiAgICAgICAgICAgICAgICBzdGFuZGluZ1RpbWUgPSAyMDAwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ+W5suW+l+a8guS6ric6XHJcbiAgICAgICAgICAgICAgICBzdGFuZGluZ1RpbWUgPSAyNDAwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBzdGFuZGluZ1RpbWUgPSAxNjAwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5Yib5bu65bqV5p2/XHJcbiAgICAgICAgbGV0IGJhc2Vib2FyZCA9IG5ldyBMYXlhLkltYWdlO1xyXG4gICAgICAgIGJhc2Vib2FyZC5za2luID0gJ2NhbmR5L3VpL+aWh+Wtl+aPkOekuuW6lS5wbmcnO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lLmFkZENoaWxkKGJhc2Vib2FyZCk7XHJcbiAgICAgICAgYmFzZWJvYXJkLnBvcygtODAwLCB0aGlzLmxvY2F0aW9uWSk7XHJcbiAgICAgICAgYmFzZWJvYXJkLmFuY2hvclggPSAwLjU7XHJcbiAgICAgICAgYmFzZWJvYXJkLmFuY2hvclkgPSAwLjU7XHJcbiAgICAgICAgYmFzZWJvYXJkLmFscGhhID0gMDtcclxuICAgICAgICBiYXNlYm9hcmQuc2NhbGUoMCwgMCk7XHJcbiAgICAgICAgLy/ms6jmhI/lsYLnuqdcclxuICAgICAgICBiYXNlYm9hcmQuek9yZGVyID0gMTAwO1xyXG4gICAgICAgIHRoaXMuc2VsZi56T3JkZXIgPSAxMTA7XHJcbiAgICAgICAgLy8g5bqV5p2/5Yqo55S7XHJcbiAgICAgICAgbGV0IHRpbWVMaW5lX2Jhc2Vib2FyZF8wMSA9IG5ldyBMYXlhLlRpbWVMaW5lO1xyXG4gICAgICAgIHRpbWVMaW5lX2Jhc2Vib2FyZF8wMVxyXG4gICAgICAgICAgICAuYWRkTGFiZWwoJ292ZXJ0dXJuXzAxJywgMCkudG8oYmFzZWJvYXJkLCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxLCB4OiBMYXlhLnN0YWdlLndpZHRoIC8gMiwgcm90YXRpb246IDM2MCwgYWxwaGE6IDEgfSwgNDAwLCBudWxsLCAwKVxyXG4gICAgICAgIHRpbWVMaW5lX2Jhc2Vib2FyZF8wMS5wbGF5KCdvdmVydHVybl8wMScsIGZhbHNlKTtcclxuICAgICAgICB0aW1lTGluZV9iYXNlYm9hcmRfMDEub24oTGF5YS5FdmVudC5DT01QTEVURSwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmxldE9mZkZpcmV3b3JrcygpO1xyXG4gICAgICAgICAgICAvLyDnrKzkuozmrrVcclxuICAgICAgICAgICAgbGV0IHRpbWVMaW5lX2Jhc2Vib2FyZF8wMiA9IG5ldyBMYXlhLlRpbWVMaW5lO1xyXG4gICAgICAgICAgICB0aW1lTGluZV9iYXNlYm9hcmRfMDJcclxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbCgncGF1c2UnLCAwKS50byhiYXNlYm9hcmQsIHt9LCBzdGFuZGluZ1RpbWUsIG51bGwsIDApXHJcbiAgICAgICAgICAgICAgICAuYWRkTGFiZWwoJ3ZhbmlzaF8wMScsIDApLnRvKGJhc2Vib2FyZCwgeyBzY2FsZVg6IDAuMiwgc2NhbGVZOiAwLjIsIHg6IDgwMCwgcm90YXRpb246IC0zNjAsIGFscGhhOiAwIH0sIDY1MCwgTGF5YS5FYXNlLmNpcmNJbk91dCwgMClcclxuICAgICAgICAgICAgdGltZUxpbmVfYmFzZWJvYXJkXzAyLnBsYXkoJ3BhdXNlJywgZmFsc2UpO1xyXG4gICAgICAgICAgICB0aW1lTGluZV9iYXNlYm9hcmRfMDIub24oTGF5YS5FdmVudC5DT01QTEVURSwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgYmFzZWJvYXJkLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIOWinuWKoOWIhuaVsOW7tui/n+eUqOS6jumFjeWQiOS4iumdoueahOWKqOeUu1xyXG4gICAgICAgIExheWEudGltZXIuZnJhbWVPbmNlKDE1MCwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmFkZFNjb3JlQW5pKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIOWtl+S9k+WKqOeUu1xyXG4gICAgICAgIGxldCB0aW1lTGluZV9zZWxmID0gbmV3IExheWEuVGltZUxpbmU7XHJcbiAgICAgICAgdGltZUxpbmVfc2VsZi5hZGRMYWJlbCgnYXBwZWFyJywgLTMwMCkudG8odGhpcy5zZWxmLCB7IHJvdGF0aW9uOiAzNjAsIHg6IExheWEuc3RhZ2Uud2lkdGggLyAyLCBhbHBoYTogMSB9LCA0MDAsIG51bGwsIDApXHJcbiAgICAgICAgICAgIC5hZGRMYWJlbCgncGF1c2UnLCAwKS50byh0aGlzLnNlbGYsIHsgeDogTGF5YS5zdGFnZS53aWR0aCAvIDIgfSwgc3RhbmRpbmdUaW1lIC0gNDAwLCBudWxsLCAwKVxyXG4gICAgICAgICAgICAuYWRkTGFiZWwoJ3ZhbmlzaF8wMicsIDApLnRvKHRoaXMuc2VsZiwgeyByb3RhdGlvbjogLTM2MCwgeDogLTEyMDAgfSwgNjUwLCBMYXlhLkVhc2UuY2lyY0luT3V0LCAwKVxyXG4gICAgICAgIHRpbWVMaW5lX3NlbGYucGxheSgnYXBwZWFyJywgZmFsc2UpO1xyXG4gICAgICAgIHRpbWVMaW5lX3NlbGYub24oTGF5YS5FdmVudC5DT01QTEVURSwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKueDn+iKseinhOWImVxyXG4gICAgICrlvpfliIbotorpq5jniIbngrjotorlpJpcclxuICAgICovXHJcbiAgICBsZXRPZmZGaXJld29ya3MoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGNvdW50O1xyXG4gICAgICAgIGxldCBkZWxheWVkID0gMDtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMud29yZHNUeXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ+eJm+earic6XHJcbiAgICAgICAgICAgICAgICBjb3VudCA9IDU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAn5aSq5qOS5LqGJzpcclxuICAgICAgICAgICAgICAgIGNvdW50ID0gNztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICflubLlvpfmvILkuq4nOlxyXG4gICAgICAgICAgICAgICAgY291bnQgPSAxMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgY291bnQgPSA2O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmZyYW1lT25jZShkZWxheWVkLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmFuZG9tWCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgbG9jYXRpb25YXzAxO1xyXG4gICAgICAgICAgICAgICAgaWYgKGkgJSAyICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb25YXzAxID0gTGF5YS5zdGFnZS53aWR0aCAvIDIgKyA1MCArIHJhbmRvbVg7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uWF8wMSA9IExheWEuc3RhZ2Uud2lkdGggLyAyIC0gNTAgLSByYW5kb21YO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5leHBsb2RlQW5pKHRoaXMuc2VsZlNjZW5lLCBsb2NhdGlvblhfMDEsIHRoaXMubG9jYXRpb25ZLCAnZmlyZXdvcmtzJywgMjAsIDEwNSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGRlbGF5ZWQgKz0gMTU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIhuaVsOWinuWKoOWKqOeUuyovXHJcbiAgICBhZGRTY29yZUFuaSgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgaGludFdvcmQgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKCdjYW5keScsIHRoaXMuaGludFdvcmQuY3JlYXRlLCB0aGlzLmhpbnRXb3JkKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZS5hZGRDaGlsZChoaW50V29yZCk7XHJcbiAgICAgICAgaGludFdvcmQuek9yZGVyID0gMTEwO1xyXG4gICAgICAgIGhpbnRXb3JkLnBvcyhMYXlhLnN0YWdlLndpZHRoIC8gMiwgdGhpcy5sb2NhdGlvblkpO1xyXG4gICAgICAgIGxldCBwcm9QZXJ0eVR5cGU6IHN0cmluZyA9ICflop7liqDliIbmlbAnO1xyXG4gICAgICAgIGhpbnRXb3JkWydIaW50V29yZCddLmluaXRQcm9wZXJ0eShwcm9QZXJ0eVR5cGUsIHRoaXMuYWRkU2NvcmVOdW1iZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcigncmV3YXJkV29yZHMnLCB0aGlzLnNlbGYpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IE1haW5TY2VuZUNvbnRyb2wgZnJvbSBcIi4vTWFpblNjZW5lQ29udHJvbFwiO1xyXG5pbXBvcnQgQ2FuZHkgZnJvbSBcIi4vQ2FuZHlcIjtcclxuaW1wb3J0IEJ1bGxldCBmcm9tIFwiLi9Sb2xlQnVsbGV0XCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvbGUgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiogQHByb3Age25hbWU6YnVsbGV0UGFyZW50LCB0aXBzOlwi5a2Q5by554i26IqC54K5XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJ1bGxldFBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKiogQHByb3Age25hbWU6cm9sZUJ1bGxldCwgdGlwczpcIuWtkOW8uVwiLCB0eXBlOlByZWZhYn0qL1xyXG4gICAgcHVibGljIHJvbGVCdWxsZXQ6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq5Zy65pmv6ISa5pys57uE5Lu2Ki9cclxuICAgIHByaXZhdGUgbWFpblNjZW5lQ29udHJvbDtcclxuICAgIC8qKuezluaenOeItuiKgueCuSovXHJcbiAgICBwcml2YXRlIGNhbmR5UGFyZW50OiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuiHquW3seeahOihgOmHjyovXHJcbiAgICBwcml2YXRlIHNlbGZIZWFsdGg6IExheWEuUHJvZ3Jlc3NCYXI7XHJcbiAgICAvKirooYDph4/mmL7npLrmloflrZcqL1xyXG4gICAgcHJpdmF0ZSBibG9vZExhYmVsOiBMYXlhLkxhYmVsO1xyXG4gICAgLyoq5bGe5oCn5bGV56S65qGGKi9cclxuICAgIHByaXZhdGUgcHJvcGVydHlTaG93OiBMYXlhLkltYWdlO1xyXG5cclxuICAgIC8qKuS4u+inkuWxnuaApyovXHJcbiAgICBwcml2YXRlIHJvbGVfcHJvcGVydHk6IGFueTtcclxuXHJcbiAgICAvKirmlYzkurrpooTorabvvIzlj6ropoHmlYzkurrov5vlhaXlsITnqIvlsLHkvJrop6blj5HorabmiqUqL1xyXG4gICAgcHJpdmF0ZSByb2xlX1dhcm5pbmc6IGJvb2xlYW47XHJcbiAgICAvKirkuKTkuKrlvZPliY3liJvlu7rml7bpl7TorrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBub3dUaW1lOiBudW1iZXI7XHJcbiAgICAvKirlvpfliIbmmL7npLoqL1xyXG4gICAgcHVibGljIHNjb3JlTGFiZWw6IExheWEuRm9udENsaXA7XHJcblxyXG4gICAgLyoq6aqo6aq85Yqo55S75qih5p2/Ki9cclxuICAgIHByaXZhdGUgdGVtcGxldDogTGF5YS5UZW1wbGV0O1xyXG4gICAgLyoq6aqo6aq85Yqo55S7Ki9cclxuICAgIHByaXZhdGUgc2tlbGV0b246IExheWEuU2tlbGV0b247XHJcblxyXG4gICAgLyoq5Li76KeS5piv5ZCm5q275LqhKi9cclxuICAgIHByaXZhdGUgcm9sZURlYXRoOiBib29sZWFuO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0UHJvcGVydHkoKTtcclxuICAgICAgICB0aGlzLmJ1Y2tldENsaW5rKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVCb25lQW5pKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yid5aeL5YyWKi9cclxuICAgIGluaXRQcm9wZXJ0eSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZkhlYWx0aCA9IHRoaXMuc2VsZi5nZXRDaGlsZEJ5TmFtZSgnaGVhbHRoJykgYXMgTGF5YS5Qcm9ncmVzc0JhcjtcclxuICAgICAgICB0aGlzLnNlbGZIZWFsdGgudmFsdWUgPSAxO1xyXG4gICAgICAgIHRoaXMucHJvcGVydHlTaG93ID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdwcm9wZXJ0eVNob3cnKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIC8vIOm7mOiupOWxnuaAp+S4jeWPr+ingVxyXG4gICAgICAgIHRoaXMucHJvcGVydHlTaG93LmFscGhhID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5ibG9vZExhYmVsID0gdGhpcy5zZWxmSGVhbHRoLmdldENoaWxkQnlOYW1lKCdibG9vZExhYmVsJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICB0aGlzLnNlbGZbJ1JvbGUnXSA9IHRoaXM7XHJcblxyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lID0gdGhpcy5zZWxmLnNjZW5lIGFzIExheWEuU2NlbmU7XHJcbiAgICAgICAgdGhpcy5jYW5keVBhcmVudCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uY2FuZHlQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5zY29yZUxhYmVsO1xyXG4gICAgICAgIHRoaXMubm93VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgdGhpcy5yb2xlRGVhdGggPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJvbGVQcm9wZXJ0eVNldCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIm+W7uumqqOmqvOWKqOeUu+earuiCpCovXHJcbiAgICBjcmVhdGVCb25lQW5pKCk6IHZvaWQge1xyXG4gICAgICAgIC8v5Yib5bu65Yqo55S75qih5p2/XHJcbiAgICAgICAgdGhpcy50ZW1wbGV0ID0gbmV3IExheWEuVGVtcGxldCgpO1xyXG4gICAgICAgIHRoaXMudGVtcGxldC5vbihMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLCB0aGlzLnBhcnNlQ29tcGxldGUpO1xyXG4gICAgICAgIHRoaXMudGVtcGxldC5vbihMYXlhLkV2ZW50LkVSUk9SLCB0aGlzLCB0aGlzLm9uRXJyb3IpO1xyXG4gICAgICAgIGlmICh0aGlzLnNlbGYubmFtZSA9PT0gJ3JvbGVfMDEnKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGVtcGxldC5sb2FkQW5pKFwiY2FuZHkv5Li76KeSL3JvbGVfMDEuc2tcIik7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGYubmFtZSA9PT0gJ3JvbGVfMDInKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGVtcGxldC5sb2FkQW5pKFwiY2FuZHkv5Li76KeSL3JvbGVfMDIuc2tcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRXJyb3IoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+mqqOmqvOWKqOeUu+WKoOi9vemUmeivrycpO1xyXG4gICAgfVxyXG4gICAgcGFyc2VDb21wbGV0ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDmkq3mlL7mlYzkurrliqjnlLtcclxuICAgICAgICB0aGlzLnNrZWxldG9uID0gdGhpcy50ZW1wbGV0LmJ1aWxkQXJtYXR1cmUoMCk7Ly/mqKHmnb8wXHJcbiAgICAgICAgdGhpcy5za2VsZXRvbkxpc3RlbigpO1xyXG4gICAgICAgIHRoaXMuc2VsZi5hZGRDaGlsZCh0aGlzLnNrZWxldG9uKTtcclxuICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXkoJ3NwZWFrJywgdHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5za2VsZXRvbi5uYW1lID0gJ3NrZWxldG9uJztcclxuICAgICAgICBpZiAodGhpcy5zZWxmLm5hbWUgPT09ICdyb2xlXzAxJykge1xyXG4gICAgICAgICAgICB0aGlzLnNrZWxldG9uLnggPSA2MDtcclxuICAgICAgICAgICAgdGhpcy5za2VsZXRvbi55ID0gNzI7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGYubmFtZSA9PT0gJ3JvbGVfMDInKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2tlbGV0b24ueCA9IDYwO1xyXG4gICAgICAgICAgICB0aGlzLnNrZWxldG9uLnkgPSA3MjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq55uR5ZCsKi9cclxuICAgIHNrZWxldG9uTGlzdGVuKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2tlbGV0b24ub24oTGF5YS5FdmVudC5MQUJFTCwgdGhpcywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUubmFtZSA9PT0gJ2hpdE91dCcpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlQnVsbGV0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNrZWxldG9uLm9uKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIm+W7uuWtkOW8uSovXHJcbiAgICBjcmVhdGVCdWxsZXQoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGJ1bGxldCA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ3JvbGVCdWxsZXQnLCB0aGlzLnJvbGVCdWxsZXQuY3JlYXRlLCB0aGlzLnJvbGVCdWxsZXQpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuYnVsbGV0UGFyZW50LmFkZENoaWxkKGJ1bGxldCk7XHJcbiAgICAgICAgYnVsbGV0LnBvcyh0aGlzLnNlbGYueCwgdGhpcy5zZWxmLnkpO1xyXG4gICAgICAgIGxldCBwaWMgPSBidWxsZXQuZ2V0Q2hpbGRCeU5hbWUoJ3BpYycpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAncm9sZV8wMScpIHtcclxuICAgICAgICAgICAgcGljLnNraW4gPSAnY2FuZHkv5Li76KeSL+S4u+inkjHlrZDlvLkucG5nJztcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAncm9sZV8wMicpIHtcclxuICAgICAgICAgICAgcGljLnNraW4gPSAnY2FuZHkv5Li76KeSL+S4u+inkjLlrZDlvLkucG5nJztcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5sb2NrZWRCdWxsZXRUYXJnZXQoYnVsbGV0KTtcclxuICAgICAgICBidWxsZXRbJ0J1bGxldCddLmJlbG9uZ1JvbGUgPSB0aGlzLnNlbGY7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5pKt5pS+6YCf5bqm55u45a+55pS75Ye76YCf5bqm6L+b6KGM6LCD5pW0XHJcbiAgICAgICog5b2T5pKt5pS+6Ze06ZqU5L2O5LqONTAw5ZCO6L+b6KGM6LCD5pW0XHJcbiAgICAgKi9cclxuICAgIHBsYXlTcGVlZEFkanVzdCgpOiB2b2lkIHtcclxuICAgICAgICAvLyDmkq3mlL7pgJ/luqbosIPmlbRcclxuICAgICAgICBsZXQgcGxheVNwZWVkO1xyXG4gICAgICAgIGlmICgoNTAwIC0gdGhpcy5yb2xlX3Byb3BlcnR5LmF0dGFja1NwZWVkKSAvIDUwMCA+IDApIHtcclxuICAgICAgICAgICAgcGxheVNwZWVkID0gMSArICg1MDAgLSB0aGlzLnJvbGVfcHJvcGVydHkuYXR0YWNrU3BlZWQpIC8gNTAwO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHBsYXlTcGVlZCA9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc2tlbGV0b24ucGxheWJhY2tSYXRlKHBsYXlTcGVlZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Y+R5Yqo5pS75Ye7XHJcbiAgICAgKiDnm67liY3kuYvlj5HlsITlrZDlvLlcclxuICAgICovXHJcbiAgICBvbnNldEF0dGFjaygpIHtcclxuICAgICAgICAvLyDmlLvlh7vmkq3mlL7kuIDmrKFcclxuICAgICAgICB0aGlzLnNrZWxldG9uLnBsYXkoJ2F0dGFjaycsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLnBsYXlTcGVlZEFkanVzdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuS4u+inkueahOWxnuaAp1xyXG4gICAgICrkuKTkuKrkuLvop5LlsZ7mgKfliIbliKvorqHnrpdcclxuICAgICAq5Zub5Liq5bGe5oCn5L6d5qyh5piv77yM55Sf5ZG95YC877yM5a2Q5by55pS75Ye75Yqb77yM5a2Q5by55Y+R5bCE6aKR546H5ZKM5by56YGT6YCf5bqm77yM6Ziy5b6h6IO95YqbXHJcbiAgICAqL1xyXG4gICAgcm9sZVByb3BlcnR5U2V0KCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnNlbGYubmFtZSA9PT0gJ3JvbGVfMDEnKSB7XHJcbiAgICAgICAgICAgIHRoaXMucm9sZV9wcm9wZXJ0eSA9IHtcclxuICAgICAgICAgICAgICAgIGJsb29kOiAyMDAwLFxyXG4gICAgICAgICAgICAgICAgYXR0YWNrVmFsdWU6IDEwMCxcclxuICAgICAgICAgICAgICAgIGF0dGFja1NwZWVkOiAyMDAsXHJcbiAgICAgICAgICAgICAgICBkZWZlbnNlOiAxNSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAncm9sZV8wMicpIHtcclxuICAgICAgICAgICAgdGhpcy5yb2xlX3Byb3BlcnR5ID0ge1xyXG4gICAgICAgICAgICAgICAgYmxvb2Q6IDIwMDAsXHJcbiAgICAgICAgICAgICAgICBhdHRhY2tWYWx1ZTogMTAwLFxyXG4gICAgICAgICAgICAgICAgYXR0YWNrU3BlZWQ6IDIwMCxcclxuICAgICAgICAgICAgICAgIGRlZmVuc2U6IDE1LFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirlsZ7mgKflrp7ml7bliLfmlrDliLfmlrAqL1xyXG4gICAgdXBkYXRlUHJvcGVydHkoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g6KGA5p2h5LiK55qE6KGA6YeP5pi+56S644CBXHJcbiAgICAgICAgdGhpcy5ibG9vZExhYmVsLnRleHQgPSB0aGlzLnJvbGVfcHJvcGVydHkuYmxvb2Q7XHJcbiAgICAgICAgLy8g5bGe5oCn5pi+56S65qGG5YaF55qE5bGe5oCn5pi+56S6XHJcbiAgICAgICAgLy8g6KGA6YePXHJcbiAgICAgICAgbGV0IGJsb29kID0gdGhpcy5wcm9wZXJ0eVNob3cuZ2V0Q2hpbGRCeU5hbWUoJ2Jsb29kJykgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICBibG9vZC50ZXh0ID0gXCLooYDph486IFwiICsgdGhpcy5yb2xlX3Byb3BlcnR5LmJsb29kO1xyXG4gICAgICAgIC8vIOaUu+WHu+WKm1xyXG4gICAgICAgIGxldCBhdHRhY2tWYWx1ZSA9IHRoaXMucHJvcGVydHlTaG93LmdldENoaWxkQnlOYW1lKCdhdHRhY2tWYWx1ZScpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgYXR0YWNrVmFsdWUudGV4dCA9IFwi5pS75Ye75YqbOiBcIiArIHRoaXMucm9sZV9wcm9wZXJ0eS5hdHRhY2tWYWx1ZTtcclxuICAgICAgICAvLyDmlLvlh7vpgJ/luqZcclxuICAgICAgICBsZXQgYXR0YWNrU3BlZWQgPSB0aGlzLnByb3BlcnR5U2hvdy5nZXRDaGlsZEJ5TmFtZSgnYXR0YWNrU3BlZWQnKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgIGF0dGFja1NwZWVkLnRleHQgPSBcIuaUu+WHu+mAn+W6pjogXCIgKyB0aGlzLnJvbGVfcHJvcGVydHkuYXR0YWNrU3BlZWQ7XHJcbiAgICAgICAgLy8g6Ziy5b6h5YqbXHJcbiAgICAgICAgbGV0IGRlZmVuc2UgPSB0aGlzLnByb3BlcnR5U2hvdy5nZXRDaGlsZEJ5TmFtZSgnZGVmZW5zZScpIGFzIExheWEuTGFiZWw7XHJcbiAgICAgICAgZGVmZW5zZS50ZXh0ID0gXCLpmLLlvqHlips6IFwiICsgdGhpcy5yb2xlX3Byb3BlcnR5LmRlZmVuc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Li76KeS55qE54K55Ye75LqL5Lu2XHJcbiAgICAgKiDlkozplb/mjInlh7rnjrDlsZ7mgKflsZXnpLrpobXpnaJcclxuICAgICAqIOa7keWKqOWPr+S7peaLluWKqOS4u+inkuWIsOinhOWumueahOS9jee9rlxyXG4gICAgKi9cclxuICAgIGJ1Y2tldENsaW5rKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZi5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgdGhpcy5zZWxmLm9uKExheWEuRXZlbnQuTU9VU0VfTU9WRSwgdGhpcywgdGhpcy5tb3ZlKTtcclxuICAgICAgICB0aGlzLnNlbGYub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy51cCk7XHJcbiAgICAgICAgdGhpcy5zZWxmLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICB9XHJcbiAgICAvKirmjInkuIss57uZ5LqI55uu5qCH5L2N572u77yM57OW5p6c6LWw5ZCR55uu5qCH5L2N572uO1xyXG4gICAgICog5bm25LiU5YiG5pWw5aKe5YqgKi9cclxuICAgIGRvd24oZXZlbnQpOiB2b2lkIHtcclxuICAgIH1cclxuICAgIC8qKuenu+WKqCovXHJcbiAgICBtb3ZlKGV2ZW50KTogdm9pZCB7XHJcbiAgICB9XHJcbiAgICAvKirmiqzotbcqL1xyXG4gICAgdXAoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLnNjYWxlKDEsIDEpO1xyXG4gICAgfVxyXG4gICAgLyoq5Ye65bGP5bmVKi9cclxuICAgIG91dCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6ZSB5a6a5pyA6L+R55qE6YKj5Liq5pWM5Lq6XHJcbiAgICAqIOWmguaenOayoeacieaVjOS6uu+8jOS4lOWxj+W5leS4iuaVjOS6uuWtmOWcqO+8jOmCo+S5iOS8mumUgeWumuS4gOS4quaVjOS6ulxyXG4gICAgKiDlt6blj7PliKTmlq3ljp/liJnmmK/vvIzlpoLmnpzmmK/lt6bovrnop5LoibLlj5HlsITlrZDlvLnvvIzpgqPkuYjlhYjop4Llr5/lt6bovrnmnInmsqHmnInmlYzkurrvvIzlpoLmnpzmnInpgqPkuYjkvJjlhYjmlLvlh7vlt6bovrlcclxuICAgKi9cclxuICAgIGxvY2tlZEJ1bGxldFRhcmdldChidWxsZXQpOiB2b2lkIHtcclxuICAgICAgICAvLyDkuKTngrnkuYvpl7TnmoTot53nprvmlbDnu4RcclxuICAgICAgICBsZXQgZGlzdGFuY2VBcnI6IEFycmF5PGFueT4gPSBbXTtcclxuICAgICAgICBsZXQgZW5lbXlQYXJlbnQgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLmVuZW15UGFyZW50O1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZW5lbXlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBlbmVteSA9IGVuZW15UGFyZW50Ll9jaGlsZHJlbltpXSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgLy/kuKTngrnkuYvpl7TnmoTot53nprtcclxuICAgICAgICAgICAgbGV0IGR4OiBudW1iZXIgPSBlbmVteS54IC0gdGhpcy5zZWxmLng7XHJcbiAgICAgICAgICAgIGxldCBkeTogbnVtYmVyID0gZW5lbXkueSAtIHRoaXMuc2VsZi55O1xyXG4gICAgICAgICAgICBsZXQgZGlzdGFuY2U6IG51bWJlciA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XHJcbiAgICAgICAgICAgIGxldCBvYmplY3QgPSB7XHJcbiAgICAgICAgICAgICAgICBkaXN0YW5jZTogZGlzdGFuY2UsXHJcbiAgICAgICAgICAgICAgICBuYW1lOiBlbmVteS5uYW1lXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZGlzdGFuY2VBcnIucHVzaChvYmplY3QpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDot53nprvmjpLluo9cclxuICAgICAgICB2YXIgY29tcGFyZSA9IGZ1bmN0aW9uIChvYmoxLCBvYmoyKSB7XHJcbiAgICAgICAgICAgIHZhciB2YWwxID0gb2JqMS5kaXN0YW5jZTtcclxuICAgICAgICAgICAgdmFyIHZhbDIgPSBvYmoyLmRpc3RhbmNlO1xyXG4gICAgICAgICAgICBpZiAodmFsMSA8IHZhbDIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAtMTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWwxID4gdmFsMikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDmib7lh7rot53nprvmnIDov5HnmoRcclxuICAgICAgICBkaXN0YW5jZUFyci5zb3J0KGNvbXBhcmUpO1xyXG4gICAgICAgIGlmIChkaXN0YW5jZUFyci5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGxldCB0YXJnZXQgPSBlbmVteVBhcmVudC5nZXRDaGlsZEJ5TmFtZShkaXN0YW5jZUFyclswXS5uYW1lKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgYnVsbGV0WydCdWxsZXQnXS5idWxsZXRUYXJnZXQgPSB0YXJnZXQ7XHJcbiAgICAgICAgICAgIGJ1bGxldFsnQnVsbGV0J10uYnVsbGV0VGFyZ2V0TmFtZSA9IHRhcmdldC5uYW1lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5yb2xlRGVhdGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDooYDph4/kvY7kuo4w5YiZ5q275LqhLOW5tuS4lOW8ueWHuuWkjea0u+eVjOmdolxyXG4gICAgICAgIGlmICh0aGlzLnJvbGVfcHJvcGVydHkuYmxvb2QgPD0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLnJvbGVfcHJvcGVydHkuYmxvb2QgPSAwOy8v5L+d6K+B5Li76KeS55qE6KGA6YeP5pi+56S65LiN5bCP5LqOMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZi5uYW1lID09PSAncm9sZV8wMScpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucm9sZURlYXRoID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZi5hbHBoYSA9IDA7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxmLm5hbWUgPT09ICdyb2xlXzAyJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb2xlRGVhdGggPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmLmFscGhhID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8g5Yi35paw5bGe5oCnXHJcbiAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0eSgpO1xyXG4gICAgICAgIC8v5Yib5bu65a2Q5by5XHJcbiAgICAgICAgbGV0IG5vd1RpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIGlmICh0aGlzLnNrZWxldG9uICYmIHRoaXMucm9sZV9XYXJuaW5nKSB7XHJcbiAgICAgICAgICAgIGlmIChub3dUaW1lIC0gdGhpcy5ub3dUaW1lID4gdGhpcy5yb2xlX3Byb3BlcnR5LmF0dGFja1NwZWVkKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5yb2xlX1dhcm5pbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uc2V0QXR0YWNrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3dUaW1lID0gbm93VGltZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgTWFpblNjZW5lQ29udHJvbCBmcm9tIFwiLi9NYWluU2NlbmVDb250cm9sXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq5Li76KeS54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgcm9sZVBhcmVudDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirkuLvop5IxKi9cclxuICAgIHByaXZhdGUgcm9sZV8wMTogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirkuLvop5IyKi9cclxuICAgIHByaXZhdGUgcm9sZV8wMjogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirlnLrmma/ohJrmnKwqL1xyXG4gICAgcHJpdmF0ZSBtYWluU2NlbmVDb250cm9sO1xyXG4gICAgLyoq5oCq54mp54i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgZW5lbXlQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5a2Q5by56YCf5bqmKi9cclxuICAgIHByaXZhdGUgc2VsZlNwZWVkOiBudW1iZXI7XHJcbiAgICAvKirov5nkuKrlrZDlvLnlsZ7kuo7lk6rkuKrkuLvop5Llj5HlsITnmoQqL1xyXG4gICAgcHJpdmF0ZSBiZWxvbmdSb2xlOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaUu+WHu+ebruagh++8jOi/meS4quebruagh+aYr+acgOi/keeahOmCo+S4quaVjOS6uiovXHJcbiAgICBwcml2YXRlIGJ1bGxldFRhcmdldDogTGF5YS5TcHJpdGU7XHJcbiAgICAvKirmlLvlh7vnm67moIfnmoTlkI3np7As5q+P5qyh5Yib5bu655qE5ZCN56ew5piv5ZSv5LiA55qE77yM5aaC5p6c5LiN5ZSv5LiA77yM6YKj5LmI6L+Z5Liq55uu5qCH5Y+v6IO95LuO5a+56LGh5rGg5Lit5Y+N5aSN6KKr5Yib5bu6Ki9cclxuICAgIHByaXZhdGUgYnVsbGV0VGFyZ2V0TmFtZTogc3RyaW5nO1xyXG4gICAgLyoq5pS75Ye75YqbKi9cclxuICAgIHByaXZhdGUgYXR0YWNrVmFsdWU6IG51bWJlcjtcclxuXHJcbiAgICAvKirlsZ7mgKfpo5jlrZfmj5DnpLoqL1xyXG4gICAgcHJpdmF0ZSBoaW50V29yZDogTGF5YS5QcmVmYWI7XHJcblxyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yid5aeL5YyW5LiA5Lqb5bGe5oCnKi9cclxuICAgIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5zZWxmID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLnNlbGZTY2VuZSA9IHRoaXMuc2VsZi5zY2VuZTtcclxuICAgICAgICB0aGlzLm1haW5TY2VuZUNvbnRyb2wgPSB0aGlzLnNlbGZTY2VuZS5nZXRDb21wb25lbnQoTWFpblNjZW5lQ29udHJvbCk7XHJcbiAgICAgICAgdGhpcy5lbmVteVBhcmVudCA9IHRoaXMubWFpblNjZW5lQ29udHJvbC5lbmVteVBhcmVudDtcclxuICAgICAgICB0aGlzLmhpbnRXb3JkID0gdGhpcy5tYWluU2NlbmVDb250cm9sLmhpbnRXb3JkO1xyXG4gICAgICAgIHRoaXMuc2VsZlNwZWVkID0gMTU7XHJcbiAgICAgICAgLy8g5bGe5oCn6LWL5YC8XHJcbiAgICAgICAgdGhpcy5yb2xlXzAxID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yb2xlXzAxO1xyXG4gICAgICAgIHRoaXMuYXR0YWNrVmFsdWUgPSB0aGlzLnJvbGVfMDFbJ1JvbGUnXS5yb2xlX3Byb3BlcnR5LmF0dGFja1ZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VsZlsnQnVsbGV0J10gPSB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWtkOW8ueenu+WKqFxyXG4gICAgICog5a2Q5by55Y+q5pyJ5b2T55uu5qCH5a+56LGh5ZKM55uu5qCH5a+56LGh5Zyo54i26IqC54K55YaF55qE5pe25YCZ5omN5Lya56e75YqoXHJcbiAgICAgKiDnm67moIflr7nosaHmsLjov5zlrZjlnKjvvIzlj6rkuI3ov4fku5booqvnp7vpmaTkuobvvIzmiYDku6VidWxsZXRUYXJnZXTmsLjkuI3kuLrnqbrvvIzlj6rog73liKTmlq3niLboioLngrnmmK/lkKblrZjlnKhcclxuICAgICAqIOWboOS4uuS4i+asoei/meS4quiiq+enu+mZpOeahOaVjOS6uuiiq+mHjeaWsOWIm+W7uueahOaXtuWAme+8jOWQjeensOmDveS4jeS4gOagt++8jOaJgOS7peimgeWIpOaWreWQjeensFxyXG4gICAgICog6Iul5p6c6L+Z5Liq55uu5qCH6KKr56e76Zmk5LqG77yM6YKj5LmI5Y+R5Ye65Y6755qE5a2Q5by55Lya5rK/552A5ZKM5Li76KeS55qE5pa55ZCR57un57ut56e75Yqo5YiwNTAw77ybXHJcbiAgICAqL1xyXG4gICAgYnVsbGV0TW92ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5idWxsZXRUYXJnZXQgJiYgdGhpcy5idWxsZXRUYXJnZXQucGFyZW50ICYmIHRoaXMuYnVsbGV0VGFyZ2V0TmFtZSA9PT0gdGhpcy5idWxsZXRUYXJnZXQubmFtZSkge1xyXG4gICAgICAgICAgICAvLyB4LHnliIbliKvnm7jlh4/mmK/kuKTngrnov57nur/lkJHph49cclxuICAgICAgICAgICAgbGV0IHBvaW50ID0gbmV3IExheWEuUG9pbnQodGhpcy5idWxsZXRUYXJnZXQueCAtIHRoaXMuc2VsZi54LCB0aGlzLmJ1bGxldFRhcmdldC55IC0gdGhpcy5zZWxmLnkpO1xyXG4gICAgICAgICAgICAvLyDlvZLkuIDljJbvvIzlkJHph4/plb/luqbkuLox44CCXHJcbiAgICAgICAgICAgIHBvaW50Lm5vcm1hbGl6ZSgpO1xyXG4gICAgICAgICAgICAvL+WQkemHj+ebuOWKoFxyXG4gICAgICAgICAgICB0aGlzLnNlbGYueCArPSBwb2ludC54ICogdGhpcy5zZWxmU3BlZWQ7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi55ICs9IHBvaW50LnkgKiB0aGlzLnNlbGZTcGVlZDtcclxuICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgLy8g5rK/552A6Ieq5bex5b2T5YmN5ZKM5Y+R5bCE6Ieq5bex55qE5Li76KeS5pa55ZCR56e75YqoXHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuc2VsZi54IC0gdGhpcy5iZWxvbmdSb2xlLngsIHRoaXMuc2VsZi55IC0gdGhpcy5iZWxvbmdSb2xlLnkpO1xyXG4gICAgICAgICAgICAvLyDlvZLkuIDljJbvvIzlkJHph4/plb/luqbkuLox44CCXHJcbiAgICAgICAgICAgIHBvaW50Lm5vcm1hbGl6ZSgpO1xyXG4gICAgICAgICAgICAvLyDlpoLmnpzpnZnmraLkuI3liqjliJnmtojlpLFcclxuICAgICAgICAgICAgaWYgKHBvaW50LnggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy/lkJHph4/nm7jliqBcclxuICAgICAgICAgICAgdGhpcy5zZWxmLnggKz0gcG9pbnQueCAqIHRoaXMuc2VsZlNwZWVkO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYueSArPSBwb2ludC55ICogdGhpcy5zZWxmU3BlZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOenu+WKqFxyXG4gICAgICAgIHRoaXMuYnVsbGV0TW92ZSgpO1xyXG4gICAgICAgIC8vIOi2heWHuuaoquWQkeiMg+WbtOa2iOWkse+8jOS4gOiIrOS4jeS8muinpuWPkVxyXG4gICAgICAgIGlmICh0aGlzLnNlbGYueCA+IDc1MCArIHRoaXMuc2VsZi53aWR0aCArIDUwIHx8IHRoaXMuc2VsZi54IDwgLXRoaXMuc2VsZi53aWR0aCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDlsITnqIvkuLo1MDDvvIzotoXov4flsITnqIvmtojlpLFcclxuICAgICAgICBpZiAodGhpcy5zZWxmLnkgPD0gTGF5YS5zdGFnZS53aWR0aCAqIDEgLyAzKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZi5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g56Kw5Yiw5Lu75L2V5LiA5Liq5oCq54mp77yM5a2Q5by55raI5aSx5oCq54mp5o6J6KGAXHJcbiAgICAgICAgLy8g5a2Q5by55Ye75Lit6L+R5oiY5oCq54mp5oCq54mp5Lya5ZCO6YCAXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgZW5lbXkgPSB0aGlzLmVuZW15UGFyZW50Ll9jaGlsZHJlbltpXSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VYID0gTWF0aC5hYnMoZW5lbXkueCAtIHRoaXMuc2VsZi54KTtcclxuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VZID0gTWF0aC5hYnMoZW5lbXkueSAtIHRoaXMuc2VsZi55KTtcclxuICAgICAgICAgICAgaWYgKGRpZmZlcmVuY2VYIDwgMTAgJiYgZGlmZmVyZW5jZVkgPCAxMCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGVuZW15Lm5hbWUuc3Vic3RyaW5nKDAsIDUpID09PSAnZW5lbXknKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hdHRhY2tFbmVteShlbmVteSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXR0YWNrQ2FuZHlfRXhwbG9kZShlbmVteSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWtkOW8ueWvueaVjOS6uumAoOaIkOS8pOWus+eahOWFrOW8j1xyXG4gICAgICog5a2Q5by55Ye75Lit5pWM5Lq677yM5pWM5Lq65Lya6KKr5Ye76YCAXHJcbiAgICAgICog5pS75Ye75YqbLeaVjOS6uumYsuW+oeWmguaenOWkp+S6jumbtuWImemAoOaIkOS8pOWus++8jOWQpuWImeS4jemAoOaIkOS8pOWus1xyXG4gICAgICAqIOaOieihgOaYvuekuuWAvO+8jOS8pOWus+Wwj+S6jumbtuWImeaYvuekujBcclxuICAgICAgKiDlubbkuJTmnInliqjnlLvmj5DnpLrmloflrZdcclxuICAgICAqL1xyXG4gICAgYXR0YWNrRW5lbXkoZW5lbXk6IExheWEuU3ByaXRlKTogdm9pZCB7XHJcbiAgICAgICAgLy8g6YCa6L+H5pS75Ye75Yqb6K6h566X5o6J6KGA54q25Ya1XHJcbiAgICAgICAgbGV0IGRhbWFnZSA9IHRoaXMuYXR0YWNrVmFsdWUgLSBlbmVteVsnRW5lbXknXS5lbmVteVByb3BlcnR5LmRlZmVuc2U7XHJcbiAgICAgICAgaWYgKGRhbWFnZSA+IDApIHtcclxuICAgICAgICAgICAgZW5lbXlbJ0VuZW15J10uZW5lbXlQcm9wZXJ0eS5ibG9vZCAtPSBkYW1hZ2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZGFtYWdlID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6aOY5a2XXHJcbiAgICAgICAgLy8gdGhpcy5oaW50V29yZE1vdmUoZW5lbXksIGRhbWFnZSk7XHJcbiAgICAgICAgLy8g6Kem5Y+R5Ye76YCAXHJcbiAgICAgICAgZW5lbXlbJ0VuZW15J10ucmVwZWxUaW1lciA9IDI7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5a2Q5by55a+554iG54K457OW5p6c5Lyk5a6z5YWs5byPXHJcbiAgICAgKiDniIbngrjns5bmnpzmmoLml7bmsqHmnInpmLLlvqHliptcclxuICAgICAqIOaUu+WHu+aVsOasoeWwseatu+S6oVxyXG4gICAgICog5rKh5pyJ5o+Q56S66aOY5a2X5Yqo55S7Ki9cclxuICAgIGF0dGFja0NhbmR5X0V4cGxvZGUoZW5lbXk6IExheWEuU3ByaXRlKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGhlYWx0aCA9IGVuZW15LmdldENoaWxkQnlOYW1lKCdoZWFsdGgnKSBhcyBMYXlhLlByb2dyZXNzQmFyO1xyXG4gICAgICAgIGhlYWx0aC52YWx1ZSAtPSAzLjQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5o+Q56S65paH5a2XKi9cclxuICAgIGhpbnRXb3JkTW92ZShlbmVteTogTGF5YS5TcHJpdGUsIGRhbWFnZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5pWM5Lq66KKr5raI54Gt5LqG77yM5YiZ5LiN5omn6KGM6L+Z5LiqXHJcbiAgICAgICAgaWYgKGVuZW15LnBhcmVudCA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOWIm+W7uuaPkOekuuWKqOeUu+WvueixoVxyXG4gICAgICAgIGxldCBoaW50V29yZCA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ2NhbmR5JywgdGhpcy5oaW50V29yZC5jcmVhdGUsIHRoaXMuaGludFdvcmQpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIGhpbnRXb3JkLnBvcygxMDAsIC0xNTApO1xyXG4gICAgICAgIGVuZW15LmFkZENoaWxkKGhpbnRXb3JkKTtcclxuICAgICAgICBsZXQgcHJvUGVydHlUeXBlOiBzdHJpbmcgPSAn5Li76KeS5o6J6KGAJztcclxuICAgICAgICBsZXQgbnVtYmVyVmFsdWU6IG51bWJlcjtcclxuICAgICAgICBoaW50V29yZFsnSGludFdvcmQnXS5pbml0UHJvcGVydHkocHJvUGVydHlUeXBlLCBkYW1hZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcignYnVsbGV0JywgdGhpcy5zZWxmKTtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNldHRsZW1lbnQgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiroh6rlt7EqL1xyXG4gICAgcHJpdmF0ZSBzZWxmOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaJgOWxnuWcuuaZryovXHJcbiAgICBwcml2YXRlIHNlbGZTY2VuZTogTGF5YS5TY2VuZTtcclxuICAgIC8qKum7keiJsuiDjOaZr+mBrue9qSovXHJcbiAgICBwcml2YXRlIGJhY2tncm91bmQ6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIC8qKuWGheWuue+8jOmZpOS6huiDjOaZr+WbviovXHJcbiAgICBwcml2YXRlIGNvbnRlbnQ6IExheWEuU3ByaXRlO1xyXG5cclxuXHJcbiAgICAvKirmk43kvZzmjInpkq7niLboioLngrnvvIzkuLvopoHmlrnkvr/liqjnlLvliLbkvZwqL1xyXG4gICAgcHJpdmF0ZSBvcGVyYXRpb246IExheWEuU3ByaXRlO1xyXG4gICAgLyoq6YeN5p2lKi9cclxuICAgIHByaXZhdGUgYnRuX0FnYWluOiBMYXlhLkltYWdlO1xyXG4gICAgLyoq6L+U5Zue5oyJ6ZKuKi9cclxuICAgIHByaXZhdGUgYnRuX1JldHVybjogTGF5YS5JbWFnZTtcclxuICAgIC8qKua4uOaIj+e7k+adn2xvZ28qL1xyXG4gICAgcHJpdmF0ZSBHT0xvZ286IExheWEuSW1hZ2U7XHJcblxyXG4gICAgLyoq5pe26Ze057q/Ki9cclxuICAgIHByaXZhdGUgdGltZUxpbmU6IG51bWJlcjtcclxuXHJcbiAgICAvKirliIbmlbDoioLngrkqL1xyXG4gICAgcHJpdmF0ZSBzY29yZUxhYmVsOiBMYXlhLkZvbnRDbGlwO1xyXG4gICAgLyoq5YiG5pWw6IqC54K555qE54i26IqC54K56aKE5Yi2Ki9cclxuICAgIHByaXZhdGUgc2NvcmU6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIC8qKuS4pOS4quaMiemSruWKqOeUu+W8gOWni+W8gOWFsyovXHJcbiAgICBwcml2YXRlIGJ0bkFuaVN3aWNoOiBib29sZWFuO1xyXG4gICAgLyoq5Lik5Liq5oyJ6ZKu5Yqo55S75Lqn55Sf5pe26Ze06K6w5b2VKi9cclxuICAgIHByaXZhdGUgYnRuQW5pVGltZTogbnVtYmVyO1xyXG4gICAgLyoq5Lik5Liq5oyJ6ZKu5Yqo55S75Lqn55Sf55qE5pe26Ze06Ze06ZqUKi9cclxuICAgIHByaXZhdGUgYnRuQW5pSW50ZXJ2YWw6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+WMliovXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmUgYXMgTGF5YS5TY2VuZTtcclxuXHJcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdiYWNrZ3JvdW5kJykgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy5zZWxmLmdldENoaWxkQnlOYW1lKCdjb250ZW50JykgYXMgTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZC5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5vcGVyYXRpb24gPSB0aGlzLmNvbnRlbnQuZ2V0Q2hpbGRCeU5hbWUoJ29wZXJhdGlvbicpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMub3BlcmF0aW9uLnggPSAtMTIwMDtcclxuICAgICAgICB0aGlzLm9wZXJhdGlvbi5hbHBoYSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuYnRuX1JldHVybiA9IHRoaXMub3BlcmF0aW9uLmdldENoaWxkQnlOYW1lKCdidG5fUmV0dXJuJykgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLmJ0bl9BZ2FpbiA9IHRoaXMub3BlcmF0aW9uLmdldENoaWxkQnlOYW1lKCdidG5fQWdhaW4nKSBhcyBMYXlhLkltYWdlO1xyXG5cclxuICAgICAgICB0aGlzLkdPTG9nbyA9IHRoaXMuY29udGVudC5nZXRDaGlsZEJ5TmFtZSgnR09Mb2dvJykgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLkdPTG9nby54ID0gMTIwMDtcclxuICAgICAgICB0aGlzLkdPTG9nby5hbHBoYSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuc2NvcmVMYWJlbCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc2NvcmVMYWJlbDtcclxuICAgICAgICB0aGlzLnNjb3JlID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5zY29yZTtcclxuICAgICAgICB0aGlzLnRpbWVMaW5lID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5idG5BbmlTd2ljaCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5idG5BbmlUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICB0aGlzLmJ0bkFuaUludGVydmFsID0gMzAwMDtcclxuXHJcbiAgICAgICAgdGhpcy5hZGFwdGl2ZSgpO1xyXG4gICAgICAgIHRoaXMuYXBwZWFyQW5pKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6Ieq6YCC5bqUKi9cclxuICAgIGFkYXB0aXZlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZC53aWR0aCA9IExheWEuc3RhZ2Uud2lkdGg7XHJcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kLmhlaWdodCA9IExheWEuc3RhZ2UuaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuY29udGVudC54ID0gTGF5YS5zdGFnZS53aWR0aCAvIDI7XHJcbiAgICAgICAgdGhpcy5jb250ZW50LnkgPSBMYXlhLnN0YWdlLmhlaWdodCAvIDIgLSA1MDtcclxuICAgICAgICB0aGlzLnNlbGYud2lkdGggPSBMYXlhLnN0YWdlLndpZHRoO1xyXG4gICAgICAgIHRoaXMuc2VsZi5oZWlnaHQgPSBMYXlhLnN0YWdlLmhlaWdodDtcclxuICAgICAgICB0aGlzLnNlbGYueCA9IDA7XHJcbiAgICAgICAgdGhpcy5zZWxmLnkgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vKuWKqOeUu+WIneWni+WMliovIFxyXG4gICAgYXBwZWFyQW5pKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIOaTjeS9nOaMiemSrlxyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5vcGVyYXRpb24sIHsgeDogMzc1LCByb3RhdGlvbjogNzIwLCBhbHBoYTogMSB9LCA1NTAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMub3BlcmF0aW9uLnJvdGF0aW9uID0gMDtcclxuXHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcbiAgICAgICAgLy8g5ri45oiP57uT5p2fbG9nb1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5HT0xvZ28sIHsgeDogMzc1LCByb3RhdGlvbjogNzIwLCBhbHBoYTogMSB9LCA1NTAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuR09Mb2dvLnJvdGF0aW9uID0gMDtcclxuICAgICAgICAgICAgdGhpcy5HT0xvZ29BbmkoKTtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICAvLyDog4zmma9cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmFja2dyb3VuZCwgeyBhbHBoYTogMC44IH0sIDU1MCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICAvLyDlvpfliIboioLngrnnmoTliqjnlLtcclxuICAgICAgICB0aGlzLnNjb3JlQW5pKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5b6X5YiG6IqC54K555qE5Yqo55S7Ki9cclxuICAgIHNjb3JlQW5pKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBzY29yZSA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ3Njb3JlJywgdGhpcy5zY29yZS5jcmVhdGUsIHRoaXMuc2NvcmUpIGFzIExheWEuU3ByaXRlO1xyXG5cclxuICAgICAgICAvLyDlpI3liLbliIbmlbBcclxuICAgICAgICBsZXQgTGFiZWwgPSBzY29yZS5nZXRDaGlsZEJ5TmFtZSgnc2NvcmVMYWJlbCcpIGFzIExheWEuRm9udENsaXA7XHJcbiAgICAgICAgTGFiZWwudmFsdWUgPSB0aGlzLnNjb3JlTGFiZWwudmFsdWU7XHJcblxyXG4gICAgICAgIHRoaXMuc2VsZi5hZGRDaGlsZChzY29yZSk7XHJcbiAgICAgICAgc2NvcmUucG9zKExheWEuc3RhZ2Uud2lkdGggLyAyLCAwKTtcclxuICAgICAgICBzY29yZS5waXZvdFggPSBzY29yZS53aWR0aCAvIDI7XHJcbiAgICAgICAgc2NvcmUucGl2b3RZID0gc2NvcmUuaGVpZ2h0IC8gMjtcclxuICAgICAgICAvLyDliqjnlLtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHNjb3JlLCB7IHg6IDM3NSwgeTogdGhpcy5jb250ZW50LnkgLSAyMDAsIHJvdGF0aW9uOiA3MjAgfSwgNTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmJ0bkNsaW5rKCk7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirngrnlh7vph43mnaXmjInpkq7nmoTmtojlpLHliqjnlLsqL1xyXG4gICAgY3V0VG50ZXJmYWNlKHR5cGUpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYucGl2b3RYID0gTGF5YS5zdGFnZS53aWR0aCAvIDI7XHJcbiAgICAgICAgdGhpcy5zZWxmLnBpdm90WSA9IExheWEuc3RhZ2UuaGVpZ2h0IC8gMjtcclxuICAgICAgICB0aGlzLnNlbGYueCA9IHRoaXMuc2VsZi5waXZvdFg7XHJcbiAgICAgICAgdGhpcy5zZWxmLnkgPSB0aGlzLnNlbGYucGl2b3RZO1xyXG4gICAgICAgIC8vIOaVtOS9k+enu+WKqFxyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5zZWxmLCB7IHg6IDE1MDAsIHJvdGF0aW9uOiA3MjAsIHNjYWxlWDogMCwgc2NhbGVZOiAwLCBhbHBoYTogMCB9LCA3MDAsIExheWEuRWFzZS5leHBvSW4sIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ3Jlc3RhcnQnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJlc3RhcnQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAncmV0dXJuU3RhcnQnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJldHVyblN0YXJ0U2V0KCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLmNyZWF0ZVN0YXJ0SW50ZXJmYWNlKCdyZXR1cm5TdGFydCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICAvLyDog4zmma9cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmFja2dyb3VuZCwgeyBhbHBoYTogMCB9LCA0NTAsIExheWEuRWFzZS5leHBvSW4sIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5ri45oiP57uT5p2fbG9nb+eahOWKqOeUuyovXHJcbiAgICBHT0xvZ29BbmkoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLkdPTG9nbywgeyBhbHBoYTogMC41IH0sIDgwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5HT0xvZ28sIHsgYWxwaGE6IDEgfSwgODAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuR09Mb2dvQW5pKCk7XHJcbiAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICBidG5BbmkoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9SZXR1cm4sIHsgc2NhbGVYOiAwLjk1LCBzY2FsZVk6IDAuOTUgfSwgMTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5idG5fUmV0dXJuLCB7IHNjYWxlWDogMS4wNSwgc2NhbGVZOiAxLjA1IH0sIDEwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9SZXR1cm4sIHsgc2NhbGVYOiAxLCBzY2FsZVk6IDEgfSwgMTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcblxyXG4gICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9BZ2FpbiwgeyBzY2FsZVg6IDAuOTUsIHNjYWxlWTogMC45NSB9LCAxMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5idG5fQWdhaW4sIHsgc2NhbGVYOiAxLjA1LCBzY2FsZVk6IDEuMDUgfSwgMTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9BZ2FpbiwgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCAxMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuaMiemSrueCueWHu+S6i+S7tiovXHJcbiAgICBidG5DbGluaygpOiB2b2lkIHtcclxuICAgICAgICAvLyDph43mnaVcclxuICAgICAgICB0aGlzLmJ0bl9BZ2Fpbi5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgdGhpcy5idG5fQWdhaW4ub24oTGF5YS5FdmVudC5NT1VTRV9NT1ZFLCB0aGlzLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgIHRoaXMuYnRuX0FnYWluLm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMudXApO1xyXG4gICAgICAgIHRoaXMuYnRuX0FnYWluLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICAgICAgLy8g6L+U5ZueXHJcbiAgICAgICAgdGhpcy5idG5fUmV0dXJuLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5kb3duKTtcclxuICAgICAgICB0aGlzLmJ0bl9SZXR1cm4ub24oTGF5YS5FdmVudC5NT1VTRV9NT1ZFLCB0aGlzLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgIHRoaXMuYnRuX1JldHVybi5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLnVwKTtcclxuICAgICAgICB0aGlzLmJ0bl9SZXR1cm4ub24oTGF5YS5FdmVudC5NT1VTRV9PVVQsIHRoaXMsIHRoaXMub3V0KTtcclxuICAgIH1cclxuICAgIGRvd24oZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLnRpbWVyLnBhdXNlKCk7XHJcbiAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zY2FsZSgwLjk1LCAwLjk1KTtcclxuICAgIH1cclxuICAgIC8qKuenu+WKqCovXHJcbiAgICBtb3ZlKGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zY2FsZSgxLCAxKTtcclxuICAgIH1cclxuICAgIC8qKuaKrOi1t+WinuWKoOWxnuaApyovXHJcbiAgICB1cChldmVudCk6IHZvaWQge1xyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICAgICAgaWYgKGV2ZW50LmN1cnJlbnRUYXJnZXQubmFtZSA9PT0gJ2J0bl9BZ2FpbicpIHtcclxuICAgICAgICAgICAgdGhpcy5jdXRUbnRlcmZhY2UoJ3Jlc3RhcnQnKTtcclxuICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LmN1cnJlbnRUYXJnZXQubmFtZSA9PT0gJ2J0bl9SZXR1cm4nKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3V0VG50ZXJmYWNlKCdyZXR1cm5TdGFydCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBMYXlhLnRpbWVyLnJlc3VtZSgpO1xyXG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJUd2Vlbih0aGlzLkdPTG9nbyk7Ly/liKDpmaRsb2dv55qE5Yqo55S7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKuWHuuWxj+W5lSovXHJcbiAgICBvdXQoZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLnRpbWVyLnJlc3VtZSgpO1xyXG4gICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIGlmICh0aGlzLmJ0bkFuaVN3aWNoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aW1lIC0gdGhpcy5idG5BbmlUaW1lID4gdGhpcy5idG5BbmlJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5idG5BbmlUaW1lID0gdGltZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnRuQW5pKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcyk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBzdGFydEdhbWUgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICAvKiroh6rlt7EqL1xyXG4gICAgcHJpdmF0ZSBzZWxmOiBMYXlhLlNwcml0ZTtcclxuICAgIC8qKuaJgOWxnuWcuuaZryovXHJcbiAgICBwcml2YXRlIHNlbGZTY2VuZTogTGF5YS5TY2VuZTtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6YmdfMDEsIHRpcHM6XCLog4zmma8xXCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJnXzAxOiBMYXlhLkltYWdlO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpiZ18wMiwgdGlwczpcIuiDjOaZrzJcIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgYmdfMDI6IExheWEuSW1hZ2U7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOmJnXzAzLCB0aXBzOlwi6IOM5pmvM1wiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBiZ18wMzogTGF5YS5JbWFnZTtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6YmdfMDQsIHRpcHM6XCLog4zmma80XCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJnXzA0OiBMYXlhLkltYWdlO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpiZ19QdXJlLCB0aXBzOlwi57qv6IOM5pmvXCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJnX1B1cmU6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpidG5fU3RhcnQsIHRpcHM6XCLlvIDlp4vmuLjmiI/mjInpkq5cIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgYnRuX1N0YXJ0OiBMYXlhLlNwcml0ZTtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6YnRuX1BhcnRpY2lwYXRlLCB0aXBzOlwi5YiG5Lqr5oyJ6ZKuXCIsIHR5cGU6Tm9kZX0qL1xyXG4gICAgcHVibGljIGJ0bl9QYXJ0aWNpcGF0ZTogTGF5YS5JbWFnZTtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6YnRuX1JhbmtpbmcsIHRpcHM6XCLmjpLooYzmppzmjInpkq5cIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgYnRuX1Jhbmtpbmc6IExheWEuSW1hZ2U7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOnN0YXJQYXJlbnQsIHRpcHM6XCLpl6rng4HmmJ/mmJ/nmoTniLboioLngrlcIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgc3RhclBhcmVudDogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOkxvR28sIHRpcHM6XCLmoIfpophcIiwgdHlwZTpOb2RlfSovXHJcbiAgICBwdWJsaWMgTG9HbzogTGF5YS5JbWFnZTtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6YW50aUFkZGljdGlvbiwgdGlwczpcIumYsuayiei/t+aWh+Wtl1wiLCB0eXBlOk5vZGV9Ki9cclxuICAgIHB1YmxpYyBhbnRpQWRkaWN0aW9uOiBMYXlhLkltYWdlO1xyXG5cclxuICAgIC8qKuaYn+aYn+W8gOWni+W8gOWFsyovXHJcbiAgICBwcml2YXRlIHN0YXJTd2ljaDogYm9vbGVhbjtcclxuICAgIC8qKuagh+mimOS4iueahOaYn+aYn+WKqOeUu+S6p+eUn+aXtumXtOiusOW9lSovXHJcbiAgICBwcml2YXRlIHN0YXJUaW1lOiBudW1iZXI7XHJcbiAgICAvKirmoIfpopjkuIrmmJ/mmJ/kuqfnlJ/nmoTml7bpl7Tpl7TpmpQqL1xyXG4gICAgcHJpdmF0ZSBzdGFySW50ZXJ2YWw6IG51bWJlcjtcclxuXHJcbiAgICAvKirlvIDlp4vmjInpkq7liqjnlLvlvIDlhbMqL1xyXG4gICAgcHJpdmF0ZSBzdGFydEJTd2l0Y2g6IGJvb2xlYW47XHJcbiAgICAvKirlvIDlp4vmjInpkq7mipbliqjmlrnlkJHorrDlvZUqL1xyXG4gICAgcHJpdmF0ZSBzdGFydEJUaW1lOiBudW1iZXI7XHJcbiAgICAvKirlvIDlp4vmjInpkq7mmJ/mmJ/kuqfnlJ/nmoTml7bpl7Tpl7TpmpQqL1xyXG4gICAgcHJpdmF0ZSBzdGFydEJJbnRlcnZhbDogbnVtYmVyO1xyXG4gICAgLyoq5byA5aeL5oyJ6ZKu5oqW5Yqo5qyh5pWwKi9cclxuICAgIHByaXZhdGUgc3RhcnRCTnVtOiBudW1iZXI7XHJcblxyXG5cclxuICAgIC8qKuaOkuihjOamnOeahHByZWZhYiovXHJcbiAgICBwcml2YXRlIHJhbmtpbmc6IExheWEuUHJlZmFiO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Yqo55S75qih5byPXHJcbiAgICAqIEBwYXJhbSB0eXBlIOexu+Wei++8jOS4jeWQjOexu+Wei+WKqOeUu+S4jeS4gOagt1xyXG4gICAqL1xyXG4gICAgYW5pVHlwZUluaXQodHlwZSkge1xyXG4gICAgICAgIGlmICh0eXBlID09PSAnc3RhcnQnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRBbmlJbml0KCk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAncmV0dXJuU3RhcnQnKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmV0dXJuU3RhcnRJbml0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+WMluS4gOS6m+mdnuWKqOeUu+WxnuaApyovXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmUgYXMgTGF5YS5TY2VuZTtcclxuICAgICAgICB0aGlzLnNlbGZbJ3N0YXJ0R2FtZSddID0gdGhpcztcclxuXHJcbiAgICAgICAgdGhpcy5Mb0dvLnpPcmRlciA9IDEwMDA7Ly9sb2dv5LiL6Z2i6KaB5pyJ5pif5pif5Yqo55S7XHJcblxyXG4gICAgICAgIHRoaXMuc3RhclN3aWNoID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnN0YXJUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICB0aGlzLnN0YXJJbnRlcnZhbCA9IDI1O1xyXG5cclxuICAgICAgICB0aGlzLnN0YXJ0QlN3aXRjaCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zdGFydEJJbnRlcnZhbCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zdGFydEJUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICB0aGlzLnN0YXJ0Qk51bSA9IDA7XHJcblxyXG4gICAgICAgIGxldCBoZWlnaHRMID0gTGF5YS5zdGFnZS5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5hbnRpQWRkaWN0aW9uLnkgPSBoZWlnaHRMICogNyAvIDggKyAodGhpcy5zZWxmLmhlaWdodCAtIGhlaWdodEwpIC8gMjtcclxuXHJcbiAgICAgICAgdGhpcy5yYW5raW5nID0gdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5yYW5raW5nIGFzIExheWEuUHJlZmFiO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKui/m+WFpeeVjOmdoueahOWKqOeUu+iKgueCueWxnuaApyovXHJcbiAgICBzdGFydEFuaUluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5iZ18wMS54ID0gMTg3O1xyXG4gICAgICAgIHRoaXMuYmdfMDEueSA9IDQxMDtcclxuXHJcbiAgICAgICAgdGhpcy5iZ18wMi54ID0gNTYyO1xyXG4gICAgICAgIHRoaXMuYmdfMDIueSA9IDQxMDtcclxuXHJcbiAgICAgICAgdGhpcy5iZ18wMy54ID0gMTg3O1xyXG4gICAgICAgIHRoaXMuYmdfMDMueSA9IDEyMzA7XHJcblxyXG4gICAgICAgIHRoaXMuYmdfMDQueCA9IDU2MjtcclxuICAgICAgICB0aGlzLmJnXzA0LnkgPSAxMjMwO1xyXG5cclxuICAgICAgICB0aGlzLmJnX1B1cmUuYWxwaGEgPSAxO1xyXG5cclxuICAgICAgICB0aGlzLmJ0bl9TdGFydC54ID0gLTE1MDA7XHJcbiAgICAgICAgdGhpcy5idG5fU3RhcnQuYWxwaGEgPSAwO1xyXG4gICAgICAgIHRoaXMuYnRuX1N0YXJ0LnNjYWxlKDAsIDApO1xyXG5cclxuICAgICAgICB0aGlzLkxvR28ueCA9IDE1MDA7XHJcbiAgICAgICAgdGhpcy5Mb0dvLmFscGhhID0gMDtcclxuICAgICAgICB0aGlzLkxvR28uc2NhbGUoMCwgMCk7XHJcblxyXG4gICAgICAgIHRoaXMuYW50aUFkZGljdGlvbi5hbHBoYSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuYnRuX1BhcnRpY2lwYXRlLmFscGhhID0gMDtcclxuICAgICAgICB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS5zY2FsZSgwLCAwKTtcclxuICAgICAgICB0aGlzLmJ0bl9SYW5raW5nLmFscGhhID0gMDtcclxuICAgICAgICB0aGlzLmJ0bl9SYW5raW5nLnNjYWxlKDAsIDApO1xyXG4gICAgICAgIHRoaXMuc3RhcnRBbmkoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliqjnlLvliJ3lp4vljJYqL1xyXG4gICAgc3RhcnRBbmkoKTogdm9pZCB7XHJcbiAgICAgICAgLy8gTG9Hb1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5Mb0dvLCB7IHg6IDM3NSwgcm90YXRpb246IDEwODAsIGFscGhhOiAxLCBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCA3MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuTG9Hby5yb3RhdGlvbiA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhckludGVydmFsID0gMzAwOy8vbG9nb+WQjumdoueahOaYn+aYn+WHuuWPkemXtOmalO+8jOW8gOWni+W+iOWwj++8jOeOsOWcqOW5s+eos1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgLy8g5byA5aeL5oyJ6ZKuXHJcbiAgICAgICAgLy8g5Yqo55S757uT5p2f5LmL5ZCO5Ye6546wXHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9TdGFydCwgeyB4OiAzNzUsIHJvdGF0aW9uOiAtMTA4MCwgYWxwaGE6IDEsIHNjYWxlWDogMSwgc2NhbGVZOiAxIH0sIDcwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5idG5fU3RhcnQucm90YXRpb24gPSAwO1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbkFwcGVhcigpO1xyXG4gICAgICAgICAgICAvLyDnrKzkuIDmrKHnq4vljbPmiafooYxidG5fU3RhcnTmipbliqjliqjnlLtcclxuICAgICAgICAgICAgdGhpcy5zdGFydEJTd2l0Y2ggPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXJ0QkludGVydmFsID0gMDtcclxuICAgICAgICAgICAgLy/pmLLmsonov7fmloflrZfliqjnlLtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmFudGlBZGRpY3Rpb24sIHsgYWxwaGE6IDEgfSwgMjAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Lik5Liq5pON5L2c5oyJ6ZKu5Ye6546w5Yqo55S7Ki9cclxuICAgIGJ1dHRvbkFwcGVhcigpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYnRuX1JhbmtpbmcsIHsgYWxwaGE6IDEsIHNjYWxlWDogMSwgc2NhbGVZOiAxLCByb3RhdGlvbjogNzIwIH0sIDM1MCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9QYXJ0aWNpcGF0ZSwgeyBhbHBoYTogMSwgc2NhbGVYOiAxLCBzY2FsZVk6IDEsIHJvdGF0aW9uOiAtNzIwIH0sIDM1MCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnRuQ2xpbmsoKTtcclxuICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuW8gOWni+a4uOaIj+eVjOmdoua2iOWkseWKqOeUuyovXHJcbiAgICB2YW5pc2hBbmkoKTogdm9pZCB7XHJcbiAgICAgICAgLy/pmpDol4/lhbbku5blhYPntKBcclxuICAgICAgICB0aGlzLmJnX1B1cmUuYWxwaGEgPSAwO1xyXG4gICAgICAgIHRoaXMuTG9Hby5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5idG5fU3RhcnQuYWxwaGEgPSAwO1xyXG4gICAgICAgIHRoaXMuYnRuX1JhbmtpbmcuYWxwaGEgPSAwO1xyXG4gICAgICAgIHRoaXMuYnRuX1BhcnRpY2lwYXRlLmFscGhhID0gMDtcclxuXHJcbiAgICAgICAgLy8g6Ziy5rKJ6L+35paH5a2X5bCP5pe2XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmFudGlBZGRpY3Rpb24sIHsgYWxwaGE6IDAgfSwgMjAwLCBMYXlhLkVhc2UuZXhwb0luLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICAvLyA05Liq6IOM5pmv5ouJ5byAXHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJnXzAxLCB7IHg6IC0xNTAwLCBhbHBoYTogMCwgc2NhbGVYOiAwLCBzY2FsZVk6IDAsIHJvdGF0aW9uOiAtNzIwIH0sIDgwMCwgTGF5YS5FYXNlLmV4cG9JbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmdfMDEucm90YXRpb24gPSAwO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGYucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnN0YXJ0R2FtZSgpO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcblxyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5iZ18wMiwgeyB4OiAxNTAwLCBhbHBoYTogMCwgc2NhbGVYOiAwLCBzY2FsZVk6IDAsIHJvdGF0aW9uOiAtNzIwIH0sIDgwMCwgTGF5YS5FYXNlLmV4cG9JbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmdfMDIucm90YXRpb24gPSAwO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcblxyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5iZ18wMywgeyB4OiAtMTUwMCwgYWxwaGE6IDAsIHNjYWxlWDogMCwgc2NhbGVZOiAwLCByb3RhdGlvbjogLTcyMCB9LCA4MDAsIExheWEuRWFzZS5leHBvSW4sIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmJnXzAzLnJvdGF0aW9uID0gMDtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmdfMDQsIHsgeDogMTUwMCwgYWxwaGE6IDAsIHNjYWxlWDogMCwgc2NhbGVZOiAwLCByb3RhdGlvbjogLTcyMCB9LCA4MDAsIExheWEuRWFzZS5leHBvSW4sIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmJnXzA0LnJvdGF0aW9uID0gMDtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKirov5Tlm57kuLvnlYzpnaLliJ3lp4vljJbkuIDkupvoioLngrnnmoTkvY3nva4qL1xyXG4gICAgcmV0dXJuU3RhcnRJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYmdfMDEueCA9IC0xNTAwO1xyXG4gICAgICAgIHRoaXMuYmdfMDEuYWxwaGEgPSAwO1xyXG4gICAgICAgIHRoaXMuYmdfMDIueCA9IDE1MDA7XHJcbiAgICAgICAgdGhpcy5iZ18wMi5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5iZ18wMy54ID0gLTE1MDA7XHJcbiAgICAgICAgdGhpcy5iZ18wMy5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5iZ18wNC54ID0gMTUwMDtcclxuICAgICAgICB0aGlzLmJnXzA0LmFscGhhID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5iZ19QdXJlLmFscGhhID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy5idG5fU3RhcnQueCA9IDM3NTtcclxuICAgICAgICB0aGlzLmJ0bl9TdGFydC5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5idG5fU3RhcnQuc2NhbGUoMSwgMSk7XHJcblxyXG4gICAgICAgIHRoaXMuTG9Hby54ID0gMzc1O1xyXG4gICAgICAgIHRoaXMuTG9Hby5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5Mb0dvLnNjYWxlKDEsIDEpO1xyXG5cclxuICAgICAgICB0aGlzLmFudGlBZGRpY3Rpb24uYWxwaGEgPSAwO1xyXG5cclxuICAgICAgICB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5idG5fUGFydGljaXBhdGUuc2NhbGUoMSwgMSk7XHJcbiAgICAgICAgdGhpcy5idG5fUmFua2luZy5hbHBoYSA9IDA7XHJcbiAgICAgICAgdGhpcy5idG5fUmFua2luZy5zY2FsZSgxLCAxKTtcclxuICAgICAgICB0aGlzLnJldHVyblN0YXJ0QW5pKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6L+U5Zue5Li755WM6Z2i5Yqo55S7Ki9cclxuICAgIC8qKuW8gOWni+a4uOaIj+eVjOmdoua2iOWkseWKqOeUuyovXHJcbiAgICByZXR1cm5TdGFydEFuaSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmJnXzAxLnggPSAxODc7XHJcbiAgICAgICAgdGhpcy5iZ18wMS55ID0gNDEwO1xyXG5cclxuICAgICAgICB0aGlzLmJnXzAyLnggPSA1NjI7XHJcbiAgICAgICAgdGhpcy5iZ18wMi55ID0gNDEwO1xyXG5cclxuICAgICAgICB0aGlzLmJnXzAzLnggPSAxODc7XHJcbiAgICAgICAgdGhpcy5iZ18wMy55ID0gMTIzMDtcclxuXHJcbiAgICAgICAgdGhpcy5iZ18wNC54ID0gNTYyO1xyXG4gICAgICAgIHRoaXMuYmdfMDQueSA9IDEyMzA7XHJcblxyXG4gICAgICAgIC8vIDTkuKrog4zmma/lkIjlubZcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmdfMDEsIHsgeDogMTg3LCBhbHBoYTogMSwgc2NhbGVYOiAxLCBzY2FsZVk6IDEsIHJvdGF0aW9uOiAtNzIwIH0sIDgwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8g5pi+56S65YW25LuW5YWD57SgXHJcbiAgICAgICAgICAgIHRoaXMuYmdfUHVyZS5hbHBoYSA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuTG9Hby5hbHBoYSA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuYnRuX1JhbmtpbmcuYWxwaGEgPSAxO1xyXG4gICAgICAgICAgICB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS5hbHBoYSA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuYmdfMDEucm90YXRpb24gPSAwO1xyXG4gICAgICAgICAgICB0aGlzLmJ0bl9TdGFydC5zY2FsZSgwLjEsIDAuMSk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhckludGVydmFsID0gMzAwOy8vbG9nb+WQjumdoueahOaYn+aYn+WHuuWPkemXtOmalO+8jOW8gOWni+W+iOWwj++8jOeOsOWcqOW5s+eos1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYnRuX1N0YXJ0LCB7IGFscGhhOiAxLCBzY2FsZVg6IDEsIHNjYWxlWTogMSwgcm90YXRpb246IDAgfSwgMjAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8g56ys5LiA5qyh56uL5Y2z5omn6KGMYnRuX1N0YXJ05oqW5Yqo5Yqo55S7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0QlN3aXRjaCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0QkludGVydmFsID0gMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnRuQ2xpbmsoKTtcclxuICAgICAgICAgICAgICAgIC8v6Ziy5rKJ6L+35paH5a2X5Yqo55S7XHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYW50aUFkZGljdGlvbiwgeyBhbHBoYTogMSB9LCAyMDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmdfMDIsIHsgeDogNTYyLCBhbHBoYTogMSwgc2NhbGVYOiAxLCBzY2FsZVk6IDEsIHJvdGF0aW9uOiA3MjAgfSwgODAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmJnXzAyLnJvdGF0aW9uID0gMDtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmdfMDMsIHsgeDogMTg3LCBhbHBoYTogMSwgc2NhbGVYOiAxLCBzY2FsZVk6IDEsIHJvdGF0aW9uOiA3MjAgfSwgODAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmJnXzAzLnJvdGF0aW9uID0gMDtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYmdfMDQsIHsgeDogNTYyLCBhbHBoYTogMSwgc2NhbGVYOiAxLCBzY2FsZVk6IDEsIHJvdGF0aW9uOiAtNzIwIH0sIDgwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5iZ18wNC5yb3RhdGlvbiA9IDA7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirmmJ/mmJ/nibnmlYgqL1xyXG4gICAgc3RhclNoaW5pbmdFZmZlY3QoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHNwYWNpbmdYID0gNTA7Ly9sb2dv5Lul5aSW5omp5aSn55qE5YOP57Sg6IyD5Zu0XHJcbiAgICAgICAgbGV0IHNwYWNpbmdZID0gMjA7XHJcbiAgICAgICAgbGV0IGluc2lkZVcgPSB0aGlzLkxvR28ud2lkdGggLSAyMDsvL+WGhemDqOaOkumZpOeahOWDj+e0oOiMg+WbtFxyXG4gICAgICAgIGxldCBpbnNpZGVIID0gdGhpcy5Mb0dvLmhlaWdodCAtIDIwO1xyXG4gICAgICAgIC8v5Y+z5LiK6KeS5Y6f54K5MVxyXG4gICAgICAgIGxldCBvcmlnaW5YMSA9IHRoaXMuTG9Hby54IC0gaW5zaWRlVyAvIDIgLSBzcGFjaW5nWDtcclxuICAgICAgICBsZXQgb3JpZ2luWTEgPSB0aGlzLkxvR28ueSAtIGluc2lkZUggLyAyIC0gc3BhY2luZ1k7XHJcbiAgICAgICAgLy/ku6Vsb2dv5Li65Lit5b+D5bem5Y+z6IyD5Zu0XHJcbiAgICAgICAgbGV0IHgxO1xyXG4gICAgICAgIGxldCB5MTtcclxuICAgICAgICBkbyB7XHJcbiAgICAgICAgICAgIHgxID0gb3JpZ2luWDEgKyBNYXRoLnJhbmRvbSgpICogKGluc2lkZVcgKyBzcGFjaW5nWCAqIDIpO1xyXG4gICAgICAgIH0gd2hpbGUgKE1hdGguYWJzKHgxIC0gdGhpcy5Mb0dvLngpIDwgaW5zaWRlVyAvIDIpO1xyXG4gICAgICAgIHkxID0gb3JpZ2luWTEgKyBNYXRoLnJhbmRvbSgpICogaW5zaWRlSCArIHNwYWNpbmdZO1xyXG5cclxuICAgICAgICAvL+S7pWxvZ2/kuLrkuK3lv4PkuIrkuIvojIPlm7RcclxuICAgICAgICAvL+WPs+S4iuinkuWOn+eCuTJcclxuICAgICAgICBsZXQgb3JpZ2luWDIgPSB0aGlzLkxvR28ueCAtIGluc2lkZVcgLyAyO1xyXG4gICAgICAgIGxldCBvcmlnaW5ZMiA9IHRoaXMuTG9Hby55IC0gaW5zaWRlSCAvIDIgLSBzcGFjaW5nWTtcclxuICAgICAgICBsZXQgeDI7XHJcbiAgICAgICAgbGV0IHkyO1xyXG4gICAgICAgIHgyID0gb3JpZ2luWDIgKyBNYXRoLnJhbmRvbSgpICogaW5zaWRlVztcclxuICAgICAgICBkbyB7XHJcbiAgICAgICAgICAgIHkyID0gb3JpZ2luWTIgKyBNYXRoLnJhbmRvbSgpICogKGluc2lkZUggKyBzcGFjaW5nWSAqIDIpO1xyXG4gICAgICAgIH0gd2hpbGUgKE1hdGguYWJzKHkyIC0gdGhpcy5Mb0dvLnkpIDwgaW5zaWRlSCAvIDIpO1xyXG5cclxuICAgICAgICAvLyDlnKjkuKTkuKrojIPlm7TlhoXpmo/mnLrkuqfnlJ/kuIDkuKrkvY3nva5cclxuICAgICAgICBsZXQgeDtcclxuICAgICAgICBsZXQgeTtcclxuXHJcbiAgICAgICAgbGV0IHJhbmRvbSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMpO1xyXG4gICAgICAgIGlmIChyYW5kb20gPT09IDApIHtcclxuICAgICAgICAgICAgeCA9IHgxO1xyXG4gICAgICAgICAgICB5ID0geTE7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgeCA9IHgyO1xyXG4gICAgICAgICAgICB5ID0geTI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCB6b2RlciA9IHRoaXMuTG9Hby56T3JkZXIgLSAxO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZXhwbG9kZUFuaSh0aGlzLnN0YXJQYXJlbnQsIHgsIHksICdzdGFyU2hpbmluZycsIDEsIDEwMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5pif5pif5raI5aSx5Yqo55S7Ki9cclxuICAgIHN0YXJWYW5pc2goKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zdGFyU3dpY2ggPSBmYWxzZTtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuc3RhclBhcmVudCwgeyBhbHBoYTogMCwgfSwgMTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXJQYXJlbnQucmVtb3ZlQ2hpbGRyZW4oMCwgdGhpcy5zdGFyUGFyZW50Ll9jaGlsZHJlbi5sZW5ndGggLSAxKTtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuW8gOWni+aMiemSruW3puWPs+aKluWKqCovXHJcbiAgICBzdGFydEJ0bkFuaSgpIHtcclxuICAgICAgICB0aGlzLnN0YXJ0QkludGVydmFsID0gMTA1MDsvL+mHjee9rumXtOmalO+8jOesrOS4gOasoeeahOaXtuWAmeaYrzDvvIznq4vljbPmiafooYxcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYnRuX1N0YXJ0LCB7IHJvdGF0aW9uOiAtNSB9LCA1MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5idG5fU3RhcnQsIHsgcm90YXRpb246IDUgfSwgNTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8g5Yqo55S757uT5p2f5LmL5ZCO5riF6Zmk5Yqo55S777yM6Ziy5q2i6YeN5Y+gXHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLmNsZWFyVHdlZW4odGhpcy5idG5fU3RhcnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGFydEJOdW0rKztcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXJ0Qk51bSAlIDUgPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLndob2xlQW5pKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydEJTd2l0Y2ggPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuaVtOS9k+WKqOeUuyovXHJcbiAgICB3aG9sZUFuaSgpOiB2b2lkIHtcclxuICAgICAgICAvKirlvIDlp4vmjInpkq7ml4vovawqL1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5idG5fU3RhcnQsIHsgcm90YXRpb246IDM2MCB9LCA4MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnRuX1N0YXJ0LnJvdGF0aW9uID0gMDtcclxuICAgICAgICAgICAgdGhpcy5zdGFydEJTd2l0Y2ggPSB0cnVlO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgLy8gbG9nb+S4iuS4i+S9jeenu1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5Mb0dvLCB7IHk6IHRoaXMuTG9Hby55IC0gMTAwIH0sIDQwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLkxvR28sIHsgeTogdGhpcy5Mb0dvLnkgKyAxMDAgfSwgNDAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB9LCBbXSksIDApO1xyXG4gICAgICAgIH0sIFtdKSwgMCk7XHJcblxyXG4gICAgICAgIC8v5LiL6Z2i5Lik5Liq5oyJ6ZKu5LiK5LiL5L2N56e7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9QYXJ0aWNpcGF0ZSwgeyB5OiB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS55ICsgMTAwIH0sIDQwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9QYXJ0aWNpcGF0ZSwgeyB5OiB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS55IC0gMTAwIH0sIDQwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgfSwgW10pLCAwKTtcclxuICAgICAgICB9LCBbXSksIDApO1xyXG5cclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuYnRuX1JhbmtpbmcsIHsgeTogdGhpcy5idG5fUmFua2luZy55ICsgMTAwIH0sIDQwMCwgTGF5YS5FYXNlLmN1YmljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmJ0bl9SYW5raW5nLCB7IHk6IHRoaXMuYnRuX1JhbmtpbmcueSAtIDEwMCB9LCA0MDAsIExheWEuRWFzZS5jdWJpY091dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIH0sIFtdKSwgMCk7XHJcbiAgICAgICAgfSwgW10pLCAwKTtcclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIm+W7uuaOkuihjOamnOeVjOmdoiovXHJcbiAgICBjcmVhdGVSaW5nKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYnRuQ2xpbmsoKTtcclxuICAgICAgICBsZXQgcmFua2luZyA9IExheWEuUG9vbC5nZXRJdGVtQnlDcmVhdGVGdW4oJ3JhbmtpbmcnLCB0aGlzLnJhbmtpbmcuY3JlYXRlLCB0aGlzLnJhbmtpbmcpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuc2VsZlNjZW5lLmFkZENoaWxkKHJhbmtpbmcpO1xyXG4gICAgICAgIHJhbmtpbmcucG9zKDAsIDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuaMiemSrueCueWHu+S6i+S7tiovXHJcbiAgICBidG5DbGluaygpOiB2b2lkIHtcclxuICAgICAgICAvLyDlvIDlp4vmuLjmiI9cclxuICAgICAgICB0aGlzLmJ0bl9TdGFydC5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgdGhpcy5idG5fU3RhcnQub24oTGF5YS5FdmVudC5NT1VTRV9NT1ZFLCB0aGlzLCB0aGlzLm1vdmUpO1xyXG4gICAgICAgIHRoaXMuYnRuX1N0YXJ0Lm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMudXApO1xyXG4gICAgICAgIHRoaXMuYnRuX1N0YXJ0Lm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICAgICAgLy8g5o6S6KGMXHJcbiAgICAgICAgdGhpcy5idG5fUmFua2luZy5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgdGhpcy5idG5fUmFua2luZy5vbihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMubW92ZSk7XHJcbiAgICAgICAgdGhpcy5idG5fUmFua2luZy5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLnVwKTtcclxuICAgICAgICB0aGlzLmJ0bl9SYW5raW5nLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICAgICAgLy8g5YiG5LqrXHJcbiAgICAgICAgdGhpcy5idG5fUGFydGljaXBhdGUub24oTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLmRvd24pO1xyXG4gICAgICAgIHRoaXMuYnRuX1BhcnRpY2lwYXRlLm9uKExheWEuRXZlbnQuTU9VU0VfTU9WRSwgdGhpcywgdGhpcy5tb3ZlKTtcclxuICAgICAgICB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLnVwKTtcclxuICAgICAgICB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS5vbihMYXlhLkV2ZW50Lk1PVVNFX09VVCwgdGhpcywgdGhpcy5vdXQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWFs+mXreeCueWHu+S6i+S7tiovXHJcbiAgICAvKirmjInpkq7ngrnlh7vkuovku7YqL1xyXG4gICAgY2xvc2VCdG5DbGluaygpOiB2b2lkIHtcclxuICAgICAgICAvLyDlvIDlp4vmuLjmiI9cclxuICAgICAgICB0aGlzLmJ0bl9TdGFydC5vZmYoTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLmRvd24pO1xyXG4gICAgICAgIHRoaXMuYnRuX1N0YXJ0Lm9mZihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMubW92ZSk7XHJcbiAgICAgICAgdGhpcy5idG5fU3RhcnQub2ZmKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMudXApO1xyXG4gICAgICAgIHRoaXMuYnRuX1N0YXJ0Lm9mZihMYXlhLkV2ZW50Lk1PVVNFX09VVCwgdGhpcywgdGhpcy5vdXQpO1xyXG4gICAgICAgIC8vIOaOkuihjFxyXG4gICAgICAgIHRoaXMuYnRuX1Jhbmtpbmcub2ZmKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5kb3duKTtcclxuICAgICAgICB0aGlzLmJ0bl9SYW5raW5nLm9mZihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMubW92ZSk7XHJcbiAgICAgICAgdGhpcy5idG5fUmFua2luZy5vZmYoTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy51cCk7XHJcbiAgICAgICAgdGhpcy5idG5fUmFua2luZy5vZmYoTGF5YS5FdmVudC5NT1VTRV9PVVQsIHRoaXMsIHRoaXMub3V0KTtcclxuICAgICAgICAvLyDliIbkuqtcclxuICAgICAgICB0aGlzLmJ0bl9QYXJ0aWNpcGF0ZS5vZmYoTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLmRvd24pO1xyXG4gICAgICAgIHRoaXMuYnRuX1BhcnRpY2lwYXRlLm9mZihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMubW92ZSk7XHJcbiAgICAgICAgdGhpcy5idG5fUGFydGljaXBhdGUub2ZmKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMudXApO1xyXG4gICAgICAgIHRoaXMuYnRuX1BhcnRpY2lwYXRlLm9mZihMYXlhLkV2ZW50Lk1PVVNFX09VVCwgdGhpcywgdGhpcy5vdXQpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBkb3duKGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zY2FsZSgwLjk1LCAwLjk1KTtcclxuICAgICAgICBMYXlhLnRpbWVyLnBhdXNlKCk7XHJcbiAgICB9XHJcbiAgICAvKirnp7vliqgqL1xyXG4gICAgbW92ZShldmVudCk6IHZvaWQge1xyXG4gICAgICAgIExheWEudGltZXIucmVzdW1lKCk7XHJcbiAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zY2FsZSgxLCAxKTtcclxuICAgIH1cclxuICAgIC8qKuaKrOi1t+WinuWKoOWxnuaAp1xyXG4gICAgICog55Sx5LqO6L+Z6YeM55qE5oyJ6ZKu5LiN5piv5Y+K5pe25raI5aSx77yM5omA5Lul6KaB5YWz6Zet54K55Ye75LqL5Lu2XHJcbiAgICAqL1xyXG4gICAgdXAoZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNjYWxlKDEsIDEpO1xyXG4gICAgICAgIGlmIChldmVudC5jdXJyZW50VGFyZ2V0Lm5hbWUgPT09ICdidG5fU3RhcnQnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2VCdG5DbGluaygpO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXJWYW5pc2goKTtcclxuICAgICAgICAgICAgdGhpcy52YW5pc2hBbmkoKTtcclxuICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LmN1cnJlbnRUYXJnZXQubmFtZSA9PT0gJ2J0bl9QYXJ0aWNpcGF0ZScpIHtcclxuXHJcbiAgICAgICAgfSBlbHNlIGlmIChldmVudC5jdXJyZW50VGFyZ2V0Lm5hbWUgPT09ICdidG5fUmFua2luZycpIHtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGVSaW5nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIExheWEudGltZXIucmVzdW1lKCk7XHJcbiAgICB9XHJcbiAgICAvKirlh7rlsY/luZUqL1xyXG4gICAgb3V0KGV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS50aW1lci5yZXN1bWUoKTtcclxuICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNjYWxlKDEsIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCB0aW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAvLyDmmJ/mmJ/liqjnlLtcclxuICAgICAgICBpZiAodGhpcy5zdGFyU3dpY2gpIHtcclxuICAgICAgICAgICAgaWYgKHRpbWUgLSB0aGlzLnN0YXJJbnRlcnZhbCA+IHRoaXMuc3RhclRpbWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhclRpbWUgPSB0aW1lO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGFyU2hpbmluZ0VmZmVjdCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyDlvIDlp4vmjInpkq7liqjnlLtcclxuICAgICAgICBpZiAodGhpcy5zdGFydEJTd2l0Y2gpIHtcclxuICAgICAgICAgICAgaWYgKHRpbWUgLSB0aGlzLnN0YXJ0QkludGVydmFsID4gdGhpcy5zdGFydEJUaW1lKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0QlRpbWUgPSB0aW1lO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGFydEJ0bkFuaSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi5jbGVhckFsbCh0aGlzKTtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3VzcGVuZCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8qKuiHquW3sSovXHJcbiAgICBwcml2YXRlIHNlbGY6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5omA5bGe5Zy65pmvKi9cclxuICAgIHByaXZhdGUgc2VsZlNjZW5lOiBMYXlhLlNjZW5lO1xyXG4gICAgLyoq5Zy65pmv6ISa5pys57uE5Lu2Ki9cclxuICAgIHByaXZhdGUgbWFpblNjZW5lQ29udHJvbDtcclxuICAgIC8qKuS4u+inkueItuiKgueCuSovXHJcbiAgICBwcml2YXRlIHJvbGVQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG4gICAgLyoq5pWM5Lq654i26IqC54K5Ki9cclxuICAgIHByaXZhdGUgZW5lbXlQYXJlbnQ6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICAgICAgdGhpcy5idWNrZXRDbGluaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWIneWni+WMluW/heimgeWxnuaApyovXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZiA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5zZWxmU2NlbmUgPSB0aGlzLnNlbGYuc2NlbmUgYXMgTGF5YS5TY2VuZTtcclxuICAgICAgICB0aGlzLnJvbGVQYXJlbnQgPSB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnJvbGVQYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5lbmVteVBhcmVudCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uZW5lbXlQYXJlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Li76KeS55qE54K55Ye75LqL5Lu2XHJcbiAgICAqIOWSjOmVv+aMieWHuueOsOWxnuaAp+WxleekuumhtemdolxyXG4gICAgKiDmu5Hliqjlj6/ku6Xmi5bliqjkuLvop5LliLDop4TlrprnmoTkvY3nva5cclxuICAgKi9cclxuICAgIGJ1Y2tldENsaW5rKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VsZi5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuZG93bik7XHJcbiAgICAgICAgdGhpcy5zZWxmLm9uKExheWEuRXZlbnQuTU9VU0VfTU9WRSwgdGhpcywgdGhpcy5tb3ZlKTtcclxuICAgICAgICB0aGlzLnNlbGYub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy51cCk7XHJcbiAgICAgICAgdGhpcy5zZWxmLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm91dCk7XHJcbiAgICB9XHJcbiAgICAvKirmjInkuIss57uZ5LqI55uu5qCH5L2N572u77yM57OW5p6c6LWw5ZCR55uu5qCH5L2N572uO1xyXG4gICAgICog5bm25LiU5YiG5pWw5aKe5YqgKi9cclxuICAgIGRvd24oZXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBsZXQgc3VzcGVuZCA9IHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc3VzcGVuZDtcclxuICAgICAgICBpZiAoIXN1c3BlbmQpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmU2NlbmVbJ01haW5TY2VuZUNvbnRyb2wnXS5zdXNwZW5kID0gdHJ1ZTtcclxuICAgICAgICAgICAgLy8gTGF5YS50aW1lci5wYXVzZSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc3VzcGVuZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAvLyBMYXlhLnRpbWVyLnJlc3VtZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDmiZPlvIDlkozlhbPpl63mlYzkurrnmoTlsZ7mgKdcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBlbmVteSA9IHRoaXMuZW5lbXlQYXJlbnQuX2NoaWxkcmVuW2ldIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICBsZXQgcHJvcGVydHlTaG93ID0gZW5lbXkuZ2V0Q2hpbGRCeU5hbWUoJ3Byb3BlcnR5U2hvdycpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgICAgICBpZiAoIXN1c3BlbmQpIHtcclxuICAgICAgICAgICAgICAgIHByb3BlcnR5U2hvdy5hbHBoYSA9IDE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eVNob3cuYWxwaGEgPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOS4u+inkueahOWxnuaAp1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5yb2xlUGFyZW50Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgcm9sZSA9IHRoaXMucm9sZVBhcmVudC5fY2hpbGRyZW5baV0gYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgICAgIGxldCBwcm9wZXJ0eVNob3cgPSByb2xlLmdldENoaWxkQnlOYW1lKCdwcm9wZXJ0eVNob3cnKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgaWYgKCFzdXNwZW5kKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGZTY2VuZVsnTWFpblNjZW5lQ29udHJvbCddLnN1c3BlbmQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgcHJvcGVydHlTaG93LmFscGhhID0gMTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZlNjZW5lWydNYWluU2NlbmVDb250cm9sJ10uc3VzcGVuZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgcHJvcGVydHlTaG93LmFscGhhID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKuenu+WKqCovXHJcbiAgICBtb3ZlKGV2ZW50KTogdm9pZCB7XHJcbiAgICB9XHJcbiAgICAvKirmiqzotbcqL1xyXG4gICAgdXAoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmLnNjYWxlKDEsIDEpO1xyXG4gICAgfVxyXG4gICAgLyoq5Ye65bGP5bmVKi9cclxuICAgIG91dCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlbGYuc2NhbGUoMSwgMSk7XHJcbiAgICB9XHJcbiAgICAvKirmmoLlgZznirbmgIHmmL7npLrmiYDmnInlsZ7mgKfmoYbvvIzpnZ7mmoLlgZznirbmgIHkuI3mmL7npLrlsZ7mgKfmoYYqL1xyXG4gICAgc3VzcGVuZGVkU3RhdGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgbW9kdWxlIHRvb2xzIHtcbiAgICAvKipcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gbiBcbiAgICAgKiBAcGFyYW0gbSDnrKzkuozkuKrpmo/mnLrmlbDkuI3lrZjlnKjnmoTor53pu5jorqTkuLoxMFxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiByYW5kb20objogbnVtYmVyLCBtPzogbnVtYmVyKSB7XG4gICAgICAgIG0gPSBtIHx8IDEwO1xuICAgICAgICBjb25zdCBjOiBudW1iZXIgPSBtIC0gbiArIDE7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjICsgbilcbiAgICB9XG4gICAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIGFyciBcbiAgICAgKiBAcGFyYW0gY291bnRcbiAgICAgKiDku47mlbDnu4TkuK3pmo/mnLrlj5blh7pjb3VudOS4quaVsCBcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tQXJyYXlFbGVtZW50cyhhcnIsIGNvdW50KSB7XG4gICAgICAgIHZhciBzaHVmZmxlZCA9IGFyci5zbGljZSgwKSwgaSA9IGFyci5sZW5ndGgsIG1pbiA9IGkgLSBjb3VudCwgdGVtcCwgaW5kZXg7XG4gICAgICAgIHdoaWxlIChpLS0gPiBtaW4pIHtcbiAgICAgICAgICAgIGluZGV4ID0gTWF0aC5mbG9vcigoaSArIDEpICogTWF0aC5yYW5kb20oKSk7XG4gICAgICAgICAgICB0ZW1wID0gc2h1ZmZsZWRbaW5kZXhdO1xuICAgICAgICAgICAgc2h1ZmZsZWRbaW5kZXhdID0gc2h1ZmZsZWRbaV07XG4gICAgICAgICAgICBzaHVmZmxlZFtpXSA9IHRlbXA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNodWZmbGVkLnNsaWNlKG1pbik7XG4gICAgfVxuICAgIGV4cG9ydCBmdW5jdGlvbiBnZXRBcnJheURpZkVsZW1lbnRzKGFyciwgY291bnQpOiBhbnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgbGV0IGk6IG51bWJlciA9IDA7XG4gICAgICAgIGZvciAoaTsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHRlbXAgPSBnZXREaWZmRWxlKGFyci5zbGljZSgpLCByZXN1bHQsIGkpO1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godGVtcCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGdldERpZmZFbGUoYXJyLCByZXN1bHQsIHBsYWNlKSB7XG4gICAgICAgIGxldCBpbmRleEFyciA9IFtdO1xuICAgICAgICBsZXQgaTogbnVtYmVyID0gMDtcbiAgICAgICAgZm9yIChpOyBpIDwgYXJyLmxlbmd0aCAtIHBsYWNlOyBpKyspIHtcbiAgICAgICAgICAgIGluZGV4QXJyLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmFuSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbmRleEFyci5sZW5ndGgpO1xuICAgICAgICBpZiAocmVzdWx0LmluZGV4T2YoYXJyW3JhbkluZGV4XSkgPT09IC0xKSB7XG4gICAgICAgICAgICBjb25zdCBiYWNrTnVtID0gYXJyW3JhbkluZGV4XTtcbiAgICAgICAgICAgIGFycltyYW5JbmRleF0gPSBhcnJbaW5kZXhBcnIubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICByZXR1cm4gYmFja051bTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFyci5zcGxpY2UocmFuSW5kZXgsIDEpO1xuICAgICAgICAgICAgcmV0dXJuIGdldERpZmZFbGUoYXJyLCByZXN1bHQsIHBsYWNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBleHBvcnQgbGV0IHJvbGVEcmFnQ2FuOiBib29sZWFuID0gZmFsc2U7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNvcHlkYXRhKG9iaik6IGFueSB7XG4gICAgICAgIGNvbnN0IHJldCA9IHt9O1xuICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICAgICAgICByZXRbbmFtZV0gPSBvYmpbbmFtZV07XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOaVsOe7hOWkjeWItiBcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gZmlsbEFycmF5KHZhbHVlLCBsZW4pIHtcbiAgICAgICAgdmFyIGFyciA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBhcnIucHVzaCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gYW5nbGUg6KeS5bqmXG4gICAgICogQHBhcmFtIFhZIOW/hemhu+WMheWQq3nkuIrnmoTpgJ/luqZcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gc3BlZWRCeUFuZ2xlKGFuZ2xlOiBudW1iZXIsIFhZOiBhbnkpIHtcbiAgICAgICAgaWYgKGFuZ2xlICUgOTAgPT09IDAgfHwgIWFuZ2xlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwi6K6h566X55qE6KeS5bqm5byC5bi4LOmcgOimgeafpeeci++8mlwiLCBhbmdsZSk7XG4gICAgICAgICAgICAvLyBkZWJ1Z2dlclxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzcGVlZFhZID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIHNwZWVkWFkueSA9IFhZLnk7XG4gICAgICAgIHNwZWVkWFkueCA9IHNwZWVkWFkueSAvIE1hdGgudGFuKGFuZ2xlICogTWF0aC5QSSAvIDE4MCk7XG4gICAgICAgIHJldHVybiBzcGVlZFhZO1xuICAgIH1cbiAgICBleHBvcnQgZnVuY3Rpb24gc3BlZWRYWUJ5QW5nbGUoYW5nbGU6IG51bWJlciwgc3BlZWQ6IG51bWJlcikge1xuICAgICAgICBpZiAoYW5nbGUgJSA5MCA9PT0gMCB8fCAhYW5nbGUpIHtcbiAgICAgICAgICAgIC8vZGVidWdnZXJcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzcGVlZFhZID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIHNwZWVkWFkueCA9IHNwZWVkICogTWF0aC5jb3MoYW5nbGUgKiBNYXRoLlBJIC8gMTgwKTtcbiAgICAgICAgc3BlZWRYWS55ID0gc3BlZWQgKiBNYXRoLnNpbihhbmdsZSAqIE1hdGguUEkgLyAxODApO1xuICAgICAgICByZXR1cm4gc3BlZWRYWTtcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gc3BlZWRMYWJlbEJ5QW5nbGUoYW5nbGU6IG51bWJlciwgc3BlZWQ6IG51bWJlciwgc3BlZWRCYXRlPzogbnVtYmVyKSB7XG4gICAgICAgIC8vIGlmIChhbmdsZSAlIDkwID09PSAwIHx8ICFhbmdsZSkge1xuICAgICAgICAvLyAgICAgZGVidWdnZXJcbiAgICAgICAgLy8gfVxuICAgICAgICBjb25zdCBzcGVlZFhZID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIGNvbnN0IHNlbGZBbmdsZSA9IGFuZ2xlO1xuICAgICAgICBjb25zdCBkZWZhdWx0U3BlZWQgPSBzcGVlZDtcbiAgICAgICAgY29uc3QgYmF0ZSA9IHNwZWVkQmF0ZSB8fCAxO1xuICAgICAgICBpZiAoc2VsZkFuZ2xlICUgOTAgPT09IDApIHtcbiAgICAgICAgICAgIGlmIChzZWxmQW5nbGUgPT09IDAgfHwgc2VsZkFuZ2xlID09PSAzNjApIHtcbiAgICAgICAgICAgICAgICBzcGVlZFhZLnggPSBNYXRoLmFicyhkZWZhdWx0U3BlZWQpICogYmF0ZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZkFuZ2xlID09PSA5MCkge1xuICAgICAgICAgICAgICAgIHNwZWVkWFkueSA9IE1hdGguYWJzKGRlZmF1bHRTcGVlZCkgKiBiYXRlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxmQW5nbGUgPT09IDE4MCkge1xuICAgICAgICAgICAgICAgIHNwZWVkWFkueCA9IC1NYXRoLmFicyhkZWZhdWx0U3BlZWQpICogYmF0ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3BlZWRYWS55ID0gLU1hdGguYWJzKGRlZmF1bHRTcGVlZCkgKiBiYXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgdGVtcFhZID0gdG9vbHMuc3BlZWRYWUJ5QW5nbGUoc2VsZkFuZ2xlLCBkZWZhdWx0U3BlZWQpO1xuICAgICAgICAgICAgc3BlZWRYWS54ID0gdGVtcFhZLng7XG4gICAgICAgICAgICBzcGVlZFhZLnkgPSB0ZW1wWFkueTtcbiAgICAgICAgICAgIGlmIChzZWxmQW5nbGUgPiAwICYmIHNlbGZBbmdsZSA8IDE4MCkge1xuICAgICAgICAgICAgICAgIHNwZWVkWFkueSA9IE1hdGguYWJzKHNwZWVkWFkueSkgKiBiYXRlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzcGVlZFhZLnkgPSAtTWF0aC5hYnMoc3BlZWRYWS55KSAqIGJhdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZkFuZ2xlID4gOTAgJiYgc2VsZkFuZ2xlIDwgMjcwKSB7XG4gICAgICAgICAgICAgICAgc3BlZWRYWS54ID0gLU1hdGguYWJzKHNwZWVkWFkueCkgKiBiYXRlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzcGVlZFhZLnggPSBNYXRoLmFicyhzcGVlZFhZLngpICogYmF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3BlZWRYWTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIGRlZ3JlZSDop5LluqZcbiAgICAgKiDmoLnmja7op5LluqborqHnrpflvKfluqZcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gZ2V0UmFkKGRlZ3JlZSkge1xuICAgICAgICByZXR1cm4gZGVncmVlIC8gMTgwICogTWF0aC5QSTtcbiAgICB9XG4gICAgLyoqXG4gICAgICog5rGC5ZyG5LiK55qE54K555qE5Z2Q5qCHflxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBnZXRSb3VuZFBvcyhhbmdsZTogbnVtYmVyLCByYWRpdXM6IG51bWJlciwgY2VudFBvczogYW55KSB7XG4gICAgICAgIHZhciBjZW50ZXIgPSBjZW50UG9zOyAvL+WchuW/g+WdkOagh1xuICAgICAgICB2YXIgcmFkaXVzID0gcmFkaXVzOyAvL+WNiuW+hFxuICAgICAgICB2YXIgaHVkdSA9ICgyICogTWF0aC5QSSAvIDM2MCkgKiBhbmdsZTsgLy85MOW6puinkueahOW8p+W6plxuXG4gICAgICAgIHZhciBYID0gY2VudGVyLnggKyBNYXRoLnNpbihodWR1KSAqIHJhZGl1czsgLy/msYLlh7o5MOW6puinkueahHjlnZDmoIdcbiAgICAgICAgdmFyIFkgPSBjZW50ZXIueSAtIE1hdGguY29zKGh1ZHUpICogcmFkaXVzOyAvL+axguWHujkw5bqm6KeS55qEeeWdkOagh1xuICAgICAgICByZXR1cm4geyB4OiBYLCB5OiBZIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOi9rOWMluWkp+eahOaVsOWtl1xuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0ZU51bShudW06IG51bWJlcik6IHN0cmluZyB7XG4gICAgICAgIGlmICh0eXBlb2YgKG51bSkgIT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIuimgei9rOWMlueahOaVsOWtl+W5tuS4jeS4um51bWJlclwiKTtcbiAgICAgICAgICAgIHJldHVybiBudW07XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJhY2tOdW06IHN0cmluZztcblxuICAgICAgICBpZiAobnVtIDwgMTAwMCkge1xuICAgICAgICAgICAgYmFja051bSA9IFwiXCIgKyBudW07XG4gICAgICAgIH0gZWxzZSBpZiAobnVtIDwgMTAwMDAwMCkge1xuICAgICAgICAgICAgYmFja051bSA9IFwiXCIgKyAobnVtIC8gMTAwMCkudG9GaXhlZCgxKSArIFwia1wiO1xuICAgICAgICB9IGVsc2UgaWYgKG51bSA8IDEwZTgpIHtcbiAgICAgICAgICAgIGJhY2tOdW0gPSBcIlwiICsgKG51bSAvIDEwMDAwMDApLnRvRml4ZWQoMSkgKyBcIm1cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJhY2tOdW0gPSBcIlwiICsgbnVtO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiYWNrTnVtO1xuICAgIH1cblxufVxuZXhwb3J0IGRlZmF1bHQgdG9vbHM7Il19
