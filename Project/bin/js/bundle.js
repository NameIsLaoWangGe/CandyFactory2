var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Suspend_1 = require("./script/Suspend");
var Assembly_1 = require("./script/Assembly");
var Role_1 = require("./script/Role");
var OperationControl_1 = require("./script/OperationControl");
var MainSceneControl_1 = require("./script/MainSceneControl");
var Candy_1 = require("./script/Candy");
var Enemy_1 = require("./script/Enemy");
var EnemyBullet_1 = require("./script/EnemyBullet");
var EnemyHint_1 = require("./script/EnemyHint");
var Explode_1 = require("./script/Explode");
var HintWord_1 = require("./script/HintWord");
var Ranking_1 = require("./script/Ranking");
var Resurgence_1 = require("./script/Resurgence");
var RewardWords_1 = require("./script/RewardWords");
var RoleBullet_1 = require("./script/RoleBullet");
var Settlement_1 = require("./script/Settlement");
var SpeakBox_1 = require("./script/SpeakBox");
var StartGame_1 = require("./script/StartGame");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/Suspend.ts", Suspend_1.default);
        reg("script/Assembly.ts", Assembly_1.default);
        reg("script/Role.ts", Role_1.default);
        reg("script/OperationControl.ts", OperationControl_1.default);
        reg("script/MainSceneControl.ts", MainSceneControl_1.default);
        reg("script/Candy.ts", Candy_1.default);
        reg("script/Enemy.ts", Enemy_1.default);
        reg("script/EnemyBullet.ts", EnemyBullet_1.default);
        reg("script/EnemyHint.ts", EnemyHint_1.default);
        reg("script/Explode.ts", Explode_1.default);
        reg("script/HintWord.ts", HintWord_1.default);
        reg("script/Ranking.ts", Ranking_1.default);
        reg("script/Resurgence.ts", Resurgence_1.default);
        reg("script/RewardWords.ts", RewardWords_1.default);
        reg("script/RoleBullet.ts", RoleBullet_1.default);
        reg("script/Settlement.ts", Settlement_1.default);
        reg("script/SpeakBox.ts", SpeakBox_1.default);
        reg("script/StartGame.ts", StartGame_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "top";
    GameConfig.alignH = "center";
    GameConfig.startScene = "scene/MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Assembly":3,"./script/Candy":4,"./script/Enemy":5,"./script/EnemyBullet":6,"./script/EnemyHint":7,"./script/Explode":8,"./script/HintWord":9,"./script/MainSceneControl":10,"./script/OperationControl":11,"./script/Ranking":12,"./script/Resurgence":13,"./script/RewardWords":14,"./script/Role":15,"./script/RoleBullet":16,"./script/Settlement":17,"./script/SpeakBox":18,"./script/StartGame":19,"./script/Suspend":20}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Assembly = /** @class */ (function (_super) {
    __extends(Assembly, _super);
    function Assembly() {
        return _super.call(this) || this;
    }
    Assembly.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化属性*/
    Assembly.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.smokeSwitch = true;
        this.smokeTime = Date.now();
        this.smokeInterval = 500;
        this.initialPX_Machine = this.machine.x;
        this.self['Assembly'] = this;
        // 指示灯1的动画设置
        this.lamp_01 = this.energyLamp_01.getChildByName('lamp_01');
        this.lamp_02 = this.energyLamp_01.getChildByName('lamp_02');
        this.lamp_03 = this.energyLamp_01.getChildByName('lamp_03');
        this.lamp_01.alpha = 0.3;
        this.lamp_02.alpha = 0.3;
        this.lamp_03.alpha = 0.3;
        // 指示灯2的动画设置
        this.lamp_04 = this.energyLamp_02.getChildByName('lamp_04');
        this.lamp_05 = this.energyLamp_02.getChildByName('lamp_05');
        this.lamp_06 = this.energyLamp_02.getChildByName('lamp_06');
        this.lamp_04.alpha = 0.3;
        this.lamp_05.alpha = 0.3;
        this.lamp_06.alpha = 0.3;
        this.LampSwitch = true;
        this.lampTime = Date.now();
        this.lampInterval = 1600;
        this.lampAni_01();
        this.lampAni_02();
        // 位移抖动参数
        this.mDirection = Math.random() * 2 === 1 ? 'left' : 'right';
        this.mshakeInterval = 30;
        this.mshakeTime = Date.now();
        this.mshakesTre = 1;
        this.mshakeSwitch = true;
        // 角度抖动参数
        this.rshakeInterval = 30;
        this.rshakeTime = Date.now();
        this.rshakesTre = 2;
        this.rDirection = Math.random() * 2 === 1 ? 'left' : 'right';
        this.rshakeSwitch = true;
        // 时间进度条抖动
        this.timer = this.owner.getChildByName('timer');
        this.timeSchedule = this.timer.getChildByName('timeSchedule');
        this.timerShakeNum = 0;
        // 水管动画
        this.pipeSk_01 = this.machine.getChildByName('pipeline_01');
        this.pipeSk_02 = this.machine.getChildByName('pipeline_02');
        this.createPipeSk();
        this.pipeSwitch = false;
        this.pipeTime = Date.now();
        this.pipeIntervel = 2500;
    };
    /**创建骨骼动画皮肤*/
    Assembly.prototype.createPipeSk = function () {
        //创建水管动画1模板
        this.pipeSk_01Tem = new Laya.Templet();
        this.pipeSk_01Tem.on(Laya.Event.COMPLETE, this, this.parseComplete_01);
        this.pipeSk_01Tem.on(Laya.Event.ERROR, this, this.onError);
        this.pipeSk_01Tem.loadAni("candy/糖果机器/pipeline_01.sk");
        //创建水管动画1模板
        this.pipeSk_02Tem = new Laya.Templet();
        this.pipeSk_02Tem.on(Laya.Event.COMPLETE, this, this.parseComplete_02);
        this.pipeSk_02Tem.on(Laya.Event.ERROR, this, this.onError);
        this.pipeSk_02Tem.loadAni("candy/糖果机器/pipeline_01.sk");
    };
    Assembly.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    Assembly.prototype.parseComplete_01 = function () {
        // 水管动画
        this.pipeSk_01.play('static', true);
    };
    Assembly.prototype.parseComplete_02 = function () {
        // 水管动画
        this.pipeSk_02.play('static', true);
    };
    /**水管动画*/
    Assembly.prototype.pipeAnimation = function (type) {
        if (type === 'static') {
            this.pipeSk_01.play('static', true);
            this.pipeSk_02.play('static', true);
        }
        else if (type === 'flow') {
            this.pipeSk_01.play('flow', true);
            this.pipeSk_02.play('flow', true);
        }
    };
    /**能量灯动画*/
    Assembly.prototype.lampAni_01 = function () {
        Laya.Tween.to(this.lamp_01, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.lamp_01, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
            Laya.Tween.to(this.lamp_02, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                Laya.Tween.to(this.lamp_02, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                }, []), 0);
                Laya.Tween.to(this.lamp_03, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    Laya.Tween.to(this.lamp_03, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    }, []), 0);
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    /**能量灯动画*/
    Assembly.prototype.lampAni_02 = function () {
        Laya.Tween.to(this.lamp_04, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.lamp_04, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
            Laya.Tween.to(this.lamp_05, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                Laya.Tween.to(this.lamp_05, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                }, []), 0);
                Laya.Tween.to(this.lamp_06, { alpha: 1 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    Laya.Tween.to(this.lamp_06, { alpha: 0.3 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                    }, []), 0);
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    /**位移抖动
    * @param target 目标
    */
    Assembly.prototype.moveShake = function (target) {
        if (this.mshakeSwitch) {
            var nowTime = Date.now();
            if (nowTime - this.mshakeTime > this.mshakeInterval) {
                this.mshakeTime = nowTime;
                // 判断目标是什么,然后对比他原来的位置
                var initialPX = //target初始位置
                 void 0; //target初始位置
                if (target === this.machine) {
                    initialPX = this.initialPX_Machine;
                }
                var shakeX = this.mshakesTre; //强度
                if (this.mDirection === "left") {
                    target.x -= this.mshakesTre;
                    if (this.machine.x < initialPX) {
                        this.mDirection = "right";
                    }
                }
                else if (this.mDirection === "right") {
                    target.x += this.mshakesTre;
                    if (this.machine.x > initialPX) {
                        this.mDirection = "left";
                    }
                }
            }
        }
    };
    /**时间抖动抖动
     * 根据进度条的时间来给不同的抖动频率和抖动速度
    */
    Assembly.prototype.timerShake = function () {
        if (this.timeSchedule.value > 0 && this.timeSchedule.value <= 0.15) {
            this.rshakeInterval = 40;
            this.rshakesTre = 2;
        }
        else if (this.timeSchedule.value > 0.15 && this.timeSchedule.value <= 0.4) {
            this.rshakeInterval = 50;
            this.rshakesTre = 1.5;
        }
        else if (this.timeSchedule.value > 0.4 && this.timeSchedule.value <= 0.7) {
            this.rshakeInterval = 60;
            this.rshakesTre = 1;
        }
        else if (this.timeSchedule.value > 0.7 && this.timeSchedule.value <= 1) {
            this.rshakeInterval = 70;
            this.rshakesTre = 0.5;
        }
        else {
            this.rshakeInterval = 70;
            this.rshakesTre = 0.5;
        }
        if (this.rshakeSwitch) {
            var nowTime = Date.now();
            if (nowTime - this.rshakeTime > this.rshakeInterval) {
                this.rshakeTime = nowTime;
                // 目标判断
                if (this.rDirection === "left") {
                    this.timer.rotation = -this.rshakesTre;
                    if (this.timer.rotation < 0) {
                        this.rDirection = "right";
                    }
                }
                else if (this.rDirection === "right") {
                    this.timer.rotation = this.rshakesTre;
                    if (this.timer.rotation > 0) {
                        this.rDirection = "left";
                    }
                }
            }
        }
    };
    Assembly.prototype.onUpdate = function () {
        if (this.selfScene['MainSceneControl'].gameOver) {
            return;
        }
        // 烟囱烟雾特效
        if (this.smokeSwitch) {
            1;
            var nowTime = Date.now();
            if (nowTime - this.smokeTime > this.smokeInterval) {
                // 重置时间
                this.smokeTime = nowTime;
                // 随机时间间隔
                var random = Math.floor(Math.random() * 300) + 100;
                this.smokeInterval = 600 - random;
                // 随机位置
                this.selfScene['MainSceneControl'].explodeAni(this.machine, 650, 190, 'smokeEffects', 1, 10);
            }
        }
        // 指针动作
        this.LongPointer.rotation += 10;
        this.moveShake(this.machine);
        //进度条抖动
        this.timerShake();
        // 指示灯动画
        if (this.LampSwitch) {
            var time = Date.now();
            if (time - this.lampTime > this.lampInterval) {
                this.lampTime = time;
                this.lampAni_01();
                this.lampAni_02();
            }
        }
        // 水管动画
        if (this.pipeSwitch) {
            var time = Date.now();
            if (time - this.pipeTime > this.pipeIntervel) {
                this.pipeTime = time;
                this.pipeSk_01.play('flow', false);
                this.pipeSk_02.play('flow', false);
            }
        }
    };
    Assembly.prototype.onDisable = function () {
    };
    return Assembly;
}(Laya.Script));
exports.default = Assembly;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Candy = /** @class */ (function (_super) {
    __extends(Candy, _super);
    function Candy() {
        return _super.call(this) || this;
    }
    Candy.prototype.onEnable = function () {
        this.initProperty();
    };
    /**初始化*/
    Candy.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.candyTagRole = null;
        this.selfSpeed = 10;
        this.spaceY = 5;
        this.shadow = this.self.getChildByName('shadow');
        this.hintWord = this.selfScene['MainSceneControl'].hintWord;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.group = null;
        this.skeleton = this.self.getChildByName('skeleton');
        this.self['Candy'] = this;
        this.randomCandyClicks(3, 1);
        this.createBoneAni();
    };
    /**糖果的随机点击次数
     * @param randomNum 随机次数
     * @param baseNum 基础点击次数
    */
    Candy.prototype.randomCandyClicks = function (randomNum, baseNum) {
        var clicksNum = Math.floor(Math.random() * randomNum) + baseNum;
        this.clicksLabel = this.self.getChildByName('clicksLabel');
        this.clicksLabel.value = clicksNum.toString();
        this.clicksLabel.alpha = 0;
    };
    /**创建骨骼动画皮肤*/
    Candy.prototype.createBoneAni = function () {
        //创建动画模板
        this.templet = new Laya.Templet();
        this.templet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this.templet.on(Laya.Event.ERROR, this, this.onError);
        this.templet.loadAni("candy/糖果/candyCompilations.sk");
    };
    Candy.prototype.onError = function () {
        console.log('骨骼动画加载错误！');
    };
    Candy.prototype.parseComplete = function () {
        this.playSkeletonAni(2, 'box_turnDown');
    };
    /**播放骨骼动画
     * @param speed 播放速度
     * @param type 播放动画类型
    */
    Candy.prototype.playSkeletonAni = function (speed, type) {
        if (type === 'bonbonniere') {
            this.shadow.skin = 'candy/糖果/糖果盒影子.png';
        }
        else {
            this.shadow.skin = 'candy/糖果/糖果影子.png';
        }
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                this.skeleton.play('yellow_' + type, true);
                break;
            case 'redCandy___':
                this.skeleton.play('red_' + type, true);
                break;
            case 'blueCandy__':
                this.skeleton.play('blue_' + type, true);
                break;
            case 'greenCandy_':
                this.skeleton.play('green_' + type, true);
                break;
            default:
                break;
        }
        this.skeleton.x = this.self.width / 2 + 3;
        this.skeleton.y = this.self.height / 2;
        this.skeleton.playbackRate(speed);
    };
    /**飞到主角身上增加主角属性
    * 并且播放属性增加动画
    */
    Candy.prototype.candyFlyToRole = function () {
        if (this.self.x < Laya.stage.width / 2) {
            this.candyTagRole = this.selfScene['MainSceneControl'].role_01;
        }
        else {
            this.candyTagRole = this.selfScene['MainSceneControl'].role_02;
        }
        this.playSkeletonAni(2, 'turnDown');
        // 基础时间参数，动画的时间会随着位置边近而缩小
        var timePar = 300 + this.group * 100;
        // x轴的位置偏移
        var targetX = this.candyTagRole.x - 50;
        var targetY = this.candyTagRole.y;
        var HalfX;
        var distancePer = 2;
        if (this.self.x > Laya.stage.width / 2) {
            HalfX = this.self.x + (this.candyTagRole.x - this.self.x) * 3 / 5;
        }
        else {
            HalfX = this.self.x - (this.self.x - this.candyTagRole.x) * 3 / 5;
        }
        var HalfY = this.self.y + (this.candyTagRole.y - this.self.y) / distancePer;
        // 糖果本身
        // 第一步放大
        Laya.Tween.to(this.self, { x: HalfX, y: HalfY, scaleX: 1.5, scaleY: 1.5 }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
            // 第二步降落
            Laya.Tween.to(this.self, { x: targetX, y: this.candyTagRole.y, scaleX: 0.6, scaleY: 0.6 }, timePar / 2, null, Laya.Handler.create(this, function () {
                this.hintWordMove();
                this.roleAddProperty();
                this.self.removeSelf();
                this.selfScene['MainSceneControl'].addScores(100);
            }), 0);
        }), 0);
        // 糖果的影子处理
        // 拉开距离并缩小
        Laya.Tween.to(this.shadow, { x: -20 + 52, y: 100 + 60, scaleX: 0.8, scaleY: 0.8, }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
            // 第二部回归
            Laya.Tween.to(this.shadow, { x: -10 + 52, y: 60, scaleX: 0.7, scaleY: 0.7 }, timePar, null, Laya.Handler.create(this, function () {
            }), 0);
        }), 0);
    };
    /**属性增加提示动画*/
    Candy.prototype.hintWordMove = function () {
        var MainSceneControl = this.selfScene['MainSceneControl'];
        if (this.self.x < Laya.stage.width / 2) {
            this.candyTagRole = MainSceneControl.role_01;
        }
        else {
            this.candyTagRole = MainSceneControl.role_02;
        }
        var x = 80;
        var y = -20;
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '攻击里', 10, 1);
                break;
            case 'redCandy___':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '生命', 5, 1);
                break;
            case 'blueCandy__':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '公鸡速度', 10, 1);
                break;
            case 'greenCandy_':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '防御力', 5, 1);
                break;
            default:
        }
    };
    /**根据糖果的种类增加主角属性规则
     * 并且播放增加属性文字提示动画
    */
    Candy.prototype.roleAddProperty = function () {
        this.self.name = this.self.name.substring(0, 11);
        switch (this.self.name) {
            case 'yellowCandy':
                this.candyTagRole['Role'].role_property.attackValue += 10;
                break;
            case 'redCandy___':
                this.candyTagRole['Role'].role_property.blood += 5;
                break;
            case 'blueCandy__':
                this.candyTagRole['Role'].role_property.attackSpeed += 10;
                break;
            case 'greenCandy_':
                this.candyTagRole['Role'].role_property.defense += 5;
                break;
            default:
                break;
        }
    };
    /**飞到主角身上并且爆炸
    * 被消灭后会原地爆炸，但是不对主角造成伤害
    * 爆炸后通过对应的糖果减少主角的属性
   */
    Candy.prototype.asExplodeCandy = function () {
        if (this.self.x < Laya.stage.width / 2) {
            this.candyTagRole = this.selfScene['MainSceneControl'].role_01;
        }
        else {
            this.candyTagRole = this.selfScene['MainSceneControl'].role_02;
        }
        // 第二部回归
        Laya.Tween.to(this.self, { x: this.candyTagRole.x, y: this.candyTagRole.y }, 800, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            var MainSceneControl = this.selfScene['MainSceneControl'];
            var zOrder = MainSceneControl.roleParent.zOrder = 2;
            MainSceneControl.explodeAni(this.selfScene, this.self.x, this.self.y, this.self.name.substring(0, 11), 15, zOrder - 1);
            this.propertyHintWord();
            this.roleReduceProperty();
            this.self.removeSelf();
        }), 0);
    };
    /**属性减少提示动画*/
    Candy.prototype.propertyHintWord = function () {
        var MainSceneControl = this.selfScene['MainSceneControl'];
        var x = 80;
        var y = -20;
        switch (this.self.name.substring(0, 11)) {
            case 'yellowCandy':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '减少攻击里', 10, 1);
                break;
            case 'redCandy___':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '减少生命', 5, 1);
                break;
            case 'blueCandy__':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '减少公鸡速度', 10, 1);
                break;
            case 'greenCandy_':
                MainSceneControl.createHintWord(this.candyTagRole, x, y, '减少防御力', 5, 1);
                break;
            default:
        }
    };
    /**根据糖果的种类增加主角属性规则
     * 并且播放增加属性文字提示动画
    */
    Candy.prototype.roleReduceProperty = function () {
        this.self.name = this.self.name.substring(0, 11);
        var role_01 = this.selfScene['MainSceneControl'].role_01;
        var role_02 = this.selfScene['MainSceneControl'].role_02;
        switch (this.self.name) {
            case 'yellowCandy':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.attackValue -= 10;
                }
                else {
                    role_02['Role'].role_property.attackValue -= 10;
                }
                break;
            case 'redCandy___':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.blood -= 5;
                }
                else {
                    role_02['Role'].role_property.blood -= 5;
                }
                break;
            case 'blueCandy__':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.attackSpeed -= 10;
                }
                else {
                    role_02['Role'].role_property.attackSpeed -= 10;
                }
                break;
            case 'greenCandy_':
                if (this.candyTagRole === role_01) {
                    role_01['Role'].role_property.defense -= 5;
                }
                else {
                    role_02['Role'].role_property.defense -= 5;
                }
                break;
            default:
                break;
        }
    };
    Candy.prototype.onUpdate = function () {
        // 如果目标主角存在且死亡，那么立即爆炸
        if (this.candyTagRole !== null && this.candyTagRole['Role'].roleDeath) {
            this.selfScene['MainSceneControl'].explodeAni(this.selfScene, this.self.x, this.self.y, this.self.name.substring(0, 11), 15, 100);
            this.self.removeSelf();
            this.candyFlyToRole = null;
        }
    };
    Candy.prototype.onDisable = function () {
        if (this.skeleton) {
            this.skeleton.removeSelf();
        }
        // 清理动画
        Laya.Tween.clearAll(this);
        if (this.self.name === 'yellowCandy') {
            Laya.Pool.recover('yellowCandy', this.self);
        }
        else if (this.self.name === 'redCandy___') {
            Laya.Pool.recover('redCandy___', this.self);
        }
        else if (this.self.name === 'blueCandy__') {
            Laya.Pool.recover('blueCandy__', this.self);
        }
        else if (this.self.name === 'greenCandy_') {
            Laya.Pool.recover('greenCandy_', this.self);
        }
    };
    return Candy;
}(Laya.Script));
exports.default = Candy;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        return _super.call(this) || this;
    }
    Enemy.prototype.onEnable = function () {
        // console.log('怪物报道');
        this.initProperty();
        this.enemyPropertySet();
    };
    /**初始化*/
    Enemy.prototype.initProperty = function () {
        this.self = this.owner;
        this.self.alpha = 1;
        this.selfScene = this.owner.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default); //场景脚本组件
        this.roleParent = this.mainSceneControl.roleParent;
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.selfSpeed = 3.5;
        this.propertyShow = this.self.getChildByName('propertyShow');
        this.attackTnterval = 100;
        this.recordTime = Date.now();
        this.speakBox = this.mainSceneControl.speakBox;
        this.scoreLabel = this.mainSceneControl.scoreLabel;
        this.repelTimer = 0;
        this.hintWord = this.mainSceneControl.hintWord;
        this.enemyBullet = this.mainSceneControl.enemyBullet;
        this.self['Enemy'] = this;
        if (this.skeleton) {
            this.skeleton.removeSelf();
        }
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        this.role_02 = this.selfScene['MainSceneControl'].role_02;
    };
    /**创建骨骼动画皮肤*/
    Enemy.prototype.createBoneAni = function () {
        //创建动画模板
        this.templet = new Laya.Templet();
        this.templet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this.templet.on(Laya.Event.ERROR, this, this.onError);
        if (this.enemyType === 'fighting') {
            this.templet.loadAni("candy/敌人/fightingEnemy.sk");
        }
        else if (this.enemyType === 'range') {
            this.templet.loadAni("candy/敌人/rangeEnemy.sk");
        }
    };
    Enemy.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    Enemy.prototype.parseComplete = function () {
        // 播放敌人动画
        var skeleton;
        this.skeleton = this.templet.buildArmature(0); //模板0
        this.skeletonListen();
        this.self.addChild(this.skeleton);
        this.skeleton.zOrder = -1;
        //格式
        if (this.enemyType === 'fighting') {
            this.self.width = 120;
            this.self.height = 180;
            this.self.pivotX = this.self.width / 2;
            this.self.pivotY = this.self.height / 2;
            this.skeleton.x = 63;
            this.skeleton.y = 108;
            this.skeleton.play('move', true);
            this.skeleton.playbackRate(1);
        }
        else if (this.enemyType === 'range') {
            this.self.width = 120;
            this.self.height = 180;
            this.self.pivotX = this.self.width / 2;
            this.self.pivotY = this.self.height / 2;
            this.skeleton.x = 64;
            this.skeleton.y = 86;
            // 左右动作不一样
            if (this.self.x < Laya.stage.width / 2) {
                this.skeleton.play('moveRight', true);
            }
            else {
                this.skeleton.play('moveLeft', true);
            }
            this.skeleton.playbackRate(1);
        }
    };
    /**监听*/
    Enemy.prototype.skeletonListen = function () {
        this.skeleton.on(Laya.Event.LABEL, this, function (e) {
            if (this.enemyType === 'fighting') {
                if (e.name === 'hitOut') {
                    this.enemyAttackRules();
                }
            }
            else if ('range') {
                if (e.name === 'hitOut') {
                    this.creatBullet();
                }
            }
        });
    };
    /**怪物等级包括的一些属性*/
    Enemy.prototype.enemyPropertySet = function () {
        // 属性赋值
        this.enemyProperty = {
            level: '',
            blood: '',
            moveSpeed: '',
            defense: '',
        };
        this.enemyProperty.blood = this.mainSceneControl.enemyProperty.blood;
        this.enemyProperty.attackValue = this.mainSceneControl.enemyProperty.attackValue;
        this.enemyProperty.attackSpeed = this.mainSceneControl.enemyProperty.attackSpeed;
        this.enemyProperty.defense = this.mainSceneControl.enemyProperty.defense;
        this.enemyProperty.moveSpeed = this.mainSceneControl.enemyProperty.moveSpeed;
    };
    /**属性刷新显示规则,血量显示一定是整数10*/
    Enemy.prototype.enemyPropertyUpdate = function () {
        // 血条上的血量显示
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        var str = Math.round(this.enemyProperty.blood * this.selfHealth.value).toString();
        var subStr_01 = str.substring(0, str.length - 1);
        var subStr_02 = subStr_01 + 0;
        this.bloodLabel.text = subStr_02;
        // 属性显示框上面显示的属性
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.enemyProperty.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.enemyProperty.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.enemyProperty.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.enemyProperty.defense;
        //当敌人数量达到一定数量的时候，给敌人增加攻击力开关
        // 需要有提示
        var roleDefense = this.slefTagRole['Role'].role_property.defense;
        if (this.mainSceneControl.enemyParent._children.length > 20 && this.enemyProperty.attackValue < roleDefense) {
            this.enemyProperty.attackValue = roleDefense + 5;
        }
    };
    /**近战攻击的敌人攻击主角的时候，会随机在主角范围内停止然后攻击
     * 远程攻击的敌人在主角的上面，他的y轴坐标比较高
     * 并且这个坐标在开始的时候执行一次
     * 更换主角的时候执行一次
     * */
    Enemy.prototype.randomAttackPoint = function () {
        var difference;
        var number = Math.floor(Math.random() * 2);
        if (number === 1) {
            difference = -Math.floor(Math.random() * 50);
        }
        else {
            difference = Math.floor(Math.random() * 50);
        }
        this.attackX = this.slefTagRole.x + difference;
        if (this.enemyType === 'fighting') {
            this.attackY = this.slefTagRole.y - Math.floor(Math.random() * 50);
        }
        else if ('range') {
            this.attackY = this.slefTagRole.y - Math.floor(Math.random() * 50) - 450;
        }
    };
    /**更换攻击目标
    * 如果当前攻击的主角死了，敌人会攻击另一个目标
    * 远程直接原地攻击
    * 近战敌人会重新判断攻击地点
   */
    Enemy.prototype.replaceTarget = function () {
        if (this.slefTagRole['Role'].roleDeath) {
            // 更换目标
            if (this.slefTagRole.name === 'role_01') {
                this.slefTagRole = this.mainSceneControl.role_02;
                this.tagHealth = this.mainSceneControl.role_02.getChildByName('health');
            }
            else if (this.slefTagRole.name === 'role_02') {
                this.slefTagRole = this.mainSceneControl.role_01;
                this.tagHealth = this.mainSceneControl.role_01.getChildByName('health');
            }
            if (this.enemyType === 'fighting') {
                this.randomAttackPoint();
                this.skeleton.play('move', true);
            }
        }
    };
    /**近战攻击的敌人第二阶段移动到主角位置，并且进入主角射程范围的移动规则
     * 加入被子弹击退效果
    */
    Enemy.prototype.fightingEnemyMove = function () {
        // x,y分别相减是两点连线向量
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.attackX - this.self.x, this.attackY - this.self.y);
        point.normalize();
        // 判断是否激活被击退效果
        if (this.slefTagRole.x > Laya.stage.width / 2) { //右边
            // 右边发生预警
            this.mainSceneControl.role_01['Role'].role_Warning = true;
        }
        else if (this.slefTagRole.x < Laya.stage.width / 2) { //左边
            // 左边发生预警
            this.mainSceneControl.role_02['Role'].role_Warning = true;
        }
        // 被击退反向移动
        if (this.repelTimer > 0) {
            this.repelTimer--;
            //反向移动
            this.self.x -= point.x * 4;
            this.self.y -= point.y * 4;
        }
        else {
            //向量相加移动
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**远程攻击的敌人移动
     * 远程攻击敌人不会被击退
    */
    Enemy.prototype.rangeEnemyMove = function () {
        // 向量计算并且归一化，向量长度为1。
        var point = new Laya.Point(this.attackX - this.self.x, this.attackY - this.self.y);
        point.normalize();
        //向量相加移动
        this.self.x += point.x * this.selfSpeed;
        this.self.y += point.y * this.selfSpeed;
    };
    /**怪物对主角造成伤害的公式
     * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
     * 掉血显示值，伤害小于零则显示0
     * 并且在主角头上出现掉血动画提示
    */
    Enemy.prototype.enemyAttackRules = function () {
        // 通过攻击力计算掉血状况
        var damage = this.enemyProperty.attackValue - this.slefTagRole['Role'].role_property.defense;
        if (damage > 0) {
            this.slefTagRole['Role'].role_property.blood -= damage;
        }
        else {
            damage = 0;
        }
        this.createHintWord(damage);
    };
    /**创建提示，掉血文字*/
    Enemy.prototype.createHintWord = function (damage) {
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(0, -150);
        this.slefTagRole.addChild(hintWord);
        var proPertyType = '敌人掉血';
        var numberValue;
        if (!this.slefTagRole.parent) {
            return;
        }
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    /**远程攻击创建子弹*/
    Enemy.prototype.creatBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('enemyBullet', this.enemyBullet.create, this.enemyBullet);
        var bulletParent = this.mainSceneControl.bulletParent;
        bulletParent.addChild(bullet);
        bullet.pos(this.self.x - 100, this.self.y);
        bullet['EnemyBullet'].attackValue = this.enemyProperty.attackValue;
        bullet['EnemyBullet'].bulletTarget = this.slefTagRole;
    };
    /**骨骼动画播放速度相对攻击速度进行调整
     * 当播放间隔低于500后达到峰值骼动画播放速度不会再加快
     */
    Enemy.prototype.playSpeedAdjust = function () {
        // 播放速度调整
        var playSpeed;
        if ((500 - this.enemyProperty.attackSpeed) / 500 > 0) {
            playSpeed = 1 + (500 - this.enemyProperty.attackSpeed) / 500;
        }
        else {
            playSpeed = 1;
        }
        this.skeleton.playbackRate(playSpeed);
    };
    /**敌人死亡时的行为
     * 关闭敌人预警
     * 并且爆炸
    */
    Enemy.prototype.enemyDeath = function () {
        this.mainSceneControl.role_01['Role'].role_Warning = false;
        this.mainSceneControl.role_02['Role'].role_Warning = false;
        this.self.removeSelf();
        if (this.enemyType === 'fighting') {
            this.selfScene['MainSceneControl'].explodeAni(this.selfScene, this.self.x, this.self.y, 'fighting', 15, 100);
        }
        else {
            this.selfScene['MainSceneControl'].explodeAni(this.selfScene, this.self.x, this.self.y, 'range', 15, 100);
        }
        this.selfScene['MainSceneControl'].createHintWord(this.selfScene, this.self.x, this.self.y, '杀怪分数', 100, 0.5);
    };
    /**敌人以属性的攻速为时间间隔进行攻击*/
    Enemy.prototype.launchAttack = function () {
        var nowTime = Date.now();
        if (nowTime - this.recordTime > this.enemyProperty.attackSpeed) {
            this.recordTime = nowTime;
            // 血量判断，目标死亡后，会更换目标
            if (!this.slefTagRole['Role'].roleDeath) {
                // 等上一个动画播放完毕
                this.skeleton.play('attack', false);
                this.playSpeedAdjust();
            }
            else {
                this.replaceTarget();
            }
        }
    };
    Enemy.prototype.onUpdate = function () {
        // 主角全部死亡则停止移动
        if (this.selfScene['MainSceneControl'].gameOver) {
            return;
        }
        // 如果没有目标则什么都不执行
        if (this.slefTagRole === null) {
            return;
        }
        // 血量低于0则死亡,并且关闭主角发射子弹预警,并且停止下面行为
        if (this.enemyProperty.blood < 0) {
            this.enemyDeath();
            return;
        }
        // 属性实时刷新
        this.enemyPropertyUpdate();
        //判断这个敌人是不是远程攻击，远程攻击的敌人暂时不会移动,会主动发射子弹进行攻击
        if (this.enemyType === 'range') {
            // 远程移动
            this.rangeEnemyMove();
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.attackX);
            var differenceY = Math.abs(this.self.y - this.attackY);
            if (differenceX < 10 && differenceY < 10) {
                this.role_01['Role'].role_Warning = true;
                this.role_02['Role'].role_Warning = true;
                this.selfSpeed = 0;
                this.launchAttack();
            }
        }
        else if (this.enemyType === 'fighting') {
            // 近战移动
            this.fightingEnemyMove();
            // 到达对象位置后开启攻击开关进行攻击，攻击速度依照时间间隔而定
            // 此时移动速度为零
            var differenceX = Math.abs(this.self.x - this.attackX);
            var differenceY = Math.abs(this.self.y - this.attackY);
            if (differenceX < 100 && differenceY < 100) {
                this.selfSpeed = 0;
                this.launchAttack();
            }
            else {
                this.selfSpeed = 4;
            }
        }
    };
    Enemy.prototype.onDisable = function () {
        Laya.Pool.recover('enemy', this.self);
    };
    return Enemy;
}(Laya.Script));
exports.default = Enemy;
},{"./MainSceneControl":10}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EnemyBullet = /** @class */ (function (_super) {
    __extends(EnemyBullet, _super);
    function EnemyBullet() {
        return _super.call(this) || this;
    }
    EnemyBullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    EnemyBullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.selfSpeed = 15;
        this.enemyParent = this.selfScene['MainSceneControl'].enemyParent;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.self['EnemyBullet'] = this;
    };
    /**始终攻击一个主角，如果这个主角死了，
     * 若果这个目标被移除了，那么发出去的子弹会沿着和怪物的方向继续移动到500
     * */
    EnemyBullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己和发射自己的敌人方向移动
            var point = new Laya.Point(this.self.x - this.belongEnemy.x, this.self.y - this.belongEnemy.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    /**子弹对主角造成伤害的公式
       * 攻击力-主角防御如果大于零则造成伤害，否则不造成伤害
       * 并且有动画提示文字
      */
    EnemyBullet.prototype.bulletAttackRules = function (role) {
        // 掉血显示值，伤害小于零则显示0
        var numberValue;
        // 伤害
        var damage = this.attackValue - role['Role'].role_property.defense;
        if (damage > 0) {
            role['Role'].role_property.blood -= damage;
            numberValue = damage;
        }
        else {
            numberValue = 0;
        }
    };
    EnemyBullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 碰到任何一个主角，子弹消失怪物掉血
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var differenceX = Math.abs(role.x - this.self.x);
            var differenceY = Math.abs(role.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                this.bulletAttackRules(role);
                this.self.removeSelf();
            }
        }
    };
    EnemyBullet.prototype.onDisable = function () {
    };
    return EnemyBullet;
}(Laya.Script));
exports.default = EnemyBullet;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EnemyHint = /** @class */ (function (_super) {
    __extends(EnemyHint, _super);
    function EnemyHint() {
        return _super.call(this) || this;
    }
    EnemyHint.prototype.onEnable = function () {
        this.init();
        this.appear();
    };
    /**初始化*/
    EnemyHint.prototype.init = function () {
        this.self = this.owner;
        this.self.rotation = 0;
        this.self.x = -20;
        this.self.scale(0, 0);
        this.self.alpha = 0;
        this.self.y = Laya.stage.height / 3;
        this.selfScene = this.owner.scene;
        this.numTime = Date.now();
        this.numInterval = 1000;
        this.numSwitch = false;
    };
    /**出现动画*/
    EnemyHint.prototype.appear = function () {
        // 第一步出现
        Laya.Tween.to(this.self, { alpha: 1, scaleX: 1, scaleY: 1 }, 400, null, Laya.Handler.create(this, function () {
        }), 0);
        // 内容旋转
        Laya.Tween.to(this.baseboard, { rotation: 720 }, 400, null, Laya.Handler.create(this, function () {
            this.baseboard.rotation = 0;
            this.seconds.value = '10' + 's';
            this.numSwitch = true;
        }), 0);
    };
    /**消失动画*/
    EnemyHint.prototype.vanish = function () {
        // 第一步出现
        Laya.Tween.to(this.self, { x: -500 }, 400, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }), 0);
        // 内容旋转
        Laya.Tween.to(this.baseboard, { rotation: -720 }, 400, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.baseboard.rotation = 0;
            this.seconds.value = '10' + 's';
            this.self.removeSelf();
        }), 0);
    };
    EnemyHint.prototype.onUpdate = function () {
        var time = Date.now();
        if (this.numSwitch) {
            if (time - this.numTime > this.numInterval) {
                this.numTime = time;
                var value = void 0;
                if (this.seconds.value.length === 3) {
                    value = this.seconds.value.substring(0, 2);
                }
                else {
                    value = this.seconds.value.substring(0, 1);
                }
                this.seconds.value = (Number(value) - 1).toString() + 's';
                if ((Number(value) - 1) < 0) {
                    this.seconds.value = '0' + 's';
                    this.selfScene['MainSceneControl'].enemySwitch_01 = true;
                    this.selfScene['MainSceneControl'].enemySwitch_02 = true;
                    this.numSwitch = false;
                    this.vanish();
                }
            }
        }
    };
    EnemyHint.prototype.onDisable = function () {
        Laya.Pool.recover(this.self.name, this.self);
        Laya.Tween.clearAll(this);
    };
    return EnemyHint;
}(Laya.Script));
exports.default = EnemyHint;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("./Tool");
var Explode = /** @class */ (function (_super) {
    __extends(Explode, _super);
    function Explode() {
        return _super.call(this) || this;
    }
    Explode.prototype.onEnable = function () {
        this.timer = 0;
        this.accelerated = 0.1;
        this.self = this.owner;
        this.img = this.self.getChildByName('img');
        this.self['Explode'] = this;
        this.self.pivotX = this.self.width / 2;
        this.self.pivotY = this.self.height / 2;
    };
    /**初始化参数*/
    Explode.prototype.initProperty = function (type) {
        this.effectsType = type;
        switch (type) {
            case 'starShining':
                this.starShiningProperty();
                break;
            case 'disappear':
                this.disappearProperty();
                break;
            case 'appear':
                this.appearProperty();
                break;
            case 'fireworks':
                this.fireworksProperty();
                break;
            case 'smokeEffects':
                this.smokeProperty();
                break;
            case 'fighting':
                this.fightingProperty();
                break;
            case 'range':
                this.rangeProperty();
                break;
            case 'redCandy___':
                this.redCandyProperty();
                break;
            case 'greenCandy_':
                this.greenCandyProperty();
                break;
            case 'blueCandy__':
                this.blueCandyProperty();
                break;
            case 'yellowCandy':
                this.yellowCandyProperty();
                break;
            default:
                break;
        }
        this.img.pivotX = this.img.width / 2;
        this.img.pivotY = this.img.height / 2;
    };
    /**敌人和糖果通用*/
    Explode.prototype.commonEnmeyAndCandy = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 5) + 10;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = Math.floor(Math.random() * 4) + 6;
        this.self.scaleX = this.scale / 10;
        this.self.scaleY = this.scale / 10;
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = (Math.floor(Math.random() * 10) + 5) / 10;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -20 : 20;
    };
    /**近战敌人爆炸属性*/
    Explode.prototype.fightingProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/白色单元.png';
    };
    /**远程敌人爆炸属性*/
    Explode.prototype.rangeProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/黑色单元.png';
    };
    /**红色糖果*/
    Explode.prototype.redCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/红色单元.png';
    };
    /**黄色糖果*/
    Explode.prototype.yellowCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/黄色单元.png';
    };
    /**蓝色糖果*/
    Explode.prototype.blueCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/蓝色单元.png';
    };
    /**蓝色糖果*/
    Explode.prototype.greenCandyProperty = function () {
        this.commonEnmeyAndCandy();
        this.img.skin = 'candy/特效/绿色单元.png';
    };
    /**普通爆炸移动规则
    * 爆炸
    * 减速
    * 停留在地上
    * 消失
    * 爆炸都在这里，包括敌人和糖果
   */
    Explode.prototype.commonExplosion = function () {
        this.accelerated += 0.2;
        if (this.timer > 0 && this.timer <= 5) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer > 5 && this.timer < 10) {
            this.self.alpha -= 0.02;
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer >= 10) {
            this.vinshTime -= 0.1;
            if (this.vinshTime < 0) {
                this.self.removeSelf();
            }
        }
    };
    /**烟花爆炸属性*/
    Explode.prototype.fireworksProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 15) + 2;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = Math.floor(Math.random() * 8) + 4;
        this.self.scaleX = this.scale / 10;
        this.self.scaleY = this.scale / 10;
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = 1;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -10 : 10;
        // 图片
        var number = Math.floor(Math.random() * 7) + 1;
        switch (number) {
            case 1:
                this.img.skin = 'candy/特效/星星1.png';
                break;
            case 2:
                this.img.skin = 'candy/特效/星星2.png';
                break;
            case 3:
                this.img.skin = 'candy/特效/星星3.png';
                break;
            case 4:
                this.img.skin = 'candy/特效/星星4.png';
                break;
            case 5:
                this.img.skin = 'candy/特效/星星5.png';
                break;
            case 6:
                this.img.skin = 'candy/特效/星星6.png';
                break;
            case 7:
                this.img.skin = 'candy/特效/星星7.png';
                break;
            default:
                break;
        }
    };
    /**烟花爆炸移动
    * 爆炸
    * 减速
    * 消失
   */
    Explode.prototype.fireworksExplosion = function () {
        this.img.rotation += this.rotationD;
        this.accelerated += 0.1;
        if (this.timer > 0 && this.timer <= 15) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed + 5);
        }
        else if (this.timer > 15 && this.timer < 18) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed - 5);
        }
        else if (this.timer >= 18) {
            this.self.removeSelf();
        }
    };
    /**烟囱烟雾属性*/
    Explode.prototype.smokeProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 10) + 5;
        this.initialAngle = 90;
        this.scale = Math.floor(Math.random() * 4) + 2;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = 1;
        this.self.alpha = this.startAlpha;
        this.img.skin = 'candy/特效/白色单元.png';
    };
    /**烟囱烟雾特效移动
    * 出现
    * 上移
    * 消失
   */
    Explode.prototype.smokeEffects = function () {
        if (this.timer > 0 && this.timer <= 10) {
            this.self.scaleX += 0.08;
            this.self.scaleY += 0.08;
            this.self.y -= 0.01;
        }
        else if (this.timer > 10 && this.timer < 40) {
            this.self.y -= 2;
        }
        else if (this.timer > 40) {
            this.self.y -= 2;
            this.startAlpha -= 0.025;
            if (this.startAlpha < 0) {
                this.self.removeSelf();
            }
        }
    };
    /**变身消失动画属性*/
    Explode.prototype.disappearProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.random() * 2 + 2;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = 7;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = (Math.floor(Math.random() * 6) + 4) / 10;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -5 : 5;
        // 图片
        this.img.skin = 'candy/特效/白色单元.png';
        this.img.rotation = this.initialAngle - 90;
        var number = Math.floor(Math.random() * 2);
        switch (number) {
            case 0:
                this.img.skin = 'candy/特效/白色单元.png';
                break;
            case 1:
                this.img.skin = 'candy/特效/白色单元_02.png';
                break;
            default:
                break;
        }
    };
    /**变身消失动画移动*/
    Explode.prototype.disappearEffects = function () {
        this.accelerated += 0.01;
        if (this.timer > 0 && this.timer <= 15) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer > 15 && this.timer < 25) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed - 2);
        }
        else if (this.timer >= 25) {
            this.self.alpha -= 0.02;
            if (this.self.alpha <= 0) {
                this.self.removeSelf();
            }
        }
    };
    /**出现动画属性*/
    Explode.prototype.appearProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.random() * 2 + 2;
        this.initialAngle = Math.floor(Math.random() * 360);
        this.scale = 7;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.vinshTime = Math.floor(Math.random() * 5) + 2;
        this.startAlpha = (Math.floor(Math.random() * 6) + 4) / 10;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -5 : 5;
        // 图片
        this.img.skin = 'candy/特效/白色单元.png';
        this.img.rotation = this.initialAngle - 90;
        var number = Math.floor(Math.random() * 2);
        switch (number) {
            case 0:
                this.img.skin = 'candy/特效/白色单元.png';
                break;
            case 1:
                this.img.skin = 'candy/特效/白色单元_02.png';
                break;
            default:
                break;
        }
    };
    /**出现动画移动*/
    Explode.prototype.appearEffects = function () {
        this.accelerated += 0.01;
        if (this.timer > 0 && this.timer <= 20) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed);
        }
        else if (this.timer > 20 && this.timer < 30) {
            this.commonSpeedXYByAngle(this.initialAngle, this.randomSpeed - 2);
        }
        else if (this.timer >= 30) {
            this.self.alpha -= 0.02;
            if (this.self.alpha <= 0) {
                this.self.removeSelf();
            }
        }
    };
    /**星星闪烁动画属性*/
    Explode.prototype.starShiningProperty = function () {
        this.moveSwitch = true;
        this.randomSpeed = Math.floor(Math.random() * 15) + 2;
        this.scale = Math.floor(Math.random() * 8) + 4;
        this.self.scale(this.scale / 10, this.scale / 10);
        this.startAlpha = 0;
        this.self.alpha = this.startAlpha;
        this.rotationD = Math.floor(Math.random() * 2) === 1 ? -5 : 5;
        // 图片
        var number = Math.floor(Math.random() * 7) + 1;
        switch (number) {
            case 1:
                this.img.skin = 'candy/特效/星星1.png';
                break;
            case 2:
                this.img.skin = 'candy/特效/星星2.png';
                break;
            case 3:
                this.img.skin = 'candy/特效/星星3.png';
                break;
            case 4:
                this.img.skin = 'candy/特效/星星4.png';
                break;
            case 5:
                this.img.skin = 'candy/特效/星星5.png';
                break;
            case 6:
                this.img.skin = 'candy/特效/星星6.png';
                break;
            case 7:
                this.img.skin = 'candy/特效/星星7.png';
                break;
            default:
                break;
        }
    };
    /**星星闪烁动画*/
    Explode.prototype.starShiningEffects = function () {
        if (this.timer > 0 && this.timer <= 15) {
            this.self.alpha += 0.1;
            this.self.rotation += this.rotationD;
            this.self.scaleX += 0.01;
            this.self.scaleY += 0.01;
        }
        else if (this.timer > 15 && this.timer < 25) {
            this.self.rotation += this.rotationD;
        }
        else if (this.timer >= 25) {
            this.self.rotation -= this.rotationD;
            this.self.alpha -= 0.015;
            this.self.scaleX -= 0.01;
            this.self.scaleY -= 0.01;
            if (this.self.alpha <= 0) {
                this.self.removeSelf();
            }
        }
    };
    /**移动规则*/
    Explode.prototype.move = function () {
        if (this.effectsType === 'fireworks') {
            this.fireworksExplosion();
        }
        else if (this.effectsType === 'smokeEffects') {
            this.smokeEffects();
        }
        else if (this.effectsType === 'disappear') {
            this.disappearEffects();
        }
        else if (this.effectsType === 'appear') {
            this.appearEffects();
        }
        else if (this.effectsType === 'starShining') {
            this.starShiningEffects();
        }
        else {
            this.commonExplosion();
        }
    };
    /**
   * 通用子弹移动，按单一角度移动
   * @param angle 角度
   *  @param basedSpeed 基础速度
   */
    Explode.prototype.commonSpeedXYByAngle = function (angle, speed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, speed + this.accelerated).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, speed + this.accelerated).y;
    };
    Explode.prototype.onUpdate = function () {
        if (this.moveSwitch) {
            this.timer += 1;
            this.move();
        }
    };
    Explode.prototype.onDisable = function () {
        Laya.Pool.recover('explode', this.self);
    };
    return Explode;
}(Laya.Script));
exports.default = Explode;
},{"./Tool":21}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HintWord = /** @class */ (function (_super) {
    __extends(HintWord, _super);
    function HintWord() {
        return _super.call(this) || this;
    }
    HintWord.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['HintWord'] = this;
        this.selfScene = this.self.scene;
        this.self.alpha = 0; //出现的时候隐身，方便做动画
        this.self.pivotX = this.self.width / 2;
        this.self.rotation = 0;
        this.self.scale(1, 1);
        this.propertyType = this.self.getChildByName('propertyType');
        this.addNumber = this.self.getChildByName('addNumber');
        this.subNumber = this.self.getChildByName('subNumber');
        this.addScore = this.self.getChildByName('addScore');
        // 开始全是空
        this.propertyType.skin = null;
        this.addNumber.value = null;
        this.subNumber.value = null;
        this.addScore.value = null;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
    };
    /**通过传入的参数来，设置属性图片字的格式
     * @param propertyType 属性类型
     * @param numberValue 属性值
     * */
    HintWord.prototype.initProperty = function (propertyType, numberValue) {
        // 位置偏移，因为字符长度不一样
        switch (propertyType) {
            // 属性增加
            case '公鸡速度':
                this.propertyType.skin = 'candy/ui/速度图标.png';
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            case '攻击里':
                this.propertyType.skin = 'candy/ui/攻击力图标.png';
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            case '生命':
                this.propertyType.skin = 'candy/ui/生命图标.png';
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            case '防御力':
                this.propertyType.skin = 'candy/ui/防御图标.png';
                this.addNumber.value = "+" + numberValue;
                this.propertyMove();
                break;
            // 属性减少
            case '减少公鸡速度':
                this.propertyType.skin = 'candy/ui/速度图标.png';
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '减少攻击里':
                this.propertyType.skin = 'candy/ui/攻击力图标.png';
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '减少生命':
                this.propertyType.skin = 'candy/ui/生命图标.png';
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '减少防御力':
                this.propertyType.skin = 'candy/ui/防御图标.png';
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            // 敌我减血
            case '主角掉血':
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            case '敌人掉血':
                this.subNumber.value = "-" + numberValue;
                this.propertyMove();
                break;
            // 增加分数
            case '额外奖励分数':
                this.addScore.value = "+" + numberValue;
                this.rewardScoreMove(numberValue);
                break;
            // 杀怪获得的分数
            case '杀怪分数':
                this.addScore.value = "+" + numberValue;
                this.killEnemy(numberValue);
                break;
            default:
                break;
        }
    };
    /**属性飘字动画时间线*/
    HintWord.prototype.propertyMove = function () {
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { y: this.self.y - 60, alpha: 1 }, 100, null, 0)
            .addLabel('pause', 0).to(this.self, { y: this.self.y - 120 }, 800, null, 0)
            .addLabel('vanish', 0).to(this.self, { y: this.self.y - 150, alpha: 0 }, 100, null, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
        });
    };
    /**增加分数时的动画*/
    HintWord.prototype.rewardScoreMove = function (numberValue) {
        // 把scoreLabel的坐标转换成全局坐标
        this.self.scale(1, 1);
        var scoreLabel_p = this.scoreLabel.parent;
        var scoreLabel_p_p = scoreLabel_p.parent;
        var stageX = this.scoreLabel.x + scoreLabel_p.x + scoreLabel_p_p.x;
        var stageY = this.scoreLabel.y + scoreLabel_p.y + scoreLabel_p_p.y;
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { y: this.self.y - 60, alpha: 1 }, 100, null, 0)
            .addLabel('pause', 0).to(this.self, { y: this.self.y - 120 }, 600, null, 0)
            .addLabel('moveUp', 0).to(this.self, { y: this.self.y - 150, alpha: 1 }, 100, null, 0)
            .addLabel('moveTo', 0).to(this.self, { scaleX: 0.5, scaleY: 0.5, rotation: -360, x: stageX, y: stageY, alpha: 1 }, 600, Laya.Ease.cubicIn, 0)
            .addLabel('vanish', 0).to(this.self, { y: stageY - 100, alpha: 0 }, 300, Laya.Ease.cubicIn, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
            this.selfScene['MainSceneControl'].addScores(numberValue);
        });
    };
    /**杀怪奖励分数*/
    HintWord.prototype.killEnemy = function (numberValue) {
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(this.self, { y: this.self.y - 60, alpha: 1 }, 100, null, 0)
            .addLabel('pause', 0).to(this.self, { y: this.self.y - 120 }, 600, null, 0)
            .addLabel('moveUp', 0).to(this.self, { y: this.self.y - 150, alpha: 0 }, 100, null, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
            this.selfScene['MainSceneControl'].addScores(numberValue);
        });
    };
    HintWord.prototype.onDisable = function () {
        Laya.Pool.recover('hintWord', this.self);
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
    };
    return HintWord;
}(Laya.Script));
exports.default = HintWord;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl = /** @class */ (function (_super) {
    __extends(MainSceneControl, _super);
    function MainSceneControl() {
        return _super.call(this) || this;
    }
    MainSceneControl.prototype.onEnable = function () {
        this.noStarted('startInterface');
        this.createStartInterface('start');
        this.createLaunchAni();
        this.wxPostInit();
        this.adaptive();
    };
    /**自适应*/
    MainSceneControl.prototype.adaptive = function () {
        this.assembly.y = Laya.stage.height / 2 - 150;
        this.role_01.y = Laya.stage.height * 0.71;
        this.role_02.y = Laya.stage.height * 0.71 - 24;
        this.operating.y = Laya.stage.height * 0.85;
        this.owner.scene.height = Laya.stage.height;
    };
    /**第一次场景初始化
      * 第一次和后面正式开始只有两个个却别，
      * 1、是场景时间时间线关闭怪物不出现
      * 2、糖果点击倒计时关闭
     */
    MainSceneControl.prototype.firstStart = function () {
        // 流水线水管动画
        this.assembly['Assembly'].pipeAnimation('flow');
        this.roleAppear();
        this.candyLaunch_01.play('prepare', false);
        this.candyLaunch_02.play('prepare', false);
    };
    /**第二次开始场景初始化
     * 第一次和后面正式开始只有两个个却别，
     * 1、是场景时间时间线关闭怪物不出现
     * 2、糖果点击倒计时关闭
    */
    MainSceneControl.prototype.secondAfterStart = function () {
        this.timerControl = 0;
        this.candyLaunch_01.play('prepare', false);
        this.candyLaunch_02.play('prepare', false);
        this.createEnemyHint();
    };
    /**游戏没有开始的时候设置的属性
     * @param type 这个是重来初始化还是返回主界面的初始化
    */
    MainSceneControl.prototype.noStarted = function (type) {
        this.self = this.owner;
        //脚本赋值
        this.owner['MainSceneControl'] = this;
        // 关闭多点触控
        Laya.MouseManager.multiTouchEnabled = false;
        this.scoreLabel.value = '0';
        this.timeSchedule = this.timer.getChildByName('timeSchedule');
        this.timeSchedule.value = 1;
        this.suspend = false;
        this.gameOver = false;
        this.launcheCount = 0;
        if (type === 'reStart') {
            this.role_01['Role'].skeleton.play('speak', true);
            this.role_02['Role'].skeleton.play('speak', true);
        }
        else if (type === 'startInterface') {
            this.role_01.x = -500;
            this.role_02.x = 1834;
        }
        this.enemyPropertyInit();
    };
    /**敌人的属性初始化
     * 怪物属性依次为血量，攻击力，攻速，移动速度，攻击速度
    */
    MainSceneControl.prototype.enemyPropertyInit = function () {
        this.enemyProperty = {
            blood: 200,
            attackValue: 10,
            attackSpeed: 1500,
            defense: 10,
            moveSpeed: 10,
            creatInterval: 8000
        };
        this.enemyCount = 0;
        this.enemyTime_01 = Date.now();
        this.enemyTime_02 = Date.now();
        this.enemyInterval_01 = this.enemyProperty.creatInterval;
        this.enemyInterval_02 = this.enemyProperty.creatInterval;
        this.enemySwitch_01 = false;
        this.enemySwitch_02 = false;
        this.enemyTagRole = null;
    };
    /**创建开始游戏界面*/
    MainSceneControl.prototype.createStartInterface = function (type) {
        var startInterface = Laya.Pool.getItemByCreateFun('startInterface', this.startInterface.create, this.startInterface);
        this.owner.addChild(startInterface);
        startInterface.pivotX = startInterface.width / 2;
        startInterface.pivotY = startInterface.height / 2;
        startInterface.x = Laya.stage.width / 2;
        startInterface.y = Laya.stage.height / 2;
        startInterface['StartGame'].aniTypeInit(type);
    };
    /**两个发射口的骨骼动画
     * 这两个骨骼动画播放意味着发射出糖果
    */
    MainSceneControl.prototype.createLaunchAni = function () {
        //创建动画模板1
        this.launchTemp_01 = new Laya.Templet();
        this.launchTemp_01.on(Laya.Event.COMPLETE, this, this.parseComplete_01);
        this.launchTemp_01.on(Laya.Event.ERROR, this, this.onError);
        this.launchTemp_01.loadAni("candy/糖果机器/candyLaunch.sk");
        //创建动画模板2
        this.launchTemp_02 = new Laya.Templet();
        this.launchTemp_02.on(Laya.Event.COMPLETE, this, this.parseComplete_02);
        this.launchTemp_02.on(Laya.Event.ERROR, this, this.onError);
        this.launchTemp_02.loadAni("candy/糖果机器/candyLaunch.sk");
    };
    MainSceneControl.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    MainSceneControl.prototype.parseComplete_01 = function () {
        // 静止
        this.candyLaunch_01 = this.assembly.getChildByName('candyLaunch_01'); //模板0
        this.candyLaunch_01.play('static', false);
        this.candyLaunch_01.on(Laya.Event.LABEL, this, this.candyLaunchListen_01);
    };
    MainSceneControl.prototype.parseComplete_02 = function () {
        // 静止
        this.candyLaunch_02 = this.assembly.getChildByName('candyLaunch_02'); //模板0
        this.candyLaunch_02.play('static', false);
        this.candyLaunch_02.on(Laya.Event.LABEL, this, this.candyLaunchListen_02);
    };
    /**发射口监听监听1
     * 分开监听，因为有些操作只会执行一次
    */
    MainSceneControl.prototype.candyLaunchListen_01 = function (e) {
        if (e.name === 'launch') {
        }
        else if (e.name === 'getReady') {
            this.candyMoveToDisplay();
            this.timeSchedule.value = 1;
        }
    };
    /**发射口监听监听1*/
    MainSceneControl.prototype.candyLaunchListen_02 = function (e) {
        if (e.name === 'launch') {
        }
        else if (e.name === 'getReady') {
        }
    };
    /**生产8个糖果移动到操作台的动画
     * 4次，每次2个移动
     * 倒过来遍历
    */
    MainSceneControl.prototype.candyMoveToDisplay = function () {
        //行数
        var row = 4;
        //每组循环的延时数，逐步增加
        var delayed = 10;
        //糖果高度
        var candyHeiht = 100;
        //间距
        var spacing = -1;
        //两个初始X位置
        var startX_01 = Laya.stage.width / 2 + 60;
        var startX_02 = Laya.stage.width / 2 - 50;
        //陈列台父节点
        var displaysPar = this.displays.parent;
        // 流水线内部转换为世界坐标Y所需要的差值
        var worldDevY = displaysPar.y - displaysPar.pivotY;
        // 第一个糖果的是陈列台位置，后面糖果往后排
        var startY = this.displays.y + worldDevY + row * (candyHeiht + spacing) - 35;
        var _loop_1 = function (i) {
            Laya.timer.frameOnce(delayed, this_1, function () {
                for (var j = 0; j < 2; j++) {
                    var candy = this.createCandy();
                    candy['Candy'].group = i;
                    candy.zOrder = row - i; //层级
                    // 出生Y轴位置是发射口相对世界坐标
                    var BirthY = this.candyLaunch_01.y + worldDevY - 20;
                    if (j === 0) {
                        candy.pos(this.candyLaunch_02.x, BirthY);
                        candy.scaleX = 0;
                        candy.scaleY = 0;
                        this.candyLaunch_01.play('launchLeft', false);
                        // 移动到陈列台位置
                        var targetY = startY - i * (candyHeiht + spacing);
                        this.candyFlipTheAni(i, j, candy, startX_01, targetY);
                    }
                    else {
                        // 出生位置
                        candy.pos(this.candyLaunch_01.x, BirthY);
                        candy.scaleX = 0.5;
                        candy.scaleY = 0.5;
                        this.candyLaunch_02.play('launchRight', false);
                        // 陈列台位置
                        // 移动到陈列台位置
                        var targetY = startY - i * (candyHeiht + spacing);
                        this.candyFlipTheAni(i, j, candy, startX_02, targetY);
                    }
                }
            });
            delayed += 15;
        };
        var this_1 = this;
        for (var i = 0; i < row; i++) {
            _loop_1(i);
        }
    };
    /**糖果发射动画时间线
     * @param i 当前组
     * @param j 当前列
     * @param candy 当前糖果
     * @param targetX 目标x位置
     * @param targetY 目标y位置
    */
    MainSceneControl.prototype.candyFlipTheAni = function (i, j, candy, targetX, targetY) {
        // 基础时间参数，动画的时间会随着位置边近而缩小
        var timePar = 500 - candy['Candy'].group * 100;
        // 糖果本身
        // 第一步放大
        Laya.Tween.to(candy, { scaleX: 0.8, scaleY: 0.8, y: candy.y - 30 }, timePar / 2, null, Laya.Handler.create(this, function () {
            // 第二步飞天,位置是目标位置的一半
            var HalfX;
            var distancePer = 3; //在这个距离等分处飞到最高处
            if (candy.x > Laya.stage.width / 2) {
                HalfX = candy.x - (candy.x - targetX) / distancePer;
            }
            else {
                HalfX = candy.x + (targetX - candy.x) / distancePer;
            }
            var HalfY = candy.y + (targetY - candy.y) / distancePer;
            Laya.Tween.to(candy, { x: HalfX, y: HalfY, scaleX: 1.3, scaleY: 1.3 }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
                // 第三步降落
                Laya.Tween.to(candy, { x: targetX, y: targetY, scaleX: 1, scaleY: 1 }, timePar * 1.3, null, Laya.Handler.create(this, function () {
                    // 落下特效并且播放禁止动画,并且显示点击次数
                    this.explodeAni(this.owner, candy.x, candy.y, 'disappear', 8, 1000);
                    candy['Candy'].playSkeletonAni(1, 'bonbonniere');
                    candy['Candy'].clicksLabel.alpha = 1;
                    // 最后一组发射完毕后
                    if (i === 3 && j === 1) {
                        this.launcheCount++;
                        console.log('弟' + this.launcheCount + '次发射！');
                        // 第一次需要引导玩家操作，通过说话完成，并且第一轮不计算时间
                        if (this.launcheCount === 1) {
                            this.roleSpeakBoxs('role_01', 'firstClick');
                            this.roleSpeakBoxs('role_02', 'firstClick');
                            this.operating['OperationControl'].firstClick = true;
                        }
                        else if (this.launcheCount === 2) {
                            // 第二轮的时候开启倒计时
                            this.operating['OperationControl'].firstClick = false;
                        }
                        this.operating['OperationControl'].operateSwitch = true;
                        this.operating['OperationControl'].initHint();
                    }
                }), 0);
            }), 0);
        }), 10);
        // 糖果的影子处理
        var shadow = candy.getChildByName('shadow');
        // 第一步放大
        Laya.Tween.to(shadow, {}, timePar / 2, null, Laya.Handler.create(this, function () {
            // 第二步和糖果拉开距离
            Laya.Tween.to(shadow, { x: -20 + 52, y: 100 + 60, scaleX: 0.5, scaleY: 0.5, }, timePar * 3 / 4, null, Laya.Handler.create(this, function () {
                // 第三步降落
                Laya.Tween.to(shadow, { x: 0 + 52, y: 0 + 60, scaleX: 1, scaleY: 1 }, timePar * 1.3, null, Laya.Handler.create(this, function () {
                }), 0);
            }), 0);
        }), 10);
    };
    /**产生糖果*/
    MainSceneControl.prototype.createCandy = function () {
        // 通过对象池创建
        var candy = Laya.Pool.getItemByCreateFun('candy', this.candy.create, this.candy);
        // 随机创建一种颜色糖果
        // 糖果的名称结构是11位字符串加上索引值，方便查找，并且这样使他们的名称唯一
        var randomNum = Math.floor(Math.random() * 4);
        switch (randomNum) {
            case 0:
                candy.name = 'yellowCandy' + this.candyCount;
                break;
            case 1:
                candy.name = 'redCandy___' + this.candyCount;
                break;
            case 2:
                candy.name = 'blueCandy__' + this.candyCount;
                break;
            case 3:
                candy.name = 'greenCandy_' + this.candyCount;
                break;
            default:
                break;
        }
        candy.pos(0, 0);
        candy.pivotX = candy.width / 2;
        candy.pivotY = candy.height / 2;
        this.candyParent.addChild(candy);
        candy.rotation = 0;
        this.candyCount++;
        return candy;
    };
    /**主角出现动画*/
    MainSceneControl.prototype.roleAppear = function () {
        Laya.Tween.to(this.role_01, { x: 139 }, 1000, null, Laya.Handler.create(this, function () {
            this.role_01['Role'].skeleton.play('speak', true);
        }, []), 0);
        Laya.Tween.to(this.role_02, { x: 669 }, 1000, null, Laya.Handler.create(this, function () {
            this.role_02['Role'].skeleton.play('speak', true);
        }, []), 0);
    };
    /**主角消失动画*/
    MainSceneControl.prototype.roleVanish = function () {
        Laya.Tween.to(this.role_01, { x: -500 }, 1000, null, Laya.Handler.create(this, function () {
            this.role_01['Role'].skeleton.play('frontMove', true);
        }, []), 0);
        Laya.Tween.to(this.role_02, { x: 1834 }, 1000, null, Laya.Handler.create(this, function () {
            this.role_02['Role'].skeleton.play('frontMove', true);
        }, []), 0);
    };
    /**两个主角对话框的初始化*/
    MainSceneControl.prototype.roleSpeakBoxs = function (who, describe) {
        var speakBox = Laya.Pool.getItemByCreateFun('speakBox', this.speakBox.create, this.speakBox);
        speakBox.name = 'speakBox';
        if (who === 'role_01') {
            this.role_01.addChild(speakBox);
        }
        else if (who === 'role_02') {
            this.role_02.addChild(speakBox);
        }
        speakBox['SpeakBox'].speakingRules(who, describe);
        speakBox.pos(70, -110);
    };
    /**角色死亡复活状况*/
    MainSceneControl.prototype.roleDeathState = function () {
    };
    /**敌人出现倒计时*/
    MainSceneControl.prototype.createEnemyHint = function () {
        var enemyHint = Laya.Pool.getItemByCreateFun('enemyHint', this.enemyHint.create, this.enemyHint);
        this.owner.addChild(enemyHint);
        enemyHint.zOrder = 1000;
    };
    /**出现敌人
     * 创建方式决定了敌人出生的位置
     * @param mode 创建模式是左边还是右边
     * @param tagRole 目标是哪个主角
    */
    MainSceneControl.prototype.createEnemy = function (mode, tagRole, type) {
        this.enemyCount++;
        if (tagRole !== null) {
            var enemy = Laya.Pool.getItemByCreateFun('enemy', this.enemy.create, this.enemy);
            this.enemyParent.addChild(enemy);
            enemy.name = 'enemy' + this.enemyCount; //名称唯一
            enemy.pivotX = enemy.width / 2;
            enemy.pivotY = enemy.height / 2;
            //出生位置判定,和攻击目标选择
            var y = Laya.stage.height * 0.23;
            if (mode === 'left') {
                enemy.pos(-50, y);
            }
            else if (mode === 'right') {
                enemy.pos(800, y);
            }
            else if (mode === 'target') {
                if (tagRole.x < Laya.stage.width / 2 && tagRole.x > 0) {
                    enemy.pos(-50, y);
                }
                else if (tagRole.x >= Laya.stage.width / 2 && tagRole.x < Laya.stage.width) {
                    enemy.pos(800, y);
                }
            }
            enemy['Enemy'].slefTagRole = tagRole;
            enemy['Enemy'].enemyType = type;
            enemy['Enemy'].randomAttackPoint();
            enemy['Enemy'].createBoneAni();
            // 默认属性不可见
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!this.suspend) {
                propertyShow.alpha = 0;
            }
            else {
                propertyShow.alpha = 1;
            }
            return enemy;
        }
    };
    /** 敌人的层级进行排序
     * 规则是判断y轴，y坐标越低的越靠前
     */
    MainSceneControl.prototype.enemyOrder = function () {
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            this.enemyParent._children[i].zOrder = Math.round(this.enemyParent._children[i].y);
        }
    };
    /**属性刷新显示规则,血量显示一定是整数，并且是10的倍数
    * 根据时间线的增长，怪物的属性不断增强
    * 每隔600帧增长一次，大约是10秒钟
    */
    MainSceneControl.prototype.enemyPropertyUpdate = function () {
        if (this.timerControl % 600 === 0 && this.enemySwitch_01) {
            // 血量增长
            this.enemyProperty.blood += 25;
            // 攻击力增长
            this.enemyProperty.attackValue += 1;
            // 攻击速度增长，最短时间间隔为100
            this.enemyProperty.attackSpeed += 5;
            if (this.enemyProperty.attackSpeed < 100) {
                this.enemyProperty.attackSpeed = 100;
            }
            // 防御力增长
            this.enemyProperty.defense += 1;
            // 出怪时间增长,最短时间间隔为500
            this.enemyProperty.creatInterval += 25;
            if (this.enemyProperty.creatInterval < 500) {
                this.enemyProperty.creatInterval = 500;
            }
        }
    };
    /**爆炸动画
     * @param parent 父节点
     * @param x 位置
     * @param y
     * @param type 类型
     * @param shul 数量
     * @param zOrder 层级
    */
    MainSceneControl.prototype.explodeAni = function (parent, x, y, type, number, zOrder) {
        for (var i = 0; i < number; i++) {
            var explode = Laya.Pool.getItemByCreateFun('explode', this.explode.create, this.explode);
            parent.addChild(explode);
            explode.zOrder = zOrder;
            explode.pos(x, y);
            // 类型
            explode['Explode'].type = type;
            explode['Explode'].initProperty(type);
        }
    };
    /**复活*/
    MainSceneControl.prototype.createResurgence = function () {
        this.assembly['Assembly'].pipeAnimation('static');
        var resurgence = Laya.Pool.getItemByCreateFun('resurgence', this.resurgence.create, this.resurgence);
        this.self.addChild(resurgence);
        resurgence.zOrder = 1000;
        resurgence.pos(0, 0);
    };
    /**属性增减动画和分数增加动画
     * @param target 父节点
     * @param x 位置
     * @param y 类型
     * @param proPertyType 类型
     * @param numberValue 增减动画值
    */
    MainSceneControl.prototype.createHintWord = function (target, x, y, proPertyType, numberValue, scale) {
        var hintWord = Laya.Pool.getItemByCreateFun('hintWord', this.hintWord.create, this.hintWord);
        target.addChild(hintWord);
        hintWord.pos(x, y);
        hintWord.scale(scale, scale);
        hintWord.zOrder = 300;
        hintWord['HintWord'].initProperty(proPertyType, numberValue);
    };
    /**重来，重置各种属性
     * 所有糖果和怪物都炸掉
     * 分数清零
     * 然后主角复活
    */
    MainSceneControl.prototype.restart = function () {
        //需要对比他们的数量，复活重来需要在动画的最后一个
        var len1 = this.enemyParent._children.length;
        var len2 = this.candyParent._children.length;
        // 消除敌人
        // 先隐藏在一并删除，否则可能会有length变化造成错误
        var enemyDelayed = 0;
        var _loop_2 = function (i) {
            Laya.timer.frameOnce(enemyDelayed, this_2, function () {
                if (!this.enemyParent._children[i]) {
                    return;
                }
                this.enemyParent._children[i].alpha = 0;
                var x = this.enemyParent._children[i].x;
                var y = this.enemyParent._children[i].y;
                if (this.enemyParent._children[i]['Enemy'] === 'infighting') {
                    this.explodeAni(this.owner, x, y, 'infighting', 15, 100);
                }
                else {
                    this.explodeAni(this.owner, x, y, 'range', 15, 100);
                }
                if (i === len1 - 1) {
                    //对比数量，数量多的后播放完，然后执行主角复活
                    // 这个等于也是如此
                    if (len1 >= len2) {
                        this.roleResurgenceAni();
                    }
                    this.enemyParent.removeChildren(0, len1 - 1);
                }
            });
            enemyDelayed += 1;
        };
        var this_2 = this;
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            _loop_2(i);
        }
        // 在消除糖果
        var candyDelayed = 0;
        var _loop_3 = function (k) {
            Laya.timer.frameOnce(candyDelayed, this_3, function () {
                if (!this.candyParent._children[k]) {
                    return;
                }
                this.candyParent._children[k].alpha = 0;
                var name = this.candyParent._children[k].name.substring(0, 11);
                var x = this.candyParent._children[k].x;
                var y = this.candyParent._children[k].y;
                this.explodeAni(this.owner, x, y, 'disappear', 8, 1000);
                if (k === len2 - 1) {
                    //对比数量，数量多的后播放完，然后执行主角复活
                    if (len1 < len2) {
                        this.roleResurgenceAni();
                    }
                    this.candyParent.removeChildren(0, len2 - 1);
                }
            });
            candyDelayed += 20;
        };
        var this_3 = this;
        for (var k = 0; k < len2; k++) {
            _loop_3(k);
        }
    };
    /**重新开始主角所初始化的属性*/
    MainSceneControl.prototype.roleResurgenceAni = function () {
        var skeleton1 = this.role_01.getChildByName('skeleton');
        Laya.Tween.to(this.role_01, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
            this.restartProperties();
        }, []), 0);
        var skeleton2 = this.role_02.getChildByName('skeleton');
        Laya.Tween.to(this.role_02, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**重新开始所需改变的属性
     * 重新开始不会经过新手引导  this.launcheCount从2开始;
    */
    MainSceneControl.prototype.restartProperties = function () {
        this.noStarted('reStart');
        this.secondAfterStart();
        this.role_01.x = 139;
        this.role_02.x = 669;
        this.launcheCount = 2;
        //主角复活
        this.role_01['Role'].role_Warning = false;
        this.role_01['Role'].roleDeath = false;
        this.role_01['Role'].initProperty();
        this.role_02['Role'].role_Warning = false;
        this.role_02['Role'].roleDeath = false;
        this.role_02['Role'].initProperty();
        this.operating['OperationControl'].initProperty();
    };
    /**返回主界面清理场景*/
    MainSceneControl.prototype.returnStartSet = function () {
        this.noStarted('startInterface');
        // 清空怪物和糖果
        var len1 = this.enemyParent._children.length;
        this.enemyParent.removeChildren(0, len1 - 1);
        var len2 = this.candyParent._children.length;
        this.candyParent.removeChildren(0, len2 - 1);
        //主角复活
        this.role_01.alpha = 1;
        this.role_01['Role'].role_Warning = false;
        this.role_01['Role'].roleDeath = false;
        this.role_01['Role'].initProperty();
        this.role_02.alpha = 1;
        this.role_02['Role'].role_Warning = false;
        this.role_02['Role'].roleDeath = false;
        this.role_02['Role'].initProperty();
        // 重置怪物属性
        this.enemyPropertyInit();
        // 操作台重置
        this.operating['OperationControl'].initProperty();
    };
    /** 微信排行榜初始化*/
    MainSceneControl.prototype.wxPostInit = function () {
        if (Laya.Browser.onMiniGame) {
            Laya.loader.load(["res/atlas/rank.atlas"], Laya.Handler.create(null, function () {
                //加载完成
                //使用接口将图集透传到子域
                Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/rank.atlas");
                var wx = Laya.Browser.window.wx;
                var openDataContext = wx.getOpenDataContext();
                openDataContext.postMessage({ action: 'init' });
            }));
        }
    };
    /** 更新微信排行榜的数据*/
    MainSceneControl.prototype.wxPostData = function () {
        if (Laya.Browser.onMiniGame) {
            var args = {
                type: 'scores', data: { scores: this.scoreLabel.value }
            };
            var wx_1 = Laya.Browser.window.wx;
            var openDataContext = wx_1.getOpenDataContext();
            openDataContext.postMessage(args);
            console.log('上传了');
        }
        else {
            console.log('没有上传');
        }
    };
    /**分享*/
    MainSceneControl.prototype.wxShare = function () {
        if (Laya.Browser.onMiniGame) {
            var wx_2 = Laya.Browser.window.wx;
            //下次测试
            wx_2.shareAppMessage({
                title: '怪星大作战'
            });
            console.log("主动进行了转发");
        }
        else {
            console.log("仅支持微信客户端");
        }
    };
    /**得分*/
    MainSceneControl.prototype.addScores = function (number) {
        this.scoreLabel.value = (Number(this.scoreLabel.value) + number).toString();
    };
    /**得分的动画*/
    /**属性刷新显示规则*/
    MainSceneControl.prototype.onUpdate = function () {
        // 游戏结束
        if (this.gameOver) {
            return;
        }
        // 主角全部死亡则停止移动,并且弹出复活
        if (this.role_01['Role'].roleDeath && this.role_02['Role'].roleDeath) {
            this.gameOver = true;
            this.createResurgence();
            return;
        }
        // 时刻对敌人的层级进行排序
        this.enemyOrder();
        // 记录时间
        this.timerControl += 1;
        // 根据时间线，刷新怪物属性
        this.enemyPropertyUpdate();
        // 角色死亡复活状况
        this.roleDeathState();
        // 通过时间间隔产生敌人，左右产生的敌人不一样
        // 左
        if (this.enemySwitch_01) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_01 > this.enemyProperty.creatInterval) {
                this.enemyTime_01 = nowTime;
                this.enemyTagRole = this.role_01;
                this.createEnemy('left', this.role_01, 'fighting');
                this.createEnemy('left', this.role_01, 'range');
                this.enemyTagRole = null;
            }
        }
        // 右
        if (this.enemySwitch_02) {
            var nowTime = Date.now();
            if (nowTime - this.enemyTime_02 > this.enemyProperty.creatInterval) {
                this.enemyTime_02 = nowTime;
                this.enemyTagRole = this.role_02;
                this.createEnemy('right', this.role_02, 'fighting');
                this.createEnemy('right', this.role_02, 'range');
                this.enemyTagRole = null;
            }
        }
    };
    MainSceneControl.prototype.onDisable = function () {
    };
    return MainSceneControl;
}(Laya.Script));
exports.default = MainSceneControl;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OperationButton = /** @class */ (function (_super) {
    __extends(OperationButton, _super);
    function OperationButton() {
        return _super.call(this) || this;
    }
    OperationButton.prototype.onEnable = function () {
        this.initProperty();
        this.buttonClink();
    };
    /**初始化一些属性*/
    OperationButton.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.candyParent = this.selfScene['MainSceneControl'].candyParent;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.timer = this.selfScene['MainSceneControl'].timer;
        this.rewardWords = this.selfScene['MainSceneControl'].rewardWords;
        this.clickHintSign.alpha = 0;
        this.timeSchedule = this.timer.getChildByName('timeSchedule');
        this.self['OperationControl'] = this;
        this.clicksGroup = 0;
        this.rightCount = 0;
        this.erroCount = 0;
    };
    /**操作按钮的点击事件*/
    OperationButton.prototype.buttonClink = function () {
        for (var i = 0; i < this.btnGroup._children.length; i++) {
            this.btnGroup._children[i].on(Laya.Event.MOUSE_DOWN, this, this.down);
            this.btnGroup._children[i].on(Laya.Event.MOUSE_MOVE, this, this.move);
            this.btnGroup._children[i].on(Laya.Event.MOUSE_UP, this, this.up);
            this.btnGroup._children[i].on(Laya.Event.MOUSE_OUT, this, this.out);
        }
    };
    /**判断按下的按钮和准备位置的糖果是否匹配;
     * 如果匹配，那么看下糖果上面写的几次点击次数，需要连续点击到这个次数才可以吃糖果
     * 如果次数没有达到，却点了另一种按钮，那么前面的次数会重置，并且出现一个怪物
     * 如果不匹配，说明点错了，糖果会跳到外面变成一个怪物,则出现一个怪物
     */
    OperationButton.prototype.down = function (event) {
        if (!this.operateSwitch) {
            return;
        }
        // 通过点击的按钮匹配对应的糖果类型
        var btn_name = event.currentTarget.name;
        this.clickJudge(btn_name);
        event.currentTarget.scale(0.9, 0.9);
    };
    /**点击判断*/
    OperationButton.prototype.clickJudge = function (btn_name) {
        // 按钮颜色需要配对的糖果颜色名字
        var pairName;
        switch (btn_name) {
            case 'redButton':
                pairName = 'redCandy___';
                break;
            case 'yellowButton':
                pairName = 'yellowCandy';
                break;
            case 'greenButton':
                pairName = 'greenCandy_';
                break;
            case 'blueButton':
                pairName = 'blueCandy__';
                break;
            default: break;
        }
        // 记录有几个名字个相同
        var nameCount = 0;
        // 记录点击正确次数
        var rightCount = 0;
        var mainSceneControl = this.selfScene['MainSceneControl'];
        // 找出当前需要点击的组和配对的名字
        for (var i = 0; i < this.candyParent._children.length; i++) {
            var candy = this.candyParent._children[i];
            var group = candy['Candy'].group;
            var name_1 = candy.name.substring(0, 11);
            // 糖果的组和配对的名字都相同的时候,那么clickLebal-1；
            var clicksLabel = candy.getChildByName('clicksLabel');
            if (group === this.clicksGroup && name_1 === pairName) {
                nameCount++;
                // 第一次点击正确了break
                // 第一次点击不正确，可能会进入第二次，第二次点击正确了也会break
                if (nameCount === 1 || nameCount === 2) {
                    if (Number(clicksLabel.value) > 0) {
                        rightCount++;
                        clicksLabel.value = (Number(clicksLabel.value) - 1).toString();
                        this.clicksRightAni(candy);
                        if (Number(clicksLabel.value) === 0) {
                            mainSceneControl.explodeAni(this.selfScene, candy.x, candy.y, 'disappear', 8, 100);
                            candy['Candy'].playSkeletonAni(1, 'static');
                            clicksLabel.value = ' ';
                            this.rightCount++;
                            this.spealGuidance('right');
                        }
                        break;
                    }
                }
            }
        }
        // 两个糖果都不相同的时候，和点的不正确的时候直接结算
        if (nameCount === 0 || rightCount === 0) {
            this.erroCount += 2;
            for (var i = 0; i < this.candyParent._children.length; i++) {
                var candy = this.candyParent._children[i];
                var group = candy['Candy'].group;
                if (group === this.clicksGroup) {
                    // 生成1个爆炸糖果
                    mainSceneControl.explodeAni(this.selfScene, candy.x, candy.y, 'disappear', 8, 1000);
                    candy['Candy'].group = 'error';
                    candy['Candy'].playSkeletonAni(1, 'explode');
                    var clicksLabel = candy.getChildByName('clicksLabel');
                    clicksLabel.value = ' ';
                }
            }
            this.groupHint();
            this.spealGuidance('error');
        }
        // 两个都点成了零，说明这组点对了，到下一组
        if (this.rightCount === 2) {
            this.groupHint();
        }
        // 都点完了最终结算
        if (this.clicksGroup === 4) {
            this.settlement('finished');
        }
    };
    /**点击正确时，糖果的动画*/
    OperationButton.prototype.clicksRightAni = function (candy) {
        // 第二步降落缩小
        Laya.Tween.to(candy, { scaleX: 1.1, scaleY: 1.1 }, 50, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(candy, { scaleX: 1, scaleY: 1 }, 50, null, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
    };
    /**判断是否是第一次，通过主角对话框给与一些引导*/
    OperationButton.prototype.spealGuidance = function (judge) {
        // 如果是第一次，结算的时候删掉主角对话框，因为第一轮是新手引导
        var MainSceneControl = this.selfScene['MainSceneControl'];
        var launcheCount = MainSceneControl.launcheCount;
        if (launcheCount === 1) {
            var role_01 = MainSceneControl.role_01;
            var speakBox_01 = role_01.getChildByName('speakBox');
            var role_02 = MainSceneControl.role_02;
            var speakBox_02 = role_02.getChildByName('speakBox');
            if (judge === 'error') {
                speakBox_01['SpeakBox'].speakingRules('role_01', 'clickError');
                speakBox_02['SpeakBox'].speakingRules('role_02', 'clickError');
            }
            else if (judge === 'right') {
                speakBox_01['SpeakBox'].speakingRules('role_01', 'clickRight');
                speakBox_02['SpeakBox'].speakingRules('role_02', 'clickRight');
            }
        }
    };
    /**组提示*/
    OperationButton.prototype.groupHint = function () {
        this.rightCount = 0;
        this.clicksGroup++;
        //两边箭头提示
        var maskYArr = [749, 647.5, 546, 449];
        this.clickHintSign.alpha = 1;
        this.clickHintSign.y = maskYArr[this.clicksGroup];
    };
    /**初始化提示，一组糖果出来的时候进行*/
    OperationButton.prototype.initHint = function () {
        this.rightCount = 0;
        this.clicksGroup = 0;
        //两边箭头提示
        var maskYArr = [749, 651.5, 550, 449];
        this.clickHintSign.alpha = 1;
        this.clickHintSign.y = maskYArr[this.clicksGroup];
        this.erroCount = 0;
    };
    /**结算分为两种
     * 一种是点击完成了，分别对应变成爆炸或者是吃糖果进行动画播放
     * 一种是时间到了，先把没有点击完成的糖果变成爆炸，然后再进行动画播放
     * 这些动画都是延时播放的，并且从最近的开始
     * @param type 是两种结算类型
    */
    OperationButton.prototype.settlement = function (type) {
        this.clickHintSign.alpha = 0;
        this.operateSwitch = false;
        if (type === 'finished') {
            console.log('完成的结算！');
            if (this.erroCount === 0) {
                this.additionAward();
            }
            this.settlementAni();
        }
        else if (type === 'unfinished') {
            // 当前组的两个变成爆炸糖果，即便有一个点击成功了，也算失败
            // 以及后面的没有点击完成的两种的情况
            var delayed = 0; //延迟动画的时间递增
            var _loop_1 = function (i) {
                var candy = this_1.candyParent._children[i];
                var group = candy['Candy'].group;
                var clicksLabel = candy.getChildByName('clicksLabel');
                if (group === this_1.clicksGroup || (group !== 'error' && clicksLabel.value !== ' ')) {
                    delayed += 10;
                    // 延时进行
                    Laya.timer.frameOnce(delayed, this_1, function () {
                        this.selfScene['MainSceneControl'].explodeAni(this.selfScene, candy.x, candy.y, 'disappear', 8, 1000);
                        candy['Candy'].group = 'error';
                        clicksLabel.value = ' ';
                        candy['Candy'].playSkeletonAni(1, 'explode');
                        // 最后一个糖果进行结算，因为如果到了最后一组，整个组都会进入这里，group === this.clicksGroup，所有0是必然可以循环到的
                        if (i === 0) {
                            this.settlementAni();
                        }
                    });
                }
            };
            var this_1 = this;
            for (var i = this.candyParent._children.length - 1; i >= 0; i--) {
                _loop_1(i);
            }
        }
    };
    /**结算动画
     * 延时进行结算动画
    */
    OperationButton.prototype.settlementAni = function () {
        // 如果是第一次，结算的时候删掉主角对话框，因为第一轮是新手引导
        var launcheCount = this.selfScene['MainSceneControl'].launcheCount;
        if (launcheCount === 1) {
            var role_01 = this.selfScene['MainSceneControl'].role_01;
            var speakBox_01 = role_01.getChildByName('speakBox');
            speakBox_01.removeSelf();
            var role_02 = this.selfScene['MainSceneControl'].role_02;
            var speakBox_02 = role_02.getChildByName('speakBox');
            speakBox_02.removeSelf();
        }
        var delayed = 10;
        var _loop_2 = function (i) {
            delayed += 15;
            Laya.timer.frameOnce(delayed, this_2, function () {
                var candy = this.candyParent._children[i];
                var group = candy['Candy'].group;
                // 只有错误和正确之分
                if (group === 'error') {
                    this.explodeCandyFlyToRole(candy);
                }
                else {
                    candy['Candy'].candyFlyToRole();
                }
                // 当最后一个执行的时候就播放下一组
                if (i === 0) {
                    // 如果是第二次才正式开始初始化
                    if (launcheCount === 1) {
                        this.selfScene['MainSceneControl'].secondAfterStart();
                    }
                    else {
                        this.selfScene['MainSceneControl'].candyLaunch_01.play('prepare', false);
                        this.selfScene['MainSceneControl'].candyLaunch_02.play('prepare', false);
                    }
                }
            });
        };
        var this_2 = this;
        for (var i = this.candyParent._children.length - 1; i >= 0; i--) {
            _loop_2(i);
        }
    };
    /**爆炸糖果移动路径
    * @param candy 爆炸糖果
    */
    OperationButton.prototype.explodeCandyFlyToRole = function (candy) {
        // 左右两个方向
        var point; //飞向固定点的左右位置
        var explodeTarget; //攻击对象
        // 抛物线运动最高点位置
        var HalfX;
        var HalfY;
        // 抛物线最高点位置站整个x移动位置的比例
        var distancePer = 2;
        if (candy.x < Laya.stage.width / 2) {
            explodeTarget = this.selfScene['MainSceneControl'].role_01;
            point = new Laya.Point(candy.x - 200, candy.y + 80);
            HalfX = candy.x - (candy.x - point.x) / distancePer;
        }
        else {
            explodeTarget = this.selfScene['MainSceneControl'].role_02;
            point = new Laya.Point(candy.x + 200, candy.y + 80);
            HalfX = candy.x + (point.x - candy.x) / distancePer;
        }
        HalfY = candy.y - 100;
        // 第一步飞天放大
        Laya.Tween.to(candy, { x: HalfX, y: HalfY, scaleX: 1.3, scaleY: 1.3 }, 250, null, Laya.Handler.create(this, function () {
            // 第二步降落缩小
            Laya.Tween.to(candy, { x: point.x, y: point.y, scaleX: 0.9, scaleY: 0.9 }, 300, null, Laya.Handler.create(this, function () {
                candy.scale(0.9, 0.9);
                this.selfScene['MainSceneControl'].explodeAni(this.selfScene, candy.x, candy.y, 'disappear', 8, 1000);
                candy['Candy'].asExplodeCandy();
            }, []), 0);
        }, []), 0);
        // 糖果的影子处理
        var shadow = candy.getChildByName('shadow');
        // 拉开距离并缩小
        Laya.Tween.to(shadow, { x: -20 + 52, y: 80 + 60, scaleX: 0.8, scaleY: 0.8, }, 300, null, Laya.Handler.create(this, function () {
            // 第二部回归
            Laya.Tween.to(shadow, { x: 0 + 52, y: 0 + 60, scaleX: 1, scaleY: 1 }, 300, null, Laya.Handler.create(this, function () {
            }), 0);
        }), 0);
    };
    /**计时器控制
     * 当时间小于零的时候所有还没有点击的糖果直接变成敌人
     * 并且结算，重置属性
    */
    OperationButton.prototype.timerControl = function () {
        if (this.timeSchedule.value > 0 && this.operateSwitch && !this.firstClick) {
            this.timeSchedule.value -= 0.0015;
        }
        else if (this.timeSchedule.value <= 0 && this.operateSwitch) {
            // 时间到了进行结算
            this.settlement('unfinished');
        }
    };
    /**根据进度条剩余的时间给予奖励加成
     * 分段给予不同的奖励
     * 如果有一个点错了，都不会给予特殊奖励
    */
    OperationButton.prototype.additionAward = function () {
        if (this.timeSchedule.value > 0.8) {
            this.creatRewardWords('干得漂亮');
        }
        else if (this.timeSchedule.value > 0.6) {
            this.creatRewardWords('太棒了');
        }
        else if (this.timeSchedule.value > 0.4) {
            this.creatRewardWords('牛皮');
        }
    };
    /**提示奖励文字的创建*/
    OperationButton.prototype.creatRewardWords = function (word) {
        var rewardWords = Laya.Pool.getItemByCreateFun('rewardWords', this.rewardWords.create, this.rewardWords);
        this.selfScene.addChild(rewardWords);
        rewardWords['RewardWords'].createWordsAni(word);
    };
    /**移动*/
    OperationButton.prototype.move = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**抬起*/
    OperationButton.prototype.up = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**出屏幕*/
    OperationButton.prototype.out = function (event) {
        event.currentTarget.scale(1, 1);
    };
    OperationButton.prototype.onUpdate = function () {
        // 主角全部死亡游戏结束
        if (this.selfScene['MainSceneControl'].gameOver) {
            this.operateSwitch = false;
            return;
        }
        //计时器
        this.timerControl();
    };
    OperationButton.prototype.onDisable = function () {
    };
    return OperationButton;
}(Laya.Script));
exports.default = OperationButton;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Ranking = /** @class */ (function (_super) {
    __extends(Ranking, _super);
    function Ranking() {
        return _super.call(this) || this;
    }
    Ranking.prototype.onEnable = function () {
        this.init();
    };
    /**初始化*/
    /**初始化一些非动画属性*/
    Ranking.prototype.init = function () {
        this.self = this.owner;
        this.background.alpha = 0;
        this.background.width = Laya.stage.width;
        this.background.height = Laya.stage.height;
        this.content.x = Laya.stage.width / 2;
        this.content.y = Laya.stage.height / 2;
        this.content.scale(0, 0);
        this.content.alpha = 0;
        this.appear();
    };
    Ranking.prototype.onAwake = function () {
        if (Laya.Browser.onMiniGame) {
            //加载一个json和图集
            // Laya.loader.load(["res/atlas/rank.atlas"], Laya.Handler.create(null, function () {
            //     //加载完成
            //     //使用接口将图集透传到子域
            //     Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/rank.atlas");
            //     let wx: any = Laya.Browser.window.wx;
            //     let openDataContext: any = wx.getOpenDataContext();
            //     openDataContext.postMessage({ action: 'ranking' });
            // }));
            var wx_1 = Laya.Browser.window.wx;
            var openDataContext = wx_1.getOpenDataContext();
            openDataContext.postMessage({ action: 'ranking' });
        }
    };
    /**出场动画*/
    Ranking.prototype.appear = function () {
        Laya.Tween.to(this.content, { rotation: 720, alpha: 1, scaleX: 1, scaleY: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.rotation = 0;
            this.btnClikClink();
        }, []), 0);
        Laya.Tween.to(this.background, { alpha: 0.5 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**消失动画*/
    Ranking.prototype.vanish = function () {
        this.self.pivotX = Laya.stage.width / 2;
        this.self.pivotY = Laya.stage.height / 2;
        this.self.x = Laya.stage.width / 2;
        this.self.y = Laya.stage.height / 2;
        Laya.Tween.to(this.self, { rotation: -720, alpha: 0, scaleX: 0, scaleY: 0, x: 1500 }, 700, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.self.removeSelf();
            // 发送排行榜关闭的消息
            if (Laya.Browser.onMiniGame) {
                var wx_2 = Laya.Browser.window.wx;
                var openDataContext = wx_2.getOpenDataContext();
                openDataContext.postMessage({ action: 'close' });
            }
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0 }, 450, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**开启按钮点击事件*/
    Ranking.prototype.btnClikClink = function () {
        this.but_Close.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.but_Close.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.but_Close.on(Laya.Event.MOUSE_UP, this, this.up);
        this.but_Close.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**关闭按钮点击事件*/
    Ranking.prototype.btnCloseClink = function () {
        this.but_Close.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.but_Close.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.but_Close.off(Laya.Event.MOUSE_UP, this, this.up);
        this.but_Close.off(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下*/
    Ranking.prototype.down = function (event) {
        this.but_Close.scale(0.9, 0.9);
    };
    /**移动*/
    Ranking.prototype.move = function (event) {
        this.but_Close.scale(0.9, 0.9);
    };
    /**抬起增加属性
     * 由于这里的按钮不是及时消失，所以要关闭点击事件
    */
    Ranking.prototype.up = function (event) {
        this.but_Close.scale(1, 1);
        this.vanish();
    };
    /**出屏幕*/
    Ranking.prototype.out = function (event) {
        this.but_Close.scale(1, 1);
    };
    // onAwake() {
    //     this.getChildByName("Button1").on(Laya.Event.CLICK, this, this.click1);
    //     this.getChildByName("Button2").on(Laya.Event.CLICK, this, this.click2);
    //     this.getChildByName("Button3").on(Laya.Event.CLICK, this, this.click3);
    // }
    // click1() {
    //     if (Laya.Browser.onMiniGame) {
    //         //加载一个json和图集
    //         Laya.loader.load(["res/atlas/test.atlas"], Laya.Handler.create(null, function () {
    //             //加载完成
    //             //使用接口将图集透传到子域
    //             Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/test.atlas");
    //             let wx: any = Laya.Browser.window.wx;
    //             let openDataContext: any = wx.getOpenDataContext();
    //             openDataContext.postMessage({ action: 'ranking' });
    //         }));
    //     }
    // }
    // click2() {
    //     if (Laya.Browser.onMiniGame) {
    //         let wx: any = Laya.Browser.window.wx;
    //         let openDataContext: any = wx.getOpenDataContext();
    //         openDataContext.postMessage({ action: 'close' });
    //     }
    // }
    // click3() {
    //     console.log("被子域挡住的按钮");
    // }
    Ranking.prototype.onDisable = function () {
    };
    return Ranking;
}(Laya.Script));
exports.default = Ranking;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Resurgence = /** @class */ (function (_super) {
    __extends(Resurgence, _super);
    function Resurgence() {
        return _super.call(this) || this;
    }
    Resurgence.prototype.onEnable = function () {
        this.init();
    };
    /**初始化*/
    Resurgence.prototype.init = function () {
        this.self = this.owner;
        this.self.pivotX = 0;
        this.self.pivotY = 0;
        this.self.x = this.self.pivotX;
        this.self.y = this.self.pivotY;
        this.selfScene = this.self.scene;
        this.background = this.self.getChildByName('background');
        this.background.alpha = 0;
        this.content = this.self.getChildByName('content');
        this.content.alpha = 0;
        this.resurgence_Btn = this.content.getChildByName('resurgence_Btn');
        this.resurgence_Btn.x = -1200;
        this.digitalPlate = this.content.getChildByName('digitalPlate');
        this.digitalPlate.x = 1200;
        this.digital = this.content.getChildByName('digital');
        this.digital.scaleX = 0;
        this.digital.scaleY = 0;
        this.digital.alpha = 0;
        this.digital.value = '5';
        this.timeLine = 0;
        this.countdown = false;
        this.hintWord = this.selfScene['MainSceneControl'].hintWord;
        this.settlement = this.selfScene['MainSceneControl'].settlement;
        Laya.timer.frameOnce(100, this, function () {
            this.appearAni();
        });
        this.adaptive();
    };
    /**自适应*/
    Resurgence.prototype.adaptive = function () {
        this.background.width = Laya.stage.width;
        this.background.height = Laya.stage.height;
        this.content.x = Laya.stage.width / 2;
        this.content.y = Laya.stage.height / 2;
        this.self.width = Laya.stage.width;
        this.self.height = Laya.stage.height;
        this.self.alpha = 1;
        this.self.scale(1, 1);
        this.self.rotation = 0;
        this.self.x = 0;
        this.self.y = 0;
    };
    /**动画初始化*/
    Resurgence.prototype.appearAni = function () {
        // 总体显现
        Laya.Tween.to(this.content, { alpha: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
        // 复活按钮
        Laya.Tween.to(this.resurgence_Btn, { x: 375, rotation: 720 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.resurgence_Btn.rotation = 0;
        }, []), 0);
        // 数字地板
        Laya.Tween.to(this.digitalPlate, { x: 375, rotation: 720 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.digitalPlate.rotation = 0;
            this.btnonClink();
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0.7 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
        // 倒计时数字的倒计时动画
        Laya.Tween.to(this.digital, { scaleX: 1.2, scaleY: 1.2, alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
            this.countdown = true;
        }, []), 0);
    };
    /**切换界面的消失动画
     * @param type 切换到什么界面
    */
    Resurgence.prototype.cutTnterface = function (type) {
        this.btnOffClink();
        this.self.pivotX = Laya.stage.width / 2;
        this.self.pivotY = Laya.stage.height / 2;
        this.self.x = this.self.pivotX;
        this.self.y = this.self.pivotY;
        // 移动
        Laya.Tween.to(this.self, { x: 1500, rotation: 720, scaleX: 0, scaleY: 0, alpha: 0 }, 700, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            if (type === 'main') {
                this.roleResurgenceAni();
                this.self.removeSelf();
            }
            else {
                this.self.removeSelf();
            }
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0 }, 450, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**主角复活重新开始*/
    Resurgence.prototype.roleResurgenceAni = function () {
        var role_01 = this.selfScene['MainSceneControl'].role_01;
        var role_02 = this.selfScene['MainSceneControl'].role_02;
        Laya.Tween.to(role_01, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
            this.hintWordMove();
        }, []), 0);
        Laya.Tween.to(role_02, { alpha: 1 }, 700, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**属性增加提示动画*/
    Resurgence.prototype.hintWordMove = function () {
        var delayed = 0;
        var MainSceneControl = this.selfScene['MainSceneControl'];
        var role_01 = MainSceneControl.role_01;
        var role_02 = MainSceneControl.role_02;
        var _loop_1 = function (i) {
            Laya.timer.frameOnce(delayed, this_1, function () {
                switch (i) {
                    case 0:
                        MainSceneControl.createHintWord(role_01, 100, -10, '攻击里', 20, 1);
                        MainSceneControl.createHintWord(role_02, 100, -10, '攻击里', 20, 1);
                        role_01['Role'].role_property.attackValue += 20;
                        role_02['Role'].role_property.attackValue += 20;
                        break;
                    case 1:
                        MainSceneControl.createHintWord(role_01, 100, -10, '生命', 1000, 1);
                        MainSceneControl.createHintWord(role_02, 100, -10, '生命', 1000, 1);
                        role_01['Role'].role_property.blood = 1000;
                        role_02['Role'].role_property.blood = 1000;
                        break;
                    case 2:
                        MainSceneControl.createHintWord(role_01, 100, -10, '公鸡速度', 20, 1);
                        MainSceneControl.createHintWord(role_02, 100, -10, '公鸡速度', 20, 1);
                        role_01['Role'].role_property.attackSpeed += 20;
                        role_02['Role'].role_property.attackSpeed += 20;
                        break;
                    case 3:
                        MainSceneControl.createHintWord(role_01, 100, -10, '防御力', 10, 1);
                        MainSceneControl.createHintWord(role_02, 100, -10, '防御力', 10, 1);
                        role_01['Role'].role_property.defense += 10;
                        role_02['Role'].role_property.defense += 10;
                        break;
                    default:
                        break;
                }
                // 播放完毕之后开始游戏
                if (i === 3) {
                    this.resurgenceProperties();
                }
            });
            delayed += 25;
        };
        var this_1 = this;
        for (var i = 0; i < 4; i++) {
            _loop_1(i);
        }
    };
    /**开始或者重新开始所需改变的属性*/
    Resurgence.prototype.resurgenceProperties = function () {
        var MainSceneControl = this.selfScene['MainSceneControl'];
        MainSceneControl.gameOver = false;
        MainSceneControl.role_01['Role'].roleDeath = false;
        MainSceneControl.role_02['Role'].roleDeath = false;
        MainSceneControl.operating['OperationControl'].operateSwitch = true;
    };
    /**复活按钮点击事件*/
    Resurgence.prototype.btnonClink = function () {
        this.resurgence_Btn.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.resurgence_Btn.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.resurgence_Btn.on(Laya.Event.MOUSE_UP, this, this.up);
        this.resurgence_Btn.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**关闭复活按钮点击事件*/
    Resurgence.prototype.btnOffClink = function () {
        this.resurgence_Btn.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.resurgence_Btn.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.resurgence_Btn.off(Laya.Event.MOUSE_UP, this, this.up);
        this.resurgence_Btn.off(Laya.Event.MOUSE_OUT, this, this.out);
    };
    Resurgence.prototype.down = function (event) {
        event.currentTarget.scale(0.95, 0.95);
    };
    /**移动*/
    Resurgence.prototype.move = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**抬起增加属性*/
    Resurgence.prototype.up = function (event) {
        this.btnOffClink();
        event.currentTarget.scale(1, 1);
        this.countdown = false; //停止读秒
        this.cutTnterface('main');
    };
    /**出屏幕*/
    Resurgence.prototype.out = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**创建结算界面
     * 并且上传分数到微信排行榜
    */
    Resurgence.prototype.createSettlement = function () {
        this.selfScene['MainSceneControl'].wxPostData();
        // 稍加延时
        Laya.timer.frameOnce(20, this, function () {
            var settlement = Laya.Pool.getItemByCreateFun('settlement', this.settlement.create, this.settlement);
            this.selfScene.addChild(settlement);
            this.selfScene['MainSceneControl'].roleVanish(); //主角移动到两边
            settlement.pos(0, 0);
        });
    };
    Resurgence.prototype.onUpdate = function () {
        // 倒计时
        if (this.countdown) {
            this.timeLine++;
            // 等于零的时候创建结算界面
            if (this.timeLine % 60 == 0) {
                this.digital.value = (Number(this.digital.value) - 1).toString();
                this.digital.scale(1, 1);
                if (this.digital.value === '0') {
                    this.countdown = false;
                    this.createSettlement();
                    this.cutTnterface('settlement');
                }
            }
            else {
                // 动画
                this.digital.scaleX -= 0.003;
                this.digital.scaleY -= 0.003;
            }
        }
    };
    Resurgence.prototype.onDisable = function () {
        Laya.Tween.clearAll(this);
        Laya.timer.clearAll(this);
        Laya.Pool.recover('resurgence', this.self);
    };
    return Resurgence;
}(Laya.Script));
exports.default = Resurgence;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RewardWords = /** @class */ (function (_super) {
    __extends(RewardWords, _super);
    function RewardWords() {
        return _super.call(this) || this;
    }
    RewardWords.prototype.onEnable = function () {
        this.initProperty();
    };
    RewardWords.prototype.initProperty = function () {
        this.self = this.owner;
        this.self['RewardWords'] = this;
        this.selfScene = this.self.scene;
        this.self.alpha = 0; //出现的时候隐身，方便做动画
        this.locationY = Laya.stage.height * 2 / 5;
        this.self.y = this.locationY;
        this.self.pivotX = this.self.width / 2;
        this.self.pivotY = this.self.height / 2;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.self.x = 1200;
        this.self.alpha = 0;
        this.hintWord = this.selfScene['MainSceneControl'].hintWord;
    };
    /**通过传入的参数来，设置属性图片字的格式
     * @param word 具体字样
     * */
    RewardWords.prototype.createWordsAni = function (word) {
        var url_01 = 'candy/提示文字/牛皮.png';
        var url_02 = 'candy/提示文字/太棒了.png';
        var url_03 = 'candy/提示文字/干得漂亮.png';
        // 避免从对象池拿出来后重复添加
        var wordImg;
        if (!this.self.getChildByName('word')) {
            wordImg = new Laya.Image;
            this.self.addChild(wordImg);
        }
        else {
            wordImg = this.self.getChildByName('word');
        }
        wordImg.name = 'word';
        switch (word) {
            case '牛皮':
                wordImg.skin = url_01;
                wordImg.pos(150, 20);
                this.addScoreNumber = 500;
                break;
            case '太棒了':
                wordImg.skin = url_02;
                wordImg.pos(105, 20);
                this.addScoreNumber = 1000;
                break;
            case '干得漂亮':
                wordImg.skin = url_03;
                wordImg.pos(55, 20);
                this.addScoreNumber = 2000;
                break;
            default:
                break;
        }
        this.wordsType = word;
        this.RewardWordsMove();
    };
    ;
    /**飘字动画时间线*/
    RewardWords.prototype.RewardWordsMove = function () {
        var standingTime;
        switch (this.wordsType) {
            case '牛皮':
                standingTime = 1600;
                break;
            case '太棒了':
                standingTime = 2000;
                break;
            case '干得漂亮':
                standingTime = 2400;
                break;
            default:
                standingTime = 1600;
                break;
        }
        // 创建底板
        var baseboard = new Laya.Image;
        baseboard.skin = 'candy/ui/文字提示底.png';
        this.selfScene.addChild(baseboard);
        baseboard.pos(-800, this.locationY);
        baseboard.anchorX = 0.5;
        baseboard.anchorY = 0.5;
        baseboard.alpha = 0;
        baseboard.scale(0, 0);
        //注意层级
        baseboard.zOrder = 100;
        this.self.zOrder = 110;
        // 底板动画
        var timeLine_baseboard_01 = new Laya.TimeLine;
        timeLine_baseboard_01
            .addLabel('overturn_01', 0).to(baseboard, { scaleX: 1, scaleY: 1, x: Laya.stage.width / 2, rotation: 360, alpha: 1 }, 400, null, 0);
        timeLine_baseboard_01.play('overturn_01', false);
        timeLine_baseboard_01.on(Laya.Event.COMPLETE, this, function () {
            this.letOffFireworks();
            // 第二段
            var timeLine_baseboard_02 = new Laya.TimeLine;
            timeLine_baseboard_02
                .addLabel('pause', 0).to(baseboard, {}, standingTime, null, 0)
                .addLabel('vanish_01', 0).to(baseboard, { scaleX: 0.2, scaleY: 0.2, x: 800, rotation: -360, alpha: 0 }, 650, Laya.Ease.circInOut, 0);
            timeLine_baseboard_02.play('pause', false);
            timeLine_baseboard_02.on(Laya.Event.COMPLETE, this, function () {
                baseboard.removeSelf();
            });
        });
        // 增加分数延迟用于配合上面的动画
        Laya.timer.frameOnce(150, this, function () {
            this.selfScene['MainSceneControl'].createHintWord(this.selfScene, Laya.stage.width / 2, this.locationY, '额外奖励分数', this.addScoreNumber);
        });
        // 字体动画
        var timeLine_self = new Laya.TimeLine;
        timeLine_self.addLabel('appear', -300).to(this.self, { rotation: 360, x: Laya.stage.width / 2, alpha: 1 }, 550, null, 0)
            .addLabel('pause', 0).to(this.self, { x: Laya.stage.width / 2 }, standingTime - 400, null, 0)
            .addLabel('vanish_02', 0).to(this.self, { rotation: -720, x: -1200 }, 650, Laya.Ease.circInOut, 0);
        timeLine_self.play('appear', false);
        timeLine_self.on(Laya.Event.COMPLETE, this, function () {
            this.self.removeSelf();
        });
    };
    /**烟花规则
     *得分越高爆炸越多
    */
    RewardWords.prototype.letOffFireworks = function () {
        var count;
        var delayed = 0;
        switch (this.wordsType) {
            case '牛皮':
                count = 5;
                break;
            case '太棒了':
                count = 7;
                break;
            case '干得漂亮':
                count = 10;
                break;
            default:
                count = 6;
                break;
        }
        var _loop_1 = function (i) {
            Laya.timer.frameOnce(delayed, this_1, function () {
                var randomX = Math.floor(Math.random() * 100);
                var locationX_01;
                if (i % 2 !== 0) {
                    locationX_01 = Laya.stage.width / 2 + 50 + randomX;
                }
                else {
                    locationX_01 = Laya.stage.width / 2 - 50 - randomX;
                }
                this.selfScene['MainSceneControl'].explodeAni(this.selfScene, locationX_01, this.locationY, 'fireworks', 20, 105);
            });
            delayed += 15;
        };
        var this_1 = this;
        for (var i = 0; i < count; i++) {
            _loop_1(i);
        }
    };
    RewardWords.prototype.onDisable = function () {
        Laya.Pool.recover('rewardWords', this.self);
        Laya.Tween.clearAll(this);
        Laya.timer.clearAll(this);
    };
    return RewardWords;
}(Laya.Script));
exports.default = RewardWords;
},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role() {
        return _super.call(this) || this;
    }
    Role.prototype.onEnable = function () {
        this.initProperty();
        this.bucketClink();
        this.createBoneAni();
    };
    /**初始化*/
    Role.prototype.initProperty = function () {
        this.self = this.owner;
        this.selfHealth = this.self.getChildByName('health');
        this.selfHealth.value = 1;
        this.propertyShow = this.self.getChildByName('propertyShow');
        // 默认属性不可见
        this.propertyShow.alpha = 0;
        this.bloodLabel = this.selfHealth.getChildByName('bloodLabel');
        this.self['Role'] = this;
        this.selfScene = this.self.scene;
        this.candyParent = this.selfScene['MainSceneControl'].candyParent;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.nowTime = Date.now();
        this.roleDeath = false;
        this.rolePropertySet();
    };
    /**主角的属性
    *两个主角属性分别计算
    *四个属性依次是，生命值，子弹攻击力，子弹发射频率和弹道速度，防御能力
   */
    Role.prototype.rolePropertySet = function () {
        if (this.self.name === 'role_01') {
            this.role_property = {
                blood: 50,
                attackValue: 10,
                attackSpeed: 1500,
                defense: 5,
            };
        }
        else if (this.self.name === 'role_02') {
            this.role_property = {
                blood: 50,
                attackValue: 10,
                attackSpeed: 1500,
                defense: 5,
            };
        }
    };
    /**创建骨骼动画皮肤*/
    Role.prototype.createBoneAni = function () {
        //创建动画模板
        this.templet = new Laya.Templet();
        this.templet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this.templet.on(Laya.Event.ERROR, this, this.onError);
        if (this.self.name === 'role_01') {
            this.templet.loadAni("candy/主角/role_01.sk");
        }
        else if (this.self.name === 'role_02') {
            this.templet.loadAni("candy/主角/role_02.sk");
        }
    };
    Role.prototype.onError = function () {
        console.log('骨骼动画加载错误');
    };
    Role.prototype.parseComplete = function () {
        // 播放敌人动画
        this.skeleton = this.templet.buildArmature(0); //模板0
        this.skeletonListen();
        this.self.addChild(this.skeleton);
        this.skeleton.play('frontMove', true);
        this.skeleton.playbackRate(1);
        this.skeleton.name = 'skeleton';
        if (this.self.name === 'role_01') {
            this.skeleton.x = 60;
            this.skeleton.y = 72;
        }
        else if (this.self.name === 'role_02') {
            this.skeleton.x = 60;
            this.skeleton.y = 72;
        }
    };
    /**监听*/
    Role.prototype.skeletonListen = function () {
        this.skeleton.on(Laya.Event.LABEL, this, function (e) {
            if (e.name === 'hitOut') {
                this.createBullet();
            }
        });
        this.skeleton.on(Laya.Event.COMPLETE, this, function (e) {
            console.log(e);
        });
    };
    /**创建子弹*/
    Role.prototype.createBullet = function () {
        var bullet = Laya.Pool.getItemByCreateFun('roleBullet', this.roleBullet.create, this.roleBullet);
        this.bulletParent.addChild(bullet);
        bullet.pos(this.self.x, this.self.y);
        var pic = bullet.getChildByName('pic');
        if (this.self.name === 'role_01') {
            pic.skin = 'candy/主角/主角1子弹.png';
        }
        else if (this.self.name === 'role_02') {
            pic.skin = 'candy/主角/主角2子弹.png';
        }
        this.lockedBulletTarget(bullet);
        bullet['Bullet'].belongRole = this.self;
    };
    /**播放速度相对攻击速度进行调整
      * 当播放间隔低于500后进行调整
     */
    Role.prototype.playSpeedAdjust = function () {
        // 播放速度调整
        var playSpeed;
        if ((500 - this.role_property.attackSpeed) / 500 > 0) {
            playSpeed = 1 + (500 - this.role_property.attackSpeed) / 500;
        }
        else {
            playSpeed = 1;
        }
        this.skeleton.playbackRate(playSpeed);
    };
    /**发动攻击
     * 目前之发射子弹
    */
    Role.prototype.onsetAttack = function () {
        // 攻击播放一次
        this.skeleton.play('attack', false);
        this.playSpeedAdjust();
    };
    /**属性实时刷新刷新*/
    Role.prototype.updateProperty = function () {
        // 血条上的血量显示、
        this.bloodLabel.text = this.role_property.blood;
        // 属性显示框内的属性显示
        // 血量
        var blood = this.propertyShow.getChildByName('blood');
        blood.text = "血量: " + this.role_property.blood;
        // 攻击力
        var attackValue = this.propertyShow.getChildByName('attackValue');
        attackValue.text = "攻击力: " + this.role_property.attackValue;
        // 攻击速度
        var attackSpeed = this.propertyShow.getChildByName('attackSpeed');
        attackSpeed.text = "攻击速度: " + this.role_property.attackSpeed;
        // 防御力
        var defense = this.propertyShow.getChildByName('defense');
        defense.text = "防御力: " + this.role_property.defense;
    };
    /**主角的点击事件
     * 和长按出现属性展示页面
     * 滑动可以拖动主角到规定的位置
    */
    Role.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Role.prototype.down = function (event) {
    };
    /**移动*/
    Role.prototype.move = function (event) {
    };
    /**抬起*/
    Role.prototype.up = function () {
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Role.prototype.out = function () {
        this.self.scale(1, 1);
    };
    /**锁定最近的那个敌人
    * 如果没有敌人，且屏幕上敌人存在，那么会锁定一个敌人
    * 左右判断原则是，如果是左边角色发射子弹，那么先观察左边有没有敌人，如果有那么优先攻击左边
   */
    Role.prototype.lockedBulletTarget = function (bullet) {
        // 两点之间的距离数组
        var distanceArr = [];
        var enemyParent = this.selfScene['MainSceneControl'].enemyParent;
        for (var i = 0; i < enemyParent._children.length; i++) {
            var enemy = enemyParent._children[i];
            //两点之间的距离
            var dx = enemy.x - this.self.x;
            var dy = enemy.y - this.self.y;
            var distance = Math.sqrt(dx * dx + dy * dy);
            var object = {
                distance: distance,
                name: enemy.name
            };
            distanceArr.push(object);
        }
        // 距离排序
        var compare = function (obj1, obj2) {
            var val1 = obj1.distance;
            var val2 = obj2.distance;
            if (val1 < val2) {
                return -1;
            }
            else if (val1 > val2) {
                return 1;
            }
            else {
                return 0;
            }
        };
        // 找出距离最近的
        distanceArr.sort(compare);
        if (distanceArr.length > 0) {
            var target = enemyParent.getChildByName(distanceArr[0].name);
            bullet['Bullet'].bulletTarget = target;
            bullet['Bullet'].bulletTargetName = target.name;
        }
    };
    Role.prototype.onUpdate = function () {
        if (this.roleDeath) {
            return;
        }
        // 血量低于0则死亡,并且弹出复活界面
        if (this.role_property.blood <= 0) {
            this.role_property.blood = 0; //保证主角的血量显示不小于0;
            if (this.self.name === 'role_01') {
                this.roleDeath = true;
                this.self.alpha = 0;
            }
            else if (this.self.name === 'role_02') {
                this.roleDeath = true;
                this.self.alpha = 0;
            }
        }
        // 刷新属性
        this.updateProperty();
        //创建子弹
        var nowTime = Date.now();
        if (this.skeleton && this.role_Warning) {
            if (nowTime - this.nowTime > this.role_property.attackSpeed) {
                if (this.role_Warning) {
                    this.onsetAttack();
                    this.nowTime = nowTime;
                }
            }
        }
    };
    Role.prototype.onDisable = function () {
    };
    return Role;
}(Laya.Script));
exports.default = Role;
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainSceneControl_1 = require("./MainSceneControl");
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        return _super.call(this) || this;
    }
    Bullet.prototype.onEnable = function () {
        this.init();
    };
    /**初始化一些属性*/
    Bullet.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.mainSceneControl = this.selfScene.getComponent(MainSceneControl_1.default);
        this.enemyParent = this.mainSceneControl.enemyParent;
        this.hintWord = this.mainSceneControl.hintWord;
        this.selfSpeed = 15;
        // 属性赋值
        this.role_01 = this.selfScene['MainSceneControl'].role_01;
        this.attackValue = this.role_01['Role'].role_property.attackValue;
        this.self['Bullet'] = this;
    };
    /**子弹移动
     * 子弹只有当目标对象和目标对象在父节点内的时候才会移动
     * 目标对象永远存在，只不过他被移除了，所以bulletTarget永不为空，只能判断父节点是否存在
     * 因为下次这个被移除的敌人被重新创建的时候，名称都不一样，所以要判断名称
     * 若果这个目标被移除了，那么发出去的子弹会沿着和主角的方向继续移动到500；
    */
    Bullet.prototype.bulletMove = function () {
        if (this.bulletTarget && this.bulletTarget.parent && this.bulletTargetName === this.bulletTarget.name) {
            // x,y分别相减是两点连线向量
            var point = new Laya.Point(this.bulletTarget.x - this.self.x, this.bulletTarget.y - this.self.y);
            // 归一化，向量长度为1。
            point.normalize();
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
        else {
            // 沿着自己当前和发射自己的主角方向移动
            var point = new Laya.Point(this.self.x - this.belongRole.x, this.self.y - this.belongRole.y);
            // 归一化，向量长度为1。
            point.normalize();
            // 如果静止不动则消失
            if (point.x === 0) {
                this.self.removeSelf();
            }
            //向量相加
            this.self.x += point.x * this.selfSpeed;
            this.self.y += point.y * this.selfSpeed;
        }
    };
    Bullet.prototype.onUpdate = function () {
        // 移动
        this.bulletMove();
        // 超出横向范围消失，一般不会触发
        if (this.self.x > 750 + this.self.width + 50 || this.self.x < -this.self.width) {
            this.self.removeSelf();
        }
        // 射程为500，超过射程消失
        if (this.self.y <= Laya.stage.width * 1 / 3) {
            this.self.removeSelf();
            return;
        }
        // 碰到任何一个怪物，子弹消失怪物掉血
        // 子弹击中近战怪物怪物会后退
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var differenceX = Math.abs(enemy.x - this.self.x);
            var differenceY = Math.abs(enemy.y - this.self.y);
            if (differenceX < 10 && differenceY < 10) {
                if (enemy.name.substring(0, 5) === 'enemy') {
                    this.attackEnemy(enemy);
                }
                else {
                    this.attackCandy_Explode(enemy);
                }
                this.self.removeSelf();
            }
        }
    };
    /**子弹对敌人造成伤害的公式
     * 子弹击中敌人，敌人会被击退
      * 攻击力-敌人防御如果大于零则造成伤害，否则不造成伤害
      * 掉血显示值，伤害小于零则显示0
      * 并且有动画提示文字
     */
    Bullet.prototype.attackEnemy = function (enemy) {
        // 通过攻击力计算掉血状况
        var damage = this.attackValue - enemy['Enemy'].enemyProperty.defense;
        if (damage > 0) {
            enemy['Enemy'].enemyProperty.blood -= damage;
        }
        else {
            damage = 0;
        }
        // 飘字
        // this.hintWordMove(enemy, damage);
        // 触发击退
        enemy['Enemy'].repelTimer = 2;
    };
    /**子弹对爆炸糖果伤害公式
     * 爆炸糖果暂时没有防御力
     * 攻击数次就死亡
     * 没有提示飘字动画*/
    Bullet.prototype.attackCandy_Explode = function (enemy) {
        var health = enemy.getChildByName('health');
        health.value -= 3.4;
    };
    /**提示文字*/
    Bullet.prototype.hintWordMove = function (enemy, damage) {
        // 敌人被消灭了，则不执行这个
        if (enemy.parent === null) {
            return;
        }
        // 创建提示动画对象
        var hintWord = Laya.Pool.getItemByCreateFun('candy', this.hintWord.create, this.hintWord);
        hintWord.pos(100, -150);
        enemy.addChild(hintWord);
        var proPertyType = '主角掉血';
        var numberValue;
        hintWord['HintWord'].initProperty(proPertyType, damage);
    };
    Bullet.prototype.onDisable = function () {
        Laya.Pool.recover('bullet', this.self);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;
},{"./MainSceneControl":10}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Settlement = /** @class */ (function (_super) {
    __extends(Settlement, _super);
    function Settlement() {
        return _super.call(this) || this;
    }
    Settlement.prototype.onEnable = function () {
        this.init();
    };
    /**初始化*/
    Settlement.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.background = this.self.getChildByName('background');
        this.content = this.self.getChildByName('content');
        this.background.alpha = 0;
        this.operation = this.content.getChildByName('operation');
        this.operation.x = -1200;
        this.operation.alpha = 0;
        this.btn_Return = this.operation.getChildByName('btn_Return');
        this.btn_Again = this.operation.getChildByName('btn_Again');
        this.GOLogo = this.content.getChildByName('GOLogo');
        this.GOLogo.x = 1200;
        this.GOLogo.alpha = 0;
        this.scoreLabel = this.selfScene['MainSceneControl'].scoreLabel;
        this.score = this.selfScene['MainSceneControl'].score;
        this.timeLine = 0;
        this.btnAniSwich = true;
        this.btnAniTime = Date.now();
        this.btnAniInterval = 3000;
        this.adaptive();
        this.appearAni();
    };
    /**自适应*/
    Settlement.prototype.adaptive = function () {
        this.background.width = Laya.stage.width;
        this.background.height = Laya.stage.height;
        this.content.x = Laya.stage.width / 2;
        this.content.y = Laya.stage.height / 2 - 50;
        this.self.width = Laya.stage.width;
        this.self.height = Laya.stage.height;
        this.self.x = 0;
        this.self.y = 0;
    };
    //*动画初始化*/ 
    Settlement.prototype.appearAni = function () {
        // 操作按钮
        Laya.Tween.to(this.operation, { x: 375, rotation: 720, alpha: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.operation.rotation = 0;
        }, []), 0);
        // 游戏结束logo
        Laya.Tween.to(this.GOLogo, { x: 375, rotation: 720, alpha: 1 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.GOLogo.rotation = 0;
            this.GOLogoAni();
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0.8 }, 550, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
        }, []), 0);
        // 得分节点的动画
        this.scoreAni();
    };
    /**得分节点的动画*/
    Settlement.prototype.scoreAni = function () {
        var score = Laya.Pool.getItemByCreateFun('score', this.score.create, this.score);
        // 复制分数
        var Label = score.getChildByName('scoreLabel');
        Label.value = this.scoreLabel.value;
        this.self.addChild(score);
        score.pos(Laya.stage.width / 2, 0);
        score.pivotX = score.width / 2;
        score.pivotY = score.height / 2;
        // 动画
        Laya.Tween.to(score, { x: 375, y: this.content.y - 200, rotation: 720 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.btnClink();
        }, []), 0);
    };
    /**点击重来按钮的消失动画*/
    Settlement.prototype.cutTnterface = function (type) {
        this.self.pivotX = Laya.stage.width / 2;
        this.self.pivotY = Laya.stage.height / 2;
        this.self.x = this.self.pivotX;
        this.self.y = this.self.pivotY;
        // 整体移动
        Laya.Tween.to(this.self, { x: 1500, rotation: 720, scaleX: 0, scaleY: 0, alpha: 0 }, 700, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.self.removeSelf();
            if (type === 'restart') {
                this.selfScene['MainSceneControl'].restart();
            }
            else if (type === 'returnStart') {
                this.selfScene['MainSceneControl'].returnStartSet();
                this.selfScene['MainSceneControl'].createStartInterface('returnStart');
            }
        }, []), 0);
        // 背景
        Laya.Tween.to(this.background, { alpha: 0 }, 450, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**游戏结束logo的动画*/
    Settlement.prototype.GOLogoAni = function () {
        Laya.Tween.to(this.GOLogo, { alpha: 0.5 }, 800, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.GOLogo, { alpha: 1 }, 800, null, Laya.Handler.create(this, function () {
                this.GOLogoAni();
            }, []), 0);
        }, []), 0);
    };
    Settlement.prototype.btnAni = function () {
        Laya.Tween.to(this.btn_Return, { scaleX: 0.95, scaleY: 0.95 }, 100, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Return, { scaleX: 1.05, scaleY: 1.05 }, 100, null, Laya.Handler.create(this, function () {
                Laya.Tween.to(this.btn_Return, { scaleX: 1, scaleY: 1 }, 100, null, Laya.Handler.create(this, function () {
                }, []), 0);
                Laya.Tween.to(this.btn_Again, { scaleX: 0.95, scaleY: 0.95 }, 100, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(this.btn_Again, { scaleX: 1.05, scaleY: 1.05 }, 100, null, Laya.Handler.create(this, function () {
                        Laya.Tween.to(this.btn_Again, { scaleX: 1, scaleY: 1 }, 100, null, Laya.Handler.create(this, function () {
                        }, []), 0);
                    }, []), 0);
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    /**按钮点击事件*/
    Settlement.prototype.btnClink = function () {
        // 重来
        this.btn_Again.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Again.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Again.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Again.on(Laya.Event.MOUSE_OUT, this, this.out);
        // 返回
        this.btn_Return.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Return.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Return.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Return.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**关闭按钮点击事件*/
    Settlement.prototype.btnOffClink = function () {
        // 重来
        this.btn_Again.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Again.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Again.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Again.off(Laya.Event.MOUSE_OUT, this, this.out);
        // 返回
        this.btn_Return.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Return.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Return.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Return.off(Laya.Event.MOUSE_OUT, this, this.out);
    };
    Settlement.prototype.down = function (event) {
        Laya.timer.pause();
        event.currentTarget.scale(0.95, 0.95);
    };
    /**移动*/
    Settlement.prototype.move = function (event) {
        event.currentTarget.scale(1, 1);
    };
    /**抬起增加属性*/
    Settlement.prototype.up = function (event) {
        this.btnOffClink();
        event.currentTarget.scale(1, 1);
        if (event.currentTarget.name === 'btn_Again') {
            this.cutTnterface('restart');
        }
        else if (event.currentTarget.name === 'btn_Return') {
            this.cutTnterface('returnStart');
        }
        Laya.timer.resume();
        Laya.Tween.clearTween(this.GOLogo); //删除logo的动画
    };
    /**出屏幕*/
    Settlement.prototype.out = function (event) {
        Laya.timer.resume();
        event.currentTarget.scale(1, 1);
    };
    Settlement.prototype.onUpdate = function () {
        var time = Date.now();
        if (this.btnAniSwich) {
            if (time - this.btnAniTime > this.btnAniInterval) {
                this.btnAniTime = time;
                this.btnAni();
            }
        }
    };
    Settlement.prototype.onDisable = function () {
        Laya.Tween.clearAll(this);
    };
    return Settlement;
}(Laya.Script));
exports.default = Settlement;
},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SpeakBox = /** @class */ (function (_super) {
    __extends(SpeakBox, _super);
    function SpeakBox() {
        return _super.call(this) || this;
    }
    SpeakBox.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['SpeakBox'] = this;
    };
    /**说话，通过参数告诉主角该说什么话
     * @param who 谁说了这个话,主角1，主角2，或者敌人
     * @param describe 说了什么话
    */
    SpeakBox.prototype.speakingRules = function (who, describe) {
        var content = ' ';
        if (who === 'role_01') {
            switch (describe) {
                case 'firstClick':
                    content = '点击和第一排和糖果颜色的按钮！';
                    break;
                case 'clickError':
                    content = '抱歉你点击错了！';
                    break;
                case 'clickRight':
                    content = '你真棒，点对了！';
                default:
                    break;
            }
        }
        else if (who === 'role_02') {
            switch (describe) {
                case 'firstClick':
                    content = '第一排糖果是小箭头显示的位置哦~！';
                    break;
                case 'clickError':
                    content = '请看准颜色！';
                    break;
                case 'clickRight':
                    content = '数字表示要点击几次！';
                    break;
                default:
                    break;
            }
        }
        else {
        }
        this.speakContent.text = content;
    };
    SpeakBox.prototype.onDisable = function () {
    };
    return SpeakBox;
}(Laya.Script));
exports.default = SpeakBox;
},{}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var startGame = /** @class */ (function (_super) {
    __extends(startGame, _super);
    function startGame() {
        return _super.call(this) || this;
    }
    startGame.prototype.onEnable = function () {
        this.init();
    };
    /**动画模式
    * @param type 类型，不同类型动画不一样
   */
    startGame.prototype.aniTypeInit = function (type) {
        if (type === 'start') {
            this.startAniInit();
        }
        else if (type === 'returnStart') {
            this.returnStartInit();
        }
    };
    /**初始化一些非动画属性*/
    startGame.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.self['StartGame'] = this;
        this.LoGo.zOrder = 1000; //logo下面要有星星动画
        this.starSwich = true;
        this.starTime = Date.now();
        this.starInterval = 25;
        this.startBSwitch = null;
        this.startBInterval = null;
        this.startBTime = Date.now();
        this.startBNum = 0;
        var heightL = Laya.stage.height;
        this.antiAddiction.y = heightL * 7.2 / 8 + (this.self.height - heightL) / 2;
        this.ranking = this.selfScene['MainSceneControl'].ranking;
    };
    /**进入界面的动画节点属性*/
    startGame.prototype.startAniInit = function () {
        this.maskBg.alpha = 1;
        this.bg_01.x = 187;
        this.bg_01.y = 410;
        this.bg_02.x = 562;
        this.bg_02.y = 410;
        this.bg_03.x = 187;
        this.bg_03.y = 1230;
        this.bg_04.x = 562;
        this.bg_04.y = 1230;
        this.bg_Pure.alpha = 1;
        this.btn_Start.x = -1500;
        this.btn_Start.alpha = 0;
        this.btn_Start.scale(0, 0);
        this.LoGo.x = 1500;
        this.LoGo.alpha = 0;
        this.LoGo.scale(0, 0);
        this.antiAddiction.alpha = 0;
        this.btn_Participate.alpha = 0;
        this.btn_Participate.scale(0, 0);
        this.btn_Ranking.alpha = 0;
        this.btn_Ranking.scale(0, 0);
        this.startAni();
    };
    /**动画初始化*/
    startGame.prototype.startAni = function () {
        // LoGo
        Laya.Tween.to(this.LoGo, { x: 375, rotation: 1080, alpha: 1, scaleX: 1, scaleY: 1 }, 700, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.LoGo.rotation = 0;
            this.starInterval = 300; //logo后面的星星出发间隔，开始很小，现在平稳
        }, []), 0);
        // 开始按钮
        // 动画结束之后出现
        Laya.Tween.to(this.btn_Start, { x: 375, rotation: -1080, alpha: 1, scaleX: 1, scaleY: 1 }, 700, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.btn_Start.rotation = 0;
            this.buttonAppear();
            // 第一次立即执行btn_Start抖动动画
            this.startBSwitch = true;
            this.startBInterval = 0;
            //防沉迷文字动画
            Laya.Tween.to(this.antiAddiction, { alpha: 1 }, 200, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
    };
    /**两个操作按钮出现动画*/
    startGame.prototype.buttonAppear = function () {
        Laya.Tween.to(this.btn_Ranking, { alpha: 1, scaleX: 1, scaleY: 1, rotation: 720 }, 350, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Participate, { alpha: 1, scaleX: 1, scaleY: 1, rotation: -720 }, 350, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                this.btnClink();
            }, []), 0);
        }, []), 0);
    };
    /**开始游戏界面消失动画*/
    startGame.prototype.vanishAni = function () {
        //隐藏其他元素
        this.bg_Pure.alpha = 0;
        this.LoGo.alpha = 0;
        this.btn_Start.alpha = 0;
        this.btn_Ranking.alpha = 0;
        this.btn_Participate.alpha = 0;
        this.maskBg.alpha = 0.6;
        // 防沉迷文字消失
        Laya.Tween.to(this.antiAddiction, { alpha: 0 }, 200, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
        //黑色遮罩渐变缓冲
        Laya.Tween.to(this.maskBg, { alpha: 0 }, 1200, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            this.self.removeSelf();
            this.selfScene['MainSceneControl'].firstStart();
        }, []), 0);
        // 4个背景拉开
        this.bg_VanishAni(this.bg_01, -1500);
        this.bg_VanishAni(this.bg_02, 1500);
        this.bg_VanishAni(this.bg_03, -1500);
        this.bg_VanishAni(this.bg_04, 1500);
    };
    /**4个背景的通用返回主界面的消失动画*/
    startGame.prototype.bg_VanishAni = function (bg, posX) {
        Laya.Tween.to(bg, { x: posX, alpha: 0, scaleX: 0, scaleY: 0, rotation: -720 }, 800, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            bg.rotation = 0;
        }, []), 0);
    };
    /**返回主界面初始化一些节点的位置*/
    startGame.prototype.returnStartInit = function () {
        this.bg_01.x = -1500;
        this.bg_01.alpha = 0;
        this.bg_02.x = 1500;
        this.bg_02.alpha = 0;
        this.bg_03.x = -1500;
        this.bg_03.alpha = 0;
        this.bg_04.x = 1500;
        this.bg_04.alpha = 0;
        this.bg_Pure.alpha = 0;
        this.btn_Start.x = 375;
        this.btn_Start.alpha = 0;
        this.btn_Start.scale(1, 1);
        this.LoGo.x = 375;
        this.LoGo.alpha = 0;
        this.LoGo.scale(1, 1);
        this.antiAddiction.alpha = 0;
        this.btn_Participate.alpha = 0;
        this.btn_Participate.scale(1, 1);
        this.btn_Ranking.alpha = 0;
        this.btn_Ranking.scale(1, 1);
        this.returnStartAni();
    };
    /**返回主界面动画*/
    /**开始游戏界面消失动画*/
    startGame.prototype.returnStartAni = function () {
        this.bg_01.x = 187;
        this.bg_01.y = 410;
        this.bg_02.x = 562;
        this.bg_02.y = 410;
        this.bg_03.x = 187;
        this.bg_03.y = 1230;
        this.bg_04.x = 562;
        this.bg_04.y = 1230;
        this.maskBg.alpha = 0;
        // 4个背景合并
        Laya.Tween.to(this.bg_01, { x: 187, alpha: 1, scaleX: 1, scaleY: 1, rotation: -720 }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            // 显示其他元素
            this.bg_Pure.alpha = 1;
            this.LoGo.alpha = 1;
            this.btn_Ranking.alpha = 1;
            this.btn_Participate.alpha = 1;
            this.bg_01.rotation = 0;
            this.btn_Start.scale(0.1, 0.1);
            this.starInterval = 300; //logo后面的星星出发间隔，开始很小，现在平稳
            Laya.Tween.to(this.btn_Start, { alpha: 1, scaleX: 1, scaleY: 1, rotation: 0 }, 200, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                // 第一次立即执行btn_Start抖动动画
                this.startBSwitch = true;
                this.startBInterval = 0;
                this.btnClink();
                //防沉迷文字动画
                Laya.Tween.to(this.antiAddiction, { alpha: 1 }, 200, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                }, []), 0);
            }, []), 0);
        }, []), 0);
        this.bg_ReturnAni(this.bg_02, 562, 720);
        this.bg_ReturnAni(this.bg_03, 187, 720);
        this.bg_ReturnAni(this.bg_04, 562, -720);
        // 黑色遮罩缓慢出现
        Laya.Tween.to(this.maskBg, { alpha: 0.8 }, 800, null, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    /**4个背景的通用返回主界面的消失动画*/
    startGame.prototype.bg_ReturnAni = function (bg, posX, rotate) {
        Laya.Tween.to(bg, { x: posX, alpha: 1, scaleX: 1, scaleY: 1, rotation: rotate }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            bg.rotation = 0;
        }, []), 0);
    };
    /**星星特效*/
    startGame.prototype.starShiningEffect = function () {
        var spacingX = 50; //logo以外扩大的像素范围
        var spacingY = 20;
        var insideW = this.LoGo.width - 20; //内部排除的像素范围
        var insideH = this.LoGo.height - 20;
        //右上角原点1
        var originX1 = this.LoGo.x - insideW / 2 - spacingX;
        var originY1 = this.LoGo.y - insideH / 2 - spacingY;
        //以logo为中心左右范围
        var x1;
        var y1;
        do {
            x1 = originX1 + Math.random() * (insideW + spacingX * 2);
        } while (Math.abs(x1 - this.LoGo.x) < insideW / 2);
        y1 = originY1 + Math.random() * insideH + spacingY;
        //以logo为中心上下范围
        //右上角原点2
        var originX2 = this.LoGo.x - insideW / 2;
        var originY2 = this.LoGo.y - insideH / 2 - spacingY;
        var x2;
        var y2;
        x2 = originX2 + Math.random() * insideW;
        do {
            y2 = originY2 + Math.random() * (insideH + spacingY * 2);
        } while (Math.abs(y2 - this.LoGo.y) < insideH / 2);
        // 在两个范围内随机产生一个位置
        var x;
        var y;
        var random = Math.floor(Math.random() * 3);
        if (random === 0) {
            x = x1;
            y = y1;
        }
        else {
            x = x2;
            y = y2;
        }
        var zoder = this.LoGo.zOrder - 1;
        this.selfScene['MainSceneControl'].explodeAni(this.starParent, x, y, 'starShining', 1, 100);
    };
    /**星星消失动画*/
    startGame.prototype.starVanish = function () {
        this.starSwich = false;
        Laya.Tween.to(this.starParent, { alpha: 0, }, 100, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.starParent.removeChildren(0, this.starParent._children.length - 1);
        }, []), 0);
    };
    /**开始按钮左右抖动*/
    startGame.prototype.startBtnAni = function () {
        this.startBInterval = 1050; //重置间隔，第一次的时候是0，立即执行
        Laya.Tween.to(this.btn_Start, { rotation: -5 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Start, { rotation: 5 }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                // 动画结束之后清除动画，防止重叠
                Laya.Tween.clearTween(this.btn_Start);
                this.startBNum++;
                if (this.startBNum % 5 === 0) {
                    this.wholeAni();
                    this.startBSwitch = false;
                }
            }, []), 0);
        }, []), 0);
    };
    /**整体动画*/
    startGame.prototype.wholeAni = function () {
        /**开始按钮旋转*/
        Laya.Tween.to(this.btn_Start, { rotation: 360 }, 800, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            this.btn_Start.rotation = 0;
            this.startBSwitch = true;
        }, []), 0);
        // logo上下位移
        Laya.Tween.to(this.LoGo, { y: this.LoGo.y - 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.LoGo, { y: this.LoGo.y + 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
        //下面两个按钮上下位移
        Laya.Tween.to(this.btn_Participate, { y: this.btn_Participate.y + 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Participate, { y: this.btn_Participate.y - 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
        Laya.Tween.to(this.btn_Ranking, { y: this.btn_Ranking.y + 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(this.btn_Ranking, { y: this.btn_Ranking.y - 100 }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
            }, []), 0);
        }, []), 0);
    };
    /**创建排行榜界面*/
    startGame.prototype.createRing = function () {
        this.btnClink();
        var ranking = Laya.Pool.getItemByCreateFun('ranking', this.ranking.create, this.ranking);
        this.selfScene.addChild(ranking);
        ranking.pos(0, 0);
    };
    /**按钮点击事件*/
    startGame.prototype.btnClink = function () {
        // 开始游戏
        this.btn_Start.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Start.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Start.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Start.on(Laya.Event.MOUSE_OUT, this, this.out);
        // 排行
        this.btn_Ranking.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Ranking.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Ranking.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Ranking.on(Laya.Event.MOUSE_OUT, this, this.out);
        // 分享
        this.btn_Participate.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Participate.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Participate.on(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Participate.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**关闭点击事件*/
    /**按钮点击事件*/
    startGame.prototype.closeBtnClink = function () {
        // 开始游戏
        this.btn_Start.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Start.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Start.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Start.off(Laya.Event.MOUSE_OUT, this, this.out);
        // 排行
        this.btn_Ranking.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Ranking.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Ranking.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Ranking.off(Laya.Event.MOUSE_OUT, this, this.out);
        // 分享
        this.btn_Participate.off(Laya.Event.MOUSE_DOWN, this, this.down);
        this.btn_Participate.off(Laya.Event.MOUSE_MOVE, this, this.move);
        this.btn_Participate.off(Laya.Event.MOUSE_UP, this, this.up);
        this.btn_Participate.off(Laya.Event.MOUSE_OUT, this, this.out);
    };
    startGame.prototype.down = function (event) {
        event.currentTarget.scale(0.95, 0.95);
        Laya.timer.pause();
    };
    /**移动*/
    startGame.prototype.move = function (event) {
        Laya.timer.resume();
        event.currentTarget.scale(1, 1);
    };
    /**抬起增加属性
     * 由于这里的按钮不是及时消失，所以要关闭点击事件
    */
    startGame.prototype.up = function (event) {
        event.currentTarget.scale(1, 1);
        if (event.currentTarget.name === 'btn_Start') {
            this.closeBtnClink();
            this.starVanish();
            this.vanishAni();
        }
        else if (event.currentTarget.name === 'btn_Participate') {
            this.selfScene['MainSceneControl'].wxShare();
        }
        else if (event.currentTarget.name === 'btn_Ranking') {
            this.createRing();
        }
        Laya.timer.resume();
    };
    /**出屏幕*/
    startGame.prototype.out = function (event) {
        Laya.timer.resume();
        event.currentTarget.scale(1, 1);
    };
    startGame.prototype.onUpdate = function () {
        var time = Date.now();
        // 星星动画
        if (this.starSwich) {
            if (time - this.starInterval > this.starTime) {
                this.starTime = time;
                this.starShiningEffect();
            }
        }
        // 开始按钮动画
        if (this.startBSwitch) {
            if (time - this.startBInterval > this.startBTime) {
                this.startBTime = time;
                this.startBtnAni();
            }
        }
    };
    startGame.prototype.onDisable = function () {
        Laya.Tween.clearAll(this);
        Laya.timer.clearAll(this);
    };
    return startGame;
}(Laya.Script));
exports.default = startGame;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Suspend = /** @class */ (function (_super) {
    __extends(Suspend, _super);
    function Suspend() {
        return _super.call(this) || this;
    }
    Suspend.prototype.onEnable = function () {
        this.init();
        this.bucketClink();
    };
    /**初始化必要属性*/
    Suspend.prototype.init = function () {
        this.self = this.owner;
        this.selfScene = this.self.scene;
        this.roleParent = this.selfScene['MainSceneControl'].roleParent;
        this.enemyParent = this.selfScene['MainSceneControl'].enemyParent;
        this.press = this.self.getChildByName('press');
        this.notPress = this.self.getChildByName('notPress');
        this.press.visible = false;
        this.notPress.visible = true;
    };
    /**主角的点击事件
    * 和长按出现属性展示页面
    * 滑动可以拖动主角到规定的位置
   */
    Suspend.prototype.bucketClink = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);
        this.self.on(Laya.Event.MOUSE_UP, this, this.up);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);
    };
    /**按下,给予目标位置，糖果走向目标位置;
     * 并且分数增加*/
    Suspend.prototype.down = function (event) {
        this.press.visible = true;
        this.notPress.visible = false;
        var suspend = this.selfScene['MainSceneControl'].suspend;
        if (!suspend) {
            this.selfScene['MainSceneControl'].suspend = true;
            // Laya.timer.pause();
        }
        else {
            this.selfScene['MainSceneControl'].suspend = false;
            // Laya.timer.resume();
        }
        // 打开和关闭敌人的属性
        for (var i = 0; i < this.enemyParent._children.length; i++) {
            var enemy = this.enemyParent._children[i];
            var propertyShow = enemy.getChildByName('propertyShow');
            if (!suspend) {
                propertyShow.alpha = 1;
            }
            else {
                propertyShow.alpha = 0;
            }
        }
        // 主角的属性
        for (var i = 0; i < this.roleParent._children.length; i++) {
            var role = this.roleParent._children[i];
            var propertyShow = role.getChildByName('propertyShow');
            if (!suspend) {
                this.selfScene['MainSceneControl'].suspend = true;
                propertyShow.alpha = 1;
            }
            else {
                this.selfScene['MainSceneControl'].suspend = false;
                propertyShow.alpha = 0;
            }
        }
    };
    /**移动*/
    Suspend.prototype.move = function (event) {
        this.press.visible = true;
        this.notPress.visible = false;
    };
    /**抬起*/
    Suspend.prototype.up = function () {
        this.press.visible = false;
        this.notPress.visible = true;
        this.self.scale(1, 1);
    };
    /**出屏幕*/
    Suspend.prototype.out = function () {
        this.press.visible = false;
        this.notPress.visible = true;
        this.self.scale(1, 1);
    };
    /**暂停状态显示所有属性框，非暂停状态不显示属性框*/
    Suspend.prototype.suspendedState = function () {
    };
    Suspend.prototype.onDisable = function () {
    };
    return Suspend;
}(Laya.Script));
exports.default = Suspend;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tools;
(function (tools) {
    /**
     *
     * @param n
     * @param m 第二个随机数不存在的话默认为10
     */
    function random(n, m) {
        m = m || 10;
        var c = m - n + 1;
        return Math.floor(Math.random() * c + n);
    }
    tools.random = random;
    /**
     *
     * @param arr
     * @param count
     * 从数组中随机取出count个数
     */
    function getRandomArrayElements(arr, count) {
        var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;
        while (i-- > min) {
            index = Math.floor((i + 1) * Math.random());
            temp = shuffled[index];
            shuffled[index] = shuffled[i];
            shuffled[i] = temp;
        }
        return shuffled.slice(min);
    }
    tools.getRandomArrayElements = getRandomArrayElements;
    function getArrayDifElements(arr, count) {
        var result = [];
        var i = 0;
        for (i; i < count; i++) {
            var temp = getDiffEle(arr.slice(), result, i);
            result.push(temp);
        }
        return result;
    }
    tools.getArrayDifElements = getArrayDifElements;
    function getDiffEle(arr, result, place) {
        var indexArr = [];
        var i = 0;
        for (i; i < arr.length - place; i++) {
            indexArr.push(i);
        }
        var ranIndex = Math.floor(Math.random() * indexArr.length);
        if (result.indexOf(arr[ranIndex]) === -1) {
            var backNum = arr[ranIndex];
            arr[ranIndex] = arr[indexArr.length - 1];
            return backNum;
        }
        else {
            arr.splice(ranIndex, 1);
            return getDiffEle(arr, result, place);
        }
    }
    tools.getDiffEle = getDiffEle;
    tools.roleDragCan = false;
    function copydata(obj) {
        var ret = {};
        Object.getOwnPropertyNames(obj).forEach(function (name) {
            ret[name] = obj[name];
        });
        return ret;
    }
    tools.copydata = copydata;
    /**
     * 数组复制
     */
    function fillArray(value, len) {
        var arr = [];
        for (var i = 0; i < len; i++) {
            arr.push(value);
        }
        return arr;
    }
    tools.fillArray = fillArray;
    /**
     *
     * @param angle 角度
     * @param XY 必须包含y上的速度
     */
    function speedByAngle(angle, XY) {
        if (angle % 90 === 0 || !angle) {
            console.error("计算的角度异常,需要查看：", angle);
            // debugger
            return;
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.y = XY.y;
        speedXY.x = speedXY.y / Math.tan(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedByAngle = speedByAngle;
    function speedXYByAngle(angle, speed) {
        if (angle % 90 === 0 || !angle) {
            //debugger
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.x = speed * Math.cos(angle * Math.PI / 180);
        speedXY.y = speed * Math.sin(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedXYByAngle = speedXYByAngle;
    function speedLabelByAngle(angle, speed, speedBate) {
        // if (angle % 90 === 0 || !angle) {
        //     debugger
        // }
        var speedXY = { x: 0, y: 0 };
        var selfAngle = angle;
        var defaultSpeed = speed;
        var bate = speedBate || 1;
        if (selfAngle % 90 === 0) {
            if (selfAngle === 0 || selfAngle === 360) {
                speedXY.x = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 90) {
                speedXY.y = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 180) {
                speedXY.x = -Math.abs(defaultSpeed) * bate;
            }
            else {
                speedXY.y = -Math.abs(defaultSpeed) * bate;
            }
        }
        else {
            var tempXY = tools.speedXYByAngle(selfAngle, defaultSpeed);
            speedXY.x = tempXY.x;
            speedXY.y = tempXY.y;
            if (selfAngle > 0 && selfAngle < 180) {
                speedXY.y = Math.abs(speedXY.y) * bate;
            }
            else {
                speedXY.y = -Math.abs(speedXY.y) * bate;
            }
            if (selfAngle > 90 && selfAngle < 270) {
                speedXY.x = -Math.abs(speedXY.x) * bate;
            }
            else {
                speedXY.x = Math.abs(speedXY.x) * bate;
            }
        }
        return speedXY;
    }
    tools.speedLabelByAngle = speedLabelByAngle;
    /**
     *
     * @param degree 角度
     * 根据角度计算弧度
     */
    function getRad(degree) {
        return degree / 180 * Math.PI;
    }
    tools.getRad = getRad;
    /**
     * 求圆上的点的坐标~
     */
    function getRoundPos(angle, radius, centPos) {
        var center = centPos; //圆心坐标
        var radius = radius; //半径
        var hudu = (2 * Math.PI / 360) * angle; //90度角的弧度
        var X = center.x + Math.sin(hudu) * radius; //求出90度角的x坐标
        var Y = center.y - Math.cos(hudu) * radius; //求出90度角的y坐标
        return { x: X, y: Y };
    }
    tools.getRoundPos = getRoundPos;
    /**
     * 转化大的数字
     */
    function converteNum(num) {
        if (typeof (num) !== "number") {
            console.warn("要转化的数字并不为number");
            return num;
        }
        var backNum;
        if (num < 1000) {
            backNum = "" + num;
        }
        else if (num < 1000000) {
            backNum = "" + (num / 1000).toFixed(1) + "k";
        }
        else if (num < 10e8) {
            backNum = "" + (num / 1000000).toFixed(1) + "m";
        }
        else {
            backNum = "" + num;
        }
        return backNum;
    }
    tools.converteNum = converteNum;
})(tools = exports.tools || (exports.tools = {}));
exports.default = tools;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
